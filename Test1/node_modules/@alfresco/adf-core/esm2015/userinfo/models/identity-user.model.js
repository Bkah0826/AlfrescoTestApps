/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class IdentityUserModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.id = obj.id || null;
            this.firstName = obj.firstName || null;
            this.lastName = obj.lastName || null;
            this.email = obj.email || null;
            this.username = obj.username || null;
            this.createdTimestamp = obj.createdTimestamp || null;
            this.emailVerified = obj.emailVerified || null;
            this.enabled = obj.enabled || null;
        }
    }
}
if (false) {
    /** @type {?} */
    IdentityUserModel.prototype.id;
    /** @type {?} */
    IdentityUserModel.prototype.firstName;
    /** @type {?} */
    IdentityUserModel.prototype.lastName;
    /** @type {?} */
    IdentityUserModel.prototype.email;
    /** @type {?} */
    IdentityUserModel.prototype.username;
    /** @type {?} */
    IdentityUserModel.prototype.createdTimestamp;
    /** @type {?} */
    IdentityUserModel.prototype.emailVerified;
    /** @type {?} */
    IdentityUserModel.prototype.enabled;
}
export class IdentityUserPasswordModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.type = obj.type;
            this.value = obj.value;
            this.temporary = obj.temporary;
        }
    }
}
if (false) {
    /** @type {?} */
    IdentityUserPasswordModel.prototype.type;
    /** @type {?} */
    IdentityUserPasswordModel.prototype.value;
    /** @type {?} */
    IdentityUserPasswordModel.prototype.temporary;
}
/**
 * @record
 */
export function IdentityUserQueryResponse() { }
if (false) {
    /** @type {?} */
    IdentityUserQueryResponse.prototype.entries;
    /** @type {?} */
    IdentityUserQueryResponse.prototype.pagination;
}
export class IdentityUserQueryCloudRequestModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.first = obj.first;
            this.max = obj.max;
        }
    }
}
if (false) {
    /** @type {?} */
    IdentityUserQueryCloudRequestModel.prototype.first;
    /** @type {?} */
    IdentityUserQueryCloudRequestModel.prototype.max;
}
export class IdentityJoinGroupRequestModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        if (obj) {
            this.realm = obj.realm;
            this.userId = obj.userId;
            this.groupId = obj.groupId;
        }
    }
}
if (false) {
    /** @type {?} */
    IdentityJoinGroupRequestModel.prototype.realm;
    /** @type {?} */
    IdentityJoinGroupRequestModel.prototype.userId;
    /** @type {?} */
    IdentityJoinGroupRequestModel.prototype.groupId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWRlbnRpdHktdXNlci5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbInVzZXJpbmZvL21vZGVscy9pZGVudGl0eS11c2VyLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBLE1BQU0sT0FBTyxpQkFBaUI7Ozs7SUFVMUIsWUFBWSxHQUFTO1FBQ2pCLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQztZQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7WUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQztZQUMvQixJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLENBQUMsZ0JBQWdCLElBQUksSUFBSSxDQUFDO1lBQ3JELElBQUksQ0FBQyxhQUFhLEdBQUcsR0FBRyxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUM7WUFDL0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQztTQUN0QztJQUNMLENBQUM7Q0FDSjs7O0lBckJHLCtCQUFXOztJQUNYLHNDQUFrQjs7SUFDbEIscUNBQWlCOztJQUNqQixrQ0FBYzs7SUFDZCxxQ0FBaUI7O0lBQ2pCLDZDQUF1Qjs7SUFDdkIsMENBQXdCOztJQUN4QixvQ0FBa0I7O0FBZ0J0QixNQUFNLE9BQU8seUJBQXlCOzs7O0lBTWxDLFlBQVksR0FBUztRQUNqQixJQUFJLEdBQUcsRUFBRTtZQUNMLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQztZQUNyQixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7WUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQztDQUNKOzs7SUFYRyx5Q0FBYTs7SUFDYiwwQ0FBYzs7SUFDZCw4Q0FBbUI7Ozs7O0FBV3ZCLCtDQUlDOzs7SUFGRyw0Q0FBNkI7O0lBQzdCLCtDQUF1Qjs7QUFHM0IsTUFBTSxPQUFPLGtDQUFrQzs7OztJQUszQyxZQUFZLEdBQVM7UUFDakIsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7WUFDdkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO1NBQ3RCO0lBQ0wsQ0FBQztDQUNKOzs7SUFURyxtREFBYzs7SUFDZCxpREFBWTs7QUFVaEIsTUFBTSxPQUFPLDZCQUE2Qjs7OztJQU10QyxZQUFZLEdBQVM7UUFDakIsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7WUFDdkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztTQUM5QjtJQUNMLENBQUM7Q0FDSjs7O0lBWEcsOENBQWM7O0lBQ2QsK0NBQWU7O0lBQ2YsZ0RBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgUGFnaW5hdGlvbiB9IGZyb20gJ0BhbGZyZXNjby9qcy1hcGknO1xuXG5leHBvcnQgY2xhc3MgSWRlbnRpdHlVc2VyTW9kZWwge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gICAgbGFzdE5hbWU6IHN0cmluZztcbiAgICBlbWFpbDogc3RyaW5nO1xuICAgIHVzZXJuYW1lOiBzdHJpbmc7XG4gICAgY3JlYXRlZFRpbWVzdGFtcD86IGFueTtcbiAgICBlbWFpbFZlcmlmaWVkPzogYm9vbGVhbjtcbiAgICBlbmFibGVkPzogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKG9iaj86IGFueSkge1xuICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICB0aGlzLmlkID0gb2JqLmlkIHx8IG51bGw7XG4gICAgICAgICAgICB0aGlzLmZpcnN0TmFtZSA9IG9iai5maXJzdE5hbWUgfHwgbnVsbDtcbiAgICAgICAgICAgIHRoaXMubGFzdE5hbWUgPSBvYmoubGFzdE5hbWUgfHwgbnVsbDtcbiAgICAgICAgICAgIHRoaXMuZW1haWwgPSBvYmouZW1haWwgfHwgbnVsbDtcbiAgICAgICAgICAgIHRoaXMudXNlcm5hbWUgPSBvYmoudXNlcm5hbWUgfHwgbnVsbDtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlZFRpbWVzdGFtcCA9IG9iai5jcmVhdGVkVGltZXN0YW1wIHx8IG51bGw7XG4gICAgICAgICAgICB0aGlzLmVtYWlsVmVyaWZpZWQgPSBvYmouZW1haWxWZXJpZmllZCB8fCBudWxsO1xuICAgICAgICAgICAgdGhpcy5lbmFibGVkID0gb2JqLmVuYWJsZWQgfHwgbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIElkZW50aXR5VXNlclBhc3N3b3JkTW9kZWwge1xuXG4gICAgdHlwZTogc3RyaW5nO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgdGVtcG9yYXJ5OiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgIHRoaXMudHlwZSA9IG9iai50eXBlO1xuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IG9iai52YWx1ZTtcbiAgICAgICAgICAgIHRoaXMudGVtcG9yYXJ5ID0gb2JqLnRlbXBvcmFyeTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBJZGVudGl0eVVzZXJRdWVyeVJlc3BvbnNlIHtcblxuICAgIGVudHJpZXM6IElkZW50aXR5VXNlck1vZGVsW107XG4gICAgcGFnaW5hdGlvbjogUGFnaW5hdGlvbjtcbn1cblxuZXhwb3J0IGNsYXNzIElkZW50aXR5VXNlclF1ZXJ5Q2xvdWRSZXF1ZXN0TW9kZWwge1xuXG4gICAgZmlyc3Q6IG51bWJlcjtcbiAgICBtYXg6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKG9iaj86IGFueSkge1xuICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICB0aGlzLmZpcnN0ID0gb2JqLmZpcnN0O1xuICAgICAgICAgICAgdGhpcy5tYXggPSBvYmoubWF4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgSWRlbnRpdHlKb2luR3JvdXBSZXF1ZXN0TW9kZWwge1xuXG4gICAgcmVhbG06IHN0cmluZztcbiAgICB1c2VySWQ6IHN0cmluZztcbiAgICBncm91cElkOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgaWYgKG9iaikge1xuICAgICAgICAgICAgdGhpcy5yZWFsbSA9IG9iai5yZWFsbTtcbiAgICAgICAgICAgIHRoaXMudXNlcklkID0gb2JqLnVzZXJJZDtcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBJZCA9IG9iai5ncm91cElkO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19