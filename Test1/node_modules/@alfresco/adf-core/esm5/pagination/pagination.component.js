/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation, ChangeDetectorRef, HostBinding } from '@angular/core';
import { Pagination } from '@alfresco/js-api';
import { Subject } from 'rxjs';
import { PaginationModel } from '../models/pagination.model';
import { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';
import { takeUntil } from 'rxjs/operators';
var PaginationComponent = /** @class */ (function () {
    function PaginationComponent(cdr, userPreferencesService) {
        this.cdr = cdr;
        this.userPreferencesService = userPreferencesService;
        /**
         * Pagination object.
         */
        this.pagination = PaginationComponent.DEFAULT_PAGINATION;
        /**
         * Emitted when pagination changes in any way.
         */
        this.change = new EventEmitter();
        /**
         * Emitted when the page number changes.
         */
        this.changePageNumber = new EventEmitter();
        /**
         * Emitted when the page size changes.
         */
        this.changePageSize = new EventEmitter();
        /**
         * Emitted when the next page is requested.
         */
        this.nextPage = new EventEmitter();
        /**
         * Emitted when the previous page is requested.
         */
        this.prevPage = new EventEmitter();
        this.onDestroy$ = new Subject();
    }
    /**
     * @return {?}
     */
    PaginationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.userPreferencesService
            .select(UserPreferenceValues.PaginationSize)
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((/**
         * @param {?} pagSize
         * @return {?}
         */
        function (pagSize) { return _this.pagination.maxItems = pagSize; }));
        if (!this.supportedPageSizes) {
            this.supportedPageSizes = this.userPreferencesService.supportedPageSizes;
        }
        if (this.target) {
            this.target.pagination
                .pipe(takeUntil(this.onDestroy$))
                .subscribe((/**
             * @param {?} pagination
             * @return {?}
             */
            function (pagination) {
                if (pagination.count === 0 && !_this.isFirstPage) {
                    _this.goPrevious();
                }
                _this.pagination = pagination;
                _this.cdr.detectChanges();
            }));
        }
        if (!this.pagination) {
            this.pagination = PaginationComponent.DEFAULT_PAGINATION;
        }
    };
    Object.defineProperty(PaginationComponent.prototype, "lastPage", {
        get: /**
         * @return {?}
         */
        function () {
            var _a = this.pagination, maxItems = _a.maxItems, totalItems = _a.totalItems;
            return (totalItems && maxItems)
                ? Math.ceil(totalItems / maxItems)
                : 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "current", {
        get: /**
         * @return {?}
         */
        function () {
            var _a = this.pagination, maxItems = _a.maxItems, skipCount = _a.skipCount;
            return (skipCount && maxItems)
                ? Math.floor(skipCount / maxItems) + 1
                : 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "isLastPage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.current === this.lastPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "isFirstPage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.current === 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "next", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isLastPage ? this.current : this.current + 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "previous", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isFirstPage ? 1 : this.current - 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "hasItems", {
        get: /**
         * @return {?}
         */
        function () {
            return this.pagination && this.pagination.count > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "isEmpty", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.hasItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "range", {
        get: /**
         * @return {?}
         */
        function () {
            var _a = this.pagination, skipCount = _a.skipCount, maxItems = _a.maxItems, totalItems = _a.totalItems;
            var isLastPage = this.isLastPage;
            /** @type {?} */
            var start = totalItems ? skipCount + 1 : 0;
            /** @type {?} */
            var end = isLastPage ? totalItems : skipCount + maxItems;
            return [start, end];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationComponent.prototype, "pages", {
        get: /**
         * @return {?}
         */
        function () {
            return Array(this.lastPage)
                .fill('n')
                .map((/**
             * @param {?} item
             * @param {?} index
             * @return {?}
             */
            function (item, index) { return (index + 1); }));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PaginationComponent.prototype.goNext = /**
     * @return {?}
     */
    function () {
        if (this.hasItems) {
            /** @type {?} */
            var maxItems = this.pagination.maxItems;
            /** @type {?} */
            var skipCount = (this.next - 1) * maxItems;
            this.pagination.skipCount = skipCount;
            this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {
                skipCount: skipCount,
                maxItems: maxItems
            });
        }
    };
    /**
     * @return {?}
     */
    PaginationComponent.prototype.goPrevious = /**
     * @return {?}
     */
    function () {
        if (this.hasItems) {
            /** @type {?} */
            var maxItems = this.pagination.maxItems;
            /** @type {?} */
            var skipCount = (this.previous - 1) * maxItems;
            this.pagination.skipCount = skipCount;
            this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {
                skipCount: skipCount,
                maxItems: maxItems
            });
        }
    };
    /**
     * @param {?} pageNumber
     * @return {?}
     */
    PaginationComponent.prototype.onChangePageNumber = /**
     * @param {?} pageNumber
     * @return {?}
     */
    function (pageNumber) {
        if (this.hasItems) {
            /** @type {?} */
            var maxItems = this.pagination.maxItems;
            /** @type {?} */
            var skipCount = (pageNumber - 1) * maxItems;
            this.pagination.skipCount = skipCount;
            this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {
                skipCount: skipCount,
                maxItems: maxItems
            });
        }
    };
    /**
     * @param {?} maxItems
     * @return {?}
     */
    PaginationComponent.prototype.onChangePageSize = /**
     * @param {?} maxItems
     * @return {?}
     */
    function (maxItems) {
        this.pagination.skipCount = 0;
        this.userPreferencesService.paginationSize = maxItems;
        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {
            skipCount: 0,
            maxItems: maxItems
        });
    };
    /**
     * @return {?}
     */
    PaginationComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    };
    /**
     * @param {?} action
     * @param {?} params
     * @return {?}
     */
    PaginationComponent.prototype.handlePaginationEvent = /**
     * @param {?} action
     * @param {?} params
     * @return {?}
     */
    function (action, params) {
        var _a = PaginationComponent.ACTIONS, NEXT_PAGE = _a.NEXT_PAGE, PREV_PAGE = _a.PREV_PAGE, CHANGE_PAGE_NUMBER = _a.CHANGE_PAGE_NUMBER, CHANGE_PAGE_SIZE = _a.CHANGE_PAGE_SIZE;
        var _b = this, change = _b.change, changePageNumber = _b.changePageNumber, changePageSize = _b.changePageSize, nextPage = _b.nextPage, prevPage = _b.prevPage, pagination = _b.pagination;
        /** @type {?} */
        var paginationModel = Object.assign({}, pagination, params);
        if (action === NEXT_PAGE) {
            nextPage.emit(paginationModel);
        }
        if (action === PREV_PAGE) {
            prevPage.emit(paginationModel);
        }
        if (action === CHANGE_PAGE_NUMBER) {
            changePageNumber.emit(paginationModel);
        }
        if (action === CHANGE_PAGE_SIZE) {
            changePageSize.emit(paginationModel);
        }
        change.emit(params);
        if (this.target) {
            this.target.updatePagination(params);
        }
    };
    PaginationComponent.DEFAULT_PAGINATION = new Pagination({
        skipCount: 0,
        maxItems: 25,
        totalItems: 0
    });
    PaginationComponent.ACTIONS = {
        NEXT_PAGE: 'NEXT_PAGE',
        PREV_PAGE: 'PREV_PAGE',
        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',
        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'
    };
    PaginationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-pagination',
                    host: { 'class': 'adf-pagination' },
                    template: "<ng-container *ngIf=\"hasItems\">\n    <div class=\"adf-pagination__block adf-pagination__range-block\">\n        <span class=\"adf-pagination__range\">\n            {{\n                'CORE.PAGINATION.ITEMS_RANGE' | translate: {\n                    range: range.join('-'),\n                    total: pagination.totalItems\n                }\n            }}\n        </span>\n    </div>\n\n    <div class=\"adf-pagination__block adf-pagination__perpage-block\">\n        <span>\n            {{ 'CORE.PAGINATION.ITEMS_PER_PAGE' | translate }}\n        </span>\n\n        <span class=\"adf-pagination__max-items\">\n            {{ pagination.maxItems }}\n        </span>\n\n        <button\n            mat-icon-button\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.ITEMS_PER_PAGE' | translate\"\n            [matMenuTriggerFor]=\"pageSizeMenu\">\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <mat-menu #pageSizeMenu=\"matMenu\" class=\"adf-pagination__page-selector\">\n            <button\n                mat-menu-item\n                *ngFor=\"let pageSize of supportedPageSizes\"\n                (click)=\"onChangePageSize(pageSize)\">\n                {{ pageSize }}\n            </button>\n        </mat-menu>\n    </div>\n\n    <div class=\"adf-pagination__block adf-pagination__actualinfo-block\">\n        <span class=\"adf-pagination__current-page\">\n            {{ 'CORE.PAGINATION.CURRENT_PAGE' | translate: { number: current } }}\n        </span>\n\n        <button\n            mat-icon-button\n            data-automation-id=\"page-selector\"\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.CURRENT_PAGE' | translate\"\n            [matMenuTriggerFor]=\"pagesMenu\"\n            *ngIf=\"pages.length > 1\">\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <span class=\"adf-pagination__total-pages\">\n            {{ 'CORE.PAGINATION.TOTAL_PAGES' | translate: { total: pages.length } }}\n        </span>\n\n        <mat-menu #pagesMenu=\"matMenu\" class=\"adf-pagination__page-selector\">\n            <button\n                mat-menu-item\n                *ngFor=\"let pageNumber of pages\"\n                (click)=\"onChangePageNumber(pageNumber)\">\n                {{ pageNumber }}\n            </button>\n        </mat-menu>\n    </div>\n\n    <div class=\"adf-pagination__block adf-pagination__controls-block\">\n        <button\n            class=\"adf-pagination__previous-button\"\n            mat-icon-button\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.PREVIOUS_PAGE' | translate\"\n            [disabled]=\"isFirstPage\"\n            (click)=\"goPrevious()\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n        </button>\n\n        <button\n            class=\"adf-pagination__next-button\"\n            mat-icon-button\n            [attr.aria-label]=\"'CORE.PAGINATION.ARIA.NEXT_PAGE' | translate\"\n            [disabled]=\"isLastPage\"\n            (click)=\"goNext()\">\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </button>\n    </div>\n</ng-container>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PaginationComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: UserPreferencesService }
    ]; };
    PaginationComponent.propDecorators = {
        target: [{ type: Input }],
        supportedPageSizes: [{ type: Input }],
        pagination: [{ type: Input }],
        change: [{ type: Output }],
        changePageNumber: [{ type: Output }],
        changePageSize: [{ type: Output }],
        nextPage: [{ type: Output }],
        prevPage: [{ type: Output }],
        isEmpty: [{ type: HostBinding, args: ['class.adf-pagination__empty',] }]
    };
    return PaginationComponent;
}());
export { PaginationComponent };
if (false) {
    /** @type {?} */
    PaginationComponent.DEFAULT_PAGINATION;
    /** @type {?} */
    PaginationComponent.ACTIONS;
    /**
     * Component that provides custom pagination support.
     * @type {?}
     */
    PaginationComponent.prototype.target;
    /**
     * An array of page sizes.
     * @type {?}
     */
    PaginationComponent.prototype.supportedPageSizes;
    /**
     * Pagination object.
     * @type {?}
     */
    PaginationComponent.prototype.pagination;
    /**
     * Emitted when pagination changes in any way.
     * @type {?}
     */
    PaginationComponent.prototype.change;
    /**
     * Emitted when the page number changes.
     * @type {?}
     */
    PaginationComponent.prototype.changePageNumber;
    /**
     * Emitted when the page size changes.
     * @type {?}
     */
    PaginationComponent.prototype.changePageSize;
    /**
     * Emitted when the next page is requested.
     * @type {?}
     */
    PaginationComponent.prototype.nextPage;
    /**
     * Emitted when the previous page is requested.
     * @type {?}
     */
    PaginationComponent.prototype.prevPage;
    /**
     * @type {?}
     * @private
     */
    PaginationComponent.prototype.onDestroy$;
    /**
     * @type {?}
     * @private
     */
    PaginationComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    PaginationComponent.prototype.userPreferencesService;
}
//# sourceMappingURL=data:application/json;base64,