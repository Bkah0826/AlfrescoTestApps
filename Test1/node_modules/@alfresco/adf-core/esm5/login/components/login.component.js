/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { Router, ActivatedRoute } from '@angular/router';
import { Location } from '@angular/common';
import { AuthenticationService } from '../../services/authentication.service';
import { LogService } from '../../services/log.service';
import { TranslationService } from '../../services/translation.service';
import { UserPreferencesService } from '../../services/user-preferences.service';
import { LoginErrorEvent } from '../models/login-error.event';
import { LoginSubmitEvent } from '../models/login-submit.event';
import { LoginSuccessEvent } from '../models/login-success.event';
import { AppConfigService, AppConfigValues } from '../../app-config/app-config.service';
import { DomSanitizer } from '@angular/platform-browser';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
/** @enum {number} */
var LoginSteps = {
    Landing: 0,
    Checking: 1,
    Welcome: 2,
};
LoginSteps[LoginSteps.Landing] = 'Landing';
LoginSteps[LoginSteps.Checking] = 'Checking';
LoginSteps[LoginSteps.Welcome] = 'Welcome';
/**
 * @record
 */
function ValidationMessage() { }
if (false) {
    /** @type {?} */
    ValidationMessage.prototype.value;
    /** @type {?|undefined} */
    ValidationMessage.prototype.params;
}
var LoginComponent = /** @class */ (function () {
    /**
     * Constructor
     * @param _fb
     * @param authService
     * @param translate
     */
    function LoginComponent(_fb, authService, translateService, logService, router, appConfig, userPreferences, location, route, sanitizer) {
        this._fb = _fb;
        this.authService = authService;
        this.translateService = translateService;
        this.logService = logService;
        this.router = router;
        this.appConfig = appConfig;
        this.userPreferences = userPreferences;
        this.location = location;
        this.route = route;
        this.sanitizer = sanitizer;
        this.isPasswordShow = false;
        /**
         * Should the `Remember me` checkbox be shown? When selected, this
         * option will remember the logged-in user after the browser is closed
         * to avoid logging in repeatedly.
         */
        this.showRememberMe = true;
        /**
         * Should the extra actions (`Need Help`, `Register`, etc) be shown?
         */
        this.showLoginActions = true;
        /**
         * Sets the URL of the NEED HELP link in the footer.
         */
        this.needHelpLink = '';
        /**
         * Sets the URL of the REGISTER link in the footer.
         */
        this.registerLink = '';
        /**
         * Path to a custom logo image.
         */
        this.logoImageUrl = './assets/images/alfresco-logo.svg';
        /**
         * Path to a custom background image.
         */
        this.backgroundImageUrl = './assets/images/background.svg';
        /**
         * The copyright text below the login box.
         */
        this.copyrightText = '\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';
        /**
         * Route to redirect to on successful login.
         */
        this.successRoute = null;
        /**
         * Emitted when the login is successful.
         */
        this.success = new EventEmitter();
        /**
         * Emitted when the login fails.
         */
        this.error = new EventEmitter();
        /**
         * Emitted when the login form is submitted.
         */
        this.executeSubmit = new EventEmitter();
        this.implicitFlow = false;
        this.isError = false;
        this.actualLoginStep = LoginSteps.Landing;
        this.LoginSteps = LoginSteps;
        this.rememberMe = true;
        this.minLength = 2;
        this.onDestroy$ = new Subject();
        this.initFormError();
        this.initFormFieldsMessages();
    }
    /**
     * @return {?}
     */
    LoginComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.authService.isOauth()) {
            /** @type {?} */
            var oauth = this.appConfig.get(AppConfigValues.OAUTHCONFIG, null);
            if (oauth && oauth.implicitFlow) {
                this.implicitFlow = true;
            }
        }
        if (this.authService.isEcmLoggedIn() || this.authService.isBpmLoggedIn()) {
            this.location.forward();
        }
        else {
            this.route.queryParams.subscribe((/**
             * @param {?} params
             * @return {?}
             */
            function (params) {
                /** @type {?} */
                var url = params['redirectUrl'];
                /** @type {?} */
                var provider = _this.appConfig.get(AppConfigValues.PROVIDERS);
                _this.authService.setRedirect({ provider: provider, url: url });
            }));
        }
        if (this.hasCustomFieldsValidation()) {
            this.form = this._fb.group(this.fieldsValidation);
        }
        else {
            this.initFormFieldsDefault();
            this.initFormFieldsMessagesDefault();
        }
        this.form.valueChanges
            .pipe(takeUntil(this.onDestroy$))
            .subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) { return _this.onValueChanged(data); }));
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.onDestroy$.next(true);
        this.onDestroy$.complete();
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.submit = /**
     * @return {?}
     */
    function () {
        this.onSubmit(this.form.value);
    };
    /**
     * Method called on submit form
     * @param values
     * @param event
     */
    /**
     * Method called on submit form
     * @param {?} values
     * @return {?}
     */
    LoginComponent.prototype.onSubmit = /**
     * Method called on submit form
     * @param {?} values
     * @return {?}
     */
    function (values) {
        this.disableError();
        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {
            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';
            this.isError = true;
        }
        else {
            /** @type {?} */
            var args = new LoginSubmitEvent({
                controls: { username: this.form.controls.username }
            });
            this.executeSubmit.emit(args);
            if (args.defaultPrevented) {
                return false;
            }
            else {
                this.performLogin(values);
            }
        }
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.implicitLogin = /**
     * @return {?}
     */
    function () {
        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {
            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';
            this.isError = true;
        }
        else {
            this.authService.ssoImplicitLogin();
        }
    };
    /**
     * The method check the error in the form and push the error in the formError object
     * @param data
     */
    /**
     * The method check the error in the form and push the error in the formError object
     * @param {?} data
     * @return {?}
     */
    LoginComponent.prototype.onValueChanged = /**
     * The method check the error in the form and push the error in the formError object
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.disableError();
        for (var field in this.formError) {
            if (field) {
                this.formError[field] = '';
                /** @type {?} */
                var hasError = (this.form.controls[field].errors && data[field] !== '') ||
                    (this.form.controls[field].dirty &&
                        !this.form.controls[field].valid);
                if (hasError) {
                    for (var key in this.form.controls[field].errors) {
                        if (key) {
                            /** @type {?} */
                            var message = this._message[field][key];
                            if (message && message.value) {
                                /** @type {?} */
                                var translated = this.translateService.instant(message.value, message.params);
                                this.formError[field] += translated;
                            }
                        }
                    }
                }
            }
        }
    };
    /**
     * @private
     * @param {?} values
     * @return {?}
     */
    LoginComponent.prototype.performLogin = /**
     * @private
     * @param {?} values
     * @return {?}
     */
    function (values) {
        var _this = this;
        this.actualLoginStep = LoginSteps.Checking;
        this.authService
            .login(values.username, values.password, this.rememberMe)
            .subscribe((/**
         * @param {?} token
         * @return {?}
         */
        function (token) {
            /** @type {?} */
            var redirectUrl = _this.authService.getRedirect();
            _this.actualLoginStep = LoginSteps.Welcome;
            _this.userPreferences.setStoragePrefix(values.username);
            values.password = null;
            _this.success.emit(new LoginSuccessEvent(token, values.username, null));
            if (redirectUrl) {
                _this.authService.setRedirect(null);
                _this.router.navigateByUrl(redirectUrl);
            }
            else if (_this.successRoute) {
                _this.router.navigate([_this.successRoute]);
            }
        }), (/**
         * @param {?} err
         * @return {?}
         */
        function (err) {
            _this.actualLoginStep = LoginSteps.Landing;
            _this.displayErrorMessage(err);
            _this.isError = true;
            _this.error.emit(new LoginErrorEvent(err));
        }), (/**
         * @return {?}
         */
        function () { return _this.logService.info('Login done'); }));
    };
    /**
     * Check and display the right error message in the UI
     */
    /**
     * Check and display the right error message in the UI
     * @private
     * @param {?} err
     * @return {?}
     */
    LoginComponent.prototype.displayErrorMessage = /**
     * Check and display the right error message in the UI
     * @private
     * @param {?} err
     * @return {?}
     */
    function (err) {
        if (err.error &&
            err.error.crossDomain &&
            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1) {
            this.errorMsg = err.error.message;
        }
        else if (err.status === 403 &&
            err.message.indexOf('Invalid CSRF-token') !== -1) {
            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';
        }
        else if (err.status === 403 &&
            err.message.indexOf('The system is currently in read-only mode') !==
                -1) {
            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';
        }
        else {
            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';
        }
    };
    /**
     * Add a custom form error for a field
     * @param field
     * @param msg
     */
    /**
     * Add a custom form error for a field
     * @param {?} field
     * @param {?} msg
     * @return {?}
     */
    LoginComponent.prototype.addCustomFormError = /**
     * Add a custom form error for a field
     * @param {?} field
     * @param {?} msg
     * @return {?}
     */
    function (field, msg) {
        this.formError[field] += msg;
    };
    /**
     * Add a custom validation rule error for a field
     * @param field
     * @param ruleId - i.e. required | minlength | maxlength
     * @param msg
     */
    /**
     * Add a custom validation rule error for a field
     * @param {?} field
     * @param {?} ruleId - i.e. required | minlength | maxlength
     * @param {?} msg
     * @param {?=} params
     * @return {?}
     */
    LoginComponent.prototype.addCustomValidationError = /**
     * Add a custom validation rule error for a field
     * @param {?} field
     * @param {?} ruleId - i.e. required | minlength | maxlength
     * @param {?} msg
     * @param {?=} params
     * @return {?}
     */
    function (field, ruleId, msg, params) {
        this._message[field][ruleId] = {
            value: msg,
            params: params
        };
    };
    /**
     * Display and hide the password value.
     */
    /**
     * Display and hide the password value.
     * @return {?}
     */
    LoginComponent.prototype.toggleShowPassword = /**
     * Display and hide the password value.
     * @return {?}
     */
    function () {
        this.isPasswordShow = !this.isPasswordShow;
    };
    /**
     * The method return if a field is valid or not
     * @param field
     */
    /**
     * The method return if a field is valid or not
     * @param {?} field
     * @return {?}
     */
    LoginComponent.prototype.isErrorStyle = /**
     * The method return if a field is valid or not
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return !field.valid && field.dirty && !field.pristine;
    };
    /**
     * Trim username
     */
    /**
     * Trim username
     * @param {?} event
     * @return {?}
     */
    LoginComponent.prototype.trimUsername = /**
     * Trim username
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.target.value = event.target.value.trim();
    };
    /**
     * @return {?}
     */
    LoginComponent.prototype.getBackgroundUrlImageUrl = /**
     * @return {?}
     */
    function () {
        return this.sanitizer.bypassSecurityTrustStyle("url(" + this.backgroundImageUrl + ")");
    };
    /**
     * Default formError values
     */
    /**
     * Default formError values
     * @private
     * @return {?}
     */
    LoginComponent.prototype.initFormError = /**
     * Default formError values
     * @private
     * @return {?}
     */
    function () {
        this.formError = {
            username: '',
            password: ''
        };
    };
    /**
     * Init form fields messages
     */
    /**
     * Init form fields messages
     * @private
     * @return {?}
     */
    LoginComponent.prototype.initFormFieldsMessages = /**
     * Init form fields messages
     * @private
     * @return {?}
     */
    function () {
        this._message = {
            username: {},
            password: {}
        };
    };
    /**
     * Default form fields messages
     */
    /**
     * Default form fields messages
     * @private
     * @return {?}
     */
    LoginComponent.prototype.initFormFieldsMessagesDefault = /**
     * Default form fields messages
     * @private
     * @return {?}
     */
    function () {
        this._message = {
            username: {
                required: {
                    value: 'LOGIN.MESSAGES.USERNAME-REQUIRED'
                },
                minLength: {
                    value: 'LOGIN.MESSAGES.USERNAME-MIN',
                    params: {
                        /**
                         * @return {?}
                         */
                        get minLength() {
                            return this.minLength;
                        }
                    }
                }
            },
            password: {
                required: {
                    value: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'
                }
            }
        };
    };
    /**
     * @private
     * @return {?}
     */
    LoginComponent.prototype.initFormFieldsDefault = /**
     * @private
     * @return {?}
     */
    function () {
        this.form = this._fb.group({
            username: ['', Validators.required],
            password: ['', Validators.required]
        });
    };
    /**
     * Disable the error flag
     */
    /**
     * Disable the error flag
     * @private
     * @return {?}
     */
    LoginComponent.prototype.disableError = /**
     * Disable the error flag
     * @private
     * @return {?}
     */
    function () {
        this.isError = false;
        this.initFormError();
    };
    /**
     * @private
     * @return {?}
     */
    LoginComponent.prototype.hasCustomFieldsValidation = /**
     * @private
     * @return {?}
     */
    function () {
        return this.fieldsValidation !== undefined;
    };
    LoginComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-login',
                    template: "<div class=\"adf-login-content\" [style.background-image]=\"getBackgroundUrlImageUrl()\">\n    <div class=\"adf-ie11FixerParent\">\n        <div class=\"adf-ie11FixerChild\">\n\n            <mat-card class=\"adf-login-card-wide\">\n                <form id=\"adf-login-form\" [formGroup]=\"form\" (submit)=\"onSubmit(form.value)\" autocomplete=\"off\">\n                    <mat-card-header>\n                        <mat-card-title>\n                            <div class=\"adf-alfresco-logo\">\n                                <!--HEADER TEMPLATE-->\n                                <ng-template *ngIf=\"headerTemplate\"\n                                             ngFor [ngForOf]=\"[data]\"\n                                             [ngForTemplate]=\"headerTemplate\">\n                                </ng-template>\n                                <img *ngIf=\"!headerTemplate\" id=\"adf-login-img-logo\" class=\"adf-img-logo\" [src]=\"logoImageUrl\"\n                                     alt=\"{{'LOGIN.LOGO' | translate }}\">\n                            </div>\n                        </mat-card-title>\n                    </mat-card-header>\n\n                    <mat-card-content class=\"adf-login-controls\">\n\n                        <!--ERRORS AREA-->\n                        <div class=\"adf-error-container\">\n                            <div *ngIf=\"isError\" id=\"login-error\" data-automation-id=\"login-error\"\n                                 class=\"adf-error  adf-error-message\">\n                                <mat-icon class=\"adf-error-icon\">warning</mat-icon>\n                                <span class=\"adf-login-error-message\">{{errorMsg | translate }}</span>\n                            </div>\n                        </div>\n\n                        <div *ngIf=\"!implicitFlow\">\n\n                            <!--USERNAME FIELD-->\n                            <div class=\"adf-login__field\"\n                                 [ngClass]=\"{'adf-is-invalid': isErrorStyle(form.controls.username)}\">\n                                <mat-form-field class=\"adf-full-width\" floatPlaceholder=\"never\" color=\"primary\">\n                                    <input matInput placeholder=\"{{'LOGIN.LABEL.USERNAME' | translate }}\"\n                                           type=\"text\"\n                                           class=\"adf-full-width\"\n                                           [formControl]=\"form.controls['username']\"\n                                           autocapitalize=\"none\"\n                                           id=\"username\"\n                                           data-automation-id=\"username\"\n                                           (blur)=\"trimUsername($event)\">\n                                </mat-form-field>\n\n                                <span class=\"adf-login-validation\" for=\"username\" *ngIf=\"formError['username']\">\n                                <span id=\"username-error\" class=\"adf-login-error\" data-automation-id=\"username-error\">{{formError['username'] | translate }}</span>\n                            </span>\n                            </div>\n\n                            <!--PASSWORD FIELD-->\n                            <div class=\"adf-login__field\">\n                                <mat-form-field class=\"adf-full-width\" floatPlaceholder=\"never\" color=\"primary\">\n                                    <input matInput placeholder=\"{{'LOGIN.LABEL.PASSWORD' | translate }}\"\n                                           [type]=\"isPasswordShow ? 'text' : 'password'\"\n                                           [formControl]=\"form.controls['password']\"\n                                           id=\"password\"\n                                           data-automation-id=\"password\">\n                                    <mat-icon *ngIf=\"isPasswordShow\" matSuffix class=\"adf-login-password-icon\"\n                                              data-automation-id=\"hide_password\" (click)=\"toggleShowPassword()\" (keyup.enter)=\"toggleShowPassword()\">\n                                        visibility\n                                    </mat-icon>\n                                    <mat-icon *ngIf=\"!isPasswordShow\" matSuffix class=\"adf-login-password-icon\"\n                                              data-automation-id=\"show_password\" (click)=\"toggleShowPassword()\" (keyup.enter)=\"toggleShowPassword()\">\n                                        visibility_off\n                                    </mat-icon>\n                                </mat-form-field>\n                                <span class=\"adf-login-validation\" for=\"password\" *ngIf=\"formError['password']\">\n                                <span id=\"password-required\" class=\"adf-login-error\"\n                                      data-automation-id=\"password-required\">{{formError['password'] | translate }}</span>\n                            </span>\n                            </div>\n\n                            <!--CUSTOM CONTENT-->\n                            <ng-content></ng-content>\n\n                            <br>\n                            <button type=\"submit\" id=\"login-button\"\n                                    class=\"adf-login-button\"\n                                    mat-raised-button color=\"primary\"\n                                    [class.adf-isChecking]=\"actualLoginStep === LoginSteps.Checking\"\n                                    [class.adf-isWelcome]=\"actualLoginStep === LoginSteps.Welcome\"\n                                    data-automation-id=\"login-button\" [disabled]=\"!form.valid\">\n\n                                <span *ngIf=\"actualLoginStep === LoginSteps.Landing\" class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.LOGIN' | translate }}</span>\n\n                                <div *ngIf=\"actualLoginStep === LoginSteps.Checking\"\n                                     class=\"adf-interactive-login-label\">\n                                    <span\n                                        class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.CHECKING' | translate }}</span>\n                                    <div class=\"adf-login-spinner-container\">\n                                        <mat-spinner id=\"checking-spinner\" class=\"adf-login-checking-spinner\"\n                                                     [diameter]=\"25\"></mat-spinner>\n                                    </div>\n                                </div>\n\n\n                                <div *ngIf=\"actualLoginStep === LoginSteps.Welcome\" class=\"adf-interactive-login-label\">\n                                    <span class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.WELCOME' | translate }}</span>\n                                    <mat-icon class=\"adf-welcome-icon\">done</mat-icon>\n                                </div>\n\n                            </button>\n                            <div *ngIf=\"showRememberMe\" class=\"adf-login__remember-me\">\n                                <mat-checkbox id=\"adf-login-remember\" color=\"primary\" class=\"adf-login-remember-me\"\n                                              [checked]=\"rememberMe\"\n                                              (change)=\"rememberMe = !rememberMe\">{{ 'LOGIN.LABEL.REMEMBER' | translate }}\n                                </mat-checkbox>\n                            </div>\n                        </div>\n\n                        <div *ngIf=\"implicitFlow\">\n                            <button type=\"button\" (click)=\"implicitLogin()\" id=\"login-button-sso\"\n                                    class=\"adf-login-button\"\n                                    mat-raised-button color=\"primary\"\n                                    data-automation-id=\"login-button-sso\">\n                                <span  class=\"adf-login-button-label\">{{ 'LOGIN.BUTTON.SSO' | translate }}</span>\n                            </button>\n                        </div>\n\n                    </mat-card-content>\n\n                    <mat-card-actions *ngIf=\"footerTemplate || showLoginActions\">\n\n                        <div class=\"adf-login-action-container\">\n                            <!--FOOTER TEMPLATE-->\n                            <ng-template *ngIf=\"footerTemplate\"\n                                         ngFor [ngForOf]=\"[data]\"\n                                         [ngForTemplate]=\"footerTemplate\">\n                            </ng-template>\n                            <div class=\"adf-login-action\" *ngIf=\"!footerTemplate && showLoginActions\">\n                                <div id=\"adf-login-action-left\" class=\"adf-login-action-left\">\n                                    <a href=\"{{needHelpLink}}\">{{'LOGIN.ACTION.HELP' | translate }}</a>\n                                </div>\n                                <div id=\"adf-login-action-right\" class=\"adf-login-action-right\">\n                                    <a href=\"{{registerLink}}\">{{'LOGIN.ACTION.REGISTER' | translate }}</a>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card-actions>\n\n                </form>\n            </mat-card>\n\n            <div class=\"adf-copyright\" data-automation-id=\"login-copyright\">\n                {{ copyrightText }}\n            </div>\n\n        </div>\n    </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        class: 'adf-login'
                    },
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LoginComponent.ctorParameters = function () { return [
        { type: FormBuilder },
        { type: AuthenticationService },
        { type: TranslationService },
        { type: LogService },
        { type: Router },
        { type: AppConfigService },
        { type: UserPreferencesService },
        { type: Location },
        { type: ActivatedRoute },
        { type: DomSanitizer }
    ]; };
    LoginComponent.propDecorators = {
        showRememberMe: [{ type: Input }],
        showLoginActions: [{ type: Input }],
        needHelpLink: [{ type: Input }],
        registerLink: [{ type: Input }],
        logoImageUrl: [{ type: Input }],
        backgroundImageUrl: [{ type: Input }],
        copyrightText: [{ type: Input }],
        fieldsValidation: [{ type: Input }],
        successRoute: [{ type: Input }],
        success: [{ type: Output }],
        error: [{ type: Output }],
        executeSubmit: [{ type: Output }]
    };
    return LoginComponent;
}());
export { LoginComponent };
if (false) {
    /** @type {?} */
    LoginComponent.prototype.isPasswordShow;
    /**
     * Should the `Remember me` checkbox be shown? When selected, this
     * option will remember the logged-in user after the browser is closed
     * to avoid logging in repeatedly.
     * @type {?}
     */
    LoginComponent.prototype.showRememberMe;
    /**
     * Should the extra actions (`Need Help`, `Register`, etc) be shown?
     * @type {?}
     */
    LoginComponent.prototype.showLoginActions;
    /**
     * Sets the URL of the NEED HELP link in the footer.
     * @type {?}
     */
    LoginComponent.prototype.needHelpLink;
    /**
     * Sets the URL of the REGISTER link in the footer.
     * @type {?}
     */
    LoginComponent.prototype.registerLink;
    /**
     * Path to a custom logo image.
     * @type {?}
     */
    LoginComponent.prototype.logoImageUrl;
    /**
     * Path to a custom background image.
     * @type {?}
     */
    LoginComponent.prototype.backgroundImageUrl;
    /**
     * The copyright text below the login box.
     * @type {?}
     */
    LoginComponent.prototype.copyrightText;
    /**
     * Custom validation rules for the login form.
     * @type {?}
     */
    LoginComponent.prototype.fieldsValidation;
    /**
     * Route to redirect to on successful login.
     * @type {?}
     */
    LoginComponent.prototype.successRoute;
    /**
     * Emitted when the login is successful.
     * @type {?}
     */
    LoginComponent.prototype.success;
    /**
     * Emitted when the login fails.
     * @type {?}
     */
    LoginComponent.prototype.error;
    /**
     * Emitted when the login form is submitted.
     * @type {?}
     */
    LoginComponent.prototype.executeSubmit;
    /** @type {?} */
    LoginComponent.prototype.implicitFlow;
    /** @type {?} */
    LoginComponent.prototype.form;
    /** @type {?} */
    LoginComponent.prototype.isError;
    /** @type {?} */
    LoginComponent.prototype.errorMsg;
    /** @type {?} */
    LoginComponent.prototype.actualLoginStep;
    /** @type {?} */
    LoginComponent.prototype.LoginSteps;
    /** @type {?} */
    LoginComponent.prototype.rememberMe;
    /** @type {?} */
    LoginComponent.prototype.formError;
    /** @type {?} */
    LoginComponent.prototype.minLength;
    /** @type {?} */
    LoginComponent.prototype.footerTemplate;
    /** @type {?} */
    LoginComponent.prototype.headerTemplate;
    /** @type {?} */
    LoginComponent.prototype.data;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype._message;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.onDestroy$;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype._fb;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.authService;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.translateService;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.logService;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.appConfig;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.userPreferences;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.location;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.route;
    /**
     * @type {?}
     * @private
     */
    LoginComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsibG9naW4vY29tcG9uZW50cy9sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUNILFNBQVMsRUFBRSxZQUFZLEVBQ3ZCLEtBQUssRUFBVSxNQUFNLEVBQWUsaUJBQWlCLEVBQ3hELE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBbUIsV0FBVyxFQUFhLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JGLE9BQU8sRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFVLE1BQU0saUJBQWlCLENBQUM7QUFDakUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUVqRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUNILGdCQUFnQixFQUNoQixlQUFlLEVBQ2xCLE1BQU0scUNBQXFDLENBQUM7QUFFN0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixD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c0NBQzJEOzs7OztJQUczRCw0Q0FDOEQ7Ozs7O0lBRzlELHVDQUNtRjs7Ozs7SUFHbkYsMENBQ3NCOzs7OztJQUd0QixzQ0FDNEI7Ozs7O0lBRzVCLGlDQUNnRDs7Ozs7SUFHaEQsK0JBQzRDOzs7OztJQUc1Qyx1Q0FDcUQ7O0lBRXJELHNDQUE4Qjs7SUFFOUIsOEJBQWdCOztJQUNoQixpQ0FBeUI7O0lBQ3pCLGtDQUFpQjs7SUFDakIseUNBQTBDOztJQUMxQyxvQ0FBNkI7O0lBQzdCLG9DQUEyQjs7SUFDM0IsbUNBQW9DOztJQUNwQyxtQ0FBc0I7O0lBQ3RCLHdDQUFpQzs7SUFDakMsd0NBQWlDOztJQUNqQyw4QkFBVTs7Ozs7SUFFVixrQ0FBd0U7Ozs7O0lBQ3hFLG9DQUE0Qzs7Ozs7SUFTeEMsNkJBQXdCOzs7OztJQUN4QixxQ0FBMEM7Ozs7O0lBQzFDLDBDQUE0Qzs7Ozs7SUFDNUMsb0NBQThCOzs7OztJQUM5QixnQ0FBc0I7Ozs7O0lBQ3RCLG1DQUFtQzs7Ozs7SUFDbkMseUNBQStDOzs7OztJQUMvQyxrQ0FBMEI7Ozs7O0lBQzFCLCtCQUE2Qjs7Ozs7SUFDN0IsbUNBQStCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtcbiAgICBDb21wb25lbnQsIEV2ZW50RW1pdHRlcixcbiAgICBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFRlbXBsYXRlUmVmLCBWaWV3RW5jYXBzdWxhdGlvbiwgT25EZXN0cm95XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBGb3JtQnVpbGRlciwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgUm91dGVyLCBBY3RpdmF0ZWRSb3V0ZSwgUGFyYW1zIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IExvY2F0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2F1dGhlbnRpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9nU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2xvZy5zZXJ2aWNlJztcbmltcG9ydCB7IFRyYW5zbGF0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RyYW5zbGF0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgVXNlclByZWZlcmVuY2VzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3VzZXItcHJlZmVyZW5jZXMuc2VydmljZSc7XG5cbmltcG9ydCB7IExvZ2luRXJyb3JFdmVudCB9IGZyb20gJy4uL21vZGVscy9sb2dpbi1lcnJvci5ldmVudCc7XG5pbXBvcnQgeyBMb2dpblN1Ym1pdEV2ZW50IH0gZnJvbSAnLi4vbW9kZWxzL2xvZ2luLXN1Ym1pdC5ldmVudCc7XG5pbXBvcnQgeyBMb2dpblN1Y2Nlc3NFdmVudCB9IGZyb20gJy4uL21vZGVscy9sb2dpbi1zdWNjZXNzLmV2ZW50JztcbmltcG9ydCB7XG4gICAgQXBwQ29uZmlnU2VydmljZSxcbiAgICBBcHBDb25maWdWYWx1ZXNcbn0gZnJvbSAnLi4vLi4vYXBwLWNvbmZpZy9hcHAtY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHsgT2F1dGhDb25maWdNb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscy9vYXV0aC1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlVW50aWwgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmVudW0gTG9naW5TdGVwcyB7XG4gICAgTGFuZGluZyA9IDAsXG4gICAgQ2hlY2tpbmcgPSAxLFxuICAgIFdlbGNvbWUgPSAyXG59XG5cbmludGVyZmFjZSBWYWxpZGF0aW9uTWVzc2FnZSB7XG4gICAgdmFsdWU6IHN0cmluZztcbiAgICBwYXJhbXM/OiBhbnk7XG59XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWxvZ2luJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbG9naW4uY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xvZ2luLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7XG4gICAgICAgIGNsYXNzOiAnYWRmLWxvZ2luJ1xuICAgIH1cbn0pXG5leHBvcnQgY2xhc3MgTG9naW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgaXNQYXNzd29yZFNob3c6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIFNob3VsZCB0aGUgYFJlbWVtYmVyIG1lYCBjaGVja2JveCBiZSBzaG93bj8gV2hlbiBzZWxlY3RlZCwgdGhpc1xuICAgICAqIG9wdGlvbiB3aWxsIHJlbWVtYmVyIHRoZSBsb2dnZWQtaW4gdXNlciBhZnRlciB0aGUgYnJvd3NlciBpcyBjbG9zZWRcbiAgICAgKiB0byBhdm9pZCBsb2dnaW5nIGluIHJlcGVhdGVkbHkuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBzaG93UmVtZW1iZXJNZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogU2hvdWxkIHRoZSBleHRyYSBhY3Rpb25zIChgTmVlZCBIZWxwYCwgYFJlZ2lzdGVyYCwgZXRjKSBiZSBzaG93bj8gKi9cbiAgICBASW5wdXQoKVxuICAgIHNob3dMb2dpbkFjdGlvbnM6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIFNldHMgdGhlIFVSTCBvZiB0aGUgTkVFRCBIRUxQIGxpbmsgaW4gdGhlIGZvb3Rlci4gKi9cbiAgICBASW5wdXQoKVxuICAgIG5lZWRIZWxwTGluazogc3RyaW5nID0gJyc7XG5cbiAgICAvKiogU2V0cyB0aGUgVVJMIG9mIHRoZSBSRUdJU1RFUiBsaW5rIGluIHRoZSBmb290ZXIuICovXG4gICAgQElucHV0KClcbiAgICByZWdpc3Rlckxpbms6IHN0cmluZyA9ICcnO1xuXG4gICAgLyoqIFBhdGggdG8gYSBjdXN0b20gbG9nbyBpbWFnZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGxvZ29JbWFnZVVybDogc3RyaW5nID0gJy4vYXNzZXRzL2ltYWdlcy9hbGZyZXNjby1sb2dvLnN2Zyc7XG5cbiAgICAvKiogUGF0aCB0byBhIGN1c3RvbSBiYWNrZ3JvdW5kIGltYWdlLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgYmFja2dyb3VuZEltYWdlVXJsOiBzdHJpbmcgPSAnLi9hc3NldHMvaW1hZ2VzL2JhY2tncm91bmQuc3ZnJztcblxuICAgIC8qKiBUaGUgY29weXJpZ2h0IHRleHQgYmVsb3cgdGhlIGxvZ2luIGJveC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGNvcHlyaWdodFRleHQ6IHN0cmluZyA9ICdcXHUwMEE5IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4nO1xuXG4gICAgLyoqIEN1c3RvbSB2YWxpZGF0aW9uIHJ1bGVzIGZvciB0aGUgbG9naW4gZm9ybS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGZpZWxkc1ZhbGlkYXRpb246IGFueTtcblxuICAgIC8qKiBSb3V0ZSB0byByZWRpcmVjdCB0byBvbiBzdWNjZXNzZnVsIGxvZ2luLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc3VjY2Vzc1JvdXRlOiBzdHJpbmcgPSBudWxsO1xuXG4gICAgLyoqIEVtaXR0ZWQgd2hlbiB0aGUgbG9naW4gaXMgc3VjY2Vzc2Z1bC4gKi9cbiAgICBAT3V0cHV0KClcbiAgICBzdWNjZXNzID0gbmV3IEV2ZW50RW1pdHRlcjxMb2dpblN1Y2Nlc3NFdmVudD4oKTtcblxuICAgIC8qKiBFbWl0dGVkIHdoZW4gdGhlIGxvZ2luIGZhaWxzLiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGVycm9yID0gbmV3IEV2ZW50RW1pdHRlcjxMb2dpbkVycm9yRXZlbnQ+KCk7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSBsb2dpbiBmb3JtIGlzIHN1Ym1pdHRlZC4gKi9cbiAgICBAT3V0cHV0KClcbiAgICBleGVjdXRlU3VibWl0ID0gbmV3IEV2ZW50RW1pdHRlcjxMb2dpblN1Ym1pdEV2ZW50PigpO1xuXG4gICAgaW1wbGljaXRGbG93OiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBmb3JtOiBGb3JtR3JvdXA7XG4gICAgaXNFcnJvcjogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGVycm9yTXNnOiBzdHJpbmc7XG4gICAgYWN0dWFsTG9naW5TdGVwOiBhbnkgPSBMb2dpblN0ZXBzLkxhbmRpbmc7XG4gICAgTG9naW5TdGVwczogYW55ID0gTG9naW5TdGVwcztcbiAgICByZW1lbWJlck1lOiBib29sZWFuID0gdHJ1ZTtcbiAgICBmb3JtRXJyb3I6IHsgW2lkOiBzdHJpbmddOiBzdHJpbmcgfTtcbiAgICBtaW5MZW5ndGg6IG51bWJlciA9IDI7XG4gICAgZm9vdGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaGVhZGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZGF0YTogYW55O1xuXG4gICAgcHJpdmF0ZSBfbWVzc2FnZTogeyBbaWQ6IHN0cmluZ106IHsgW2lkOiBzdHJpbmddOiBWYWxpZGF0aW9uTWVzc2FnZSB9IH07XG4gICAgcHJpdmF0ZSBvbkRlc3Ryb3kkID0gbmV3IFN1YmplY3Q8Ym9vbGVhbj4oKTtcblxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIF9mYlxuICAgICAqIEBwYXJhbSBhdXRoU2VydmljZVxuICAgICAqIEBwYXJhbSB0cmFuc2xhdGVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBfZmI6IEZvcm1CdWlsZGVyLFxuICAgICAgICBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoZW50aWNhdGlvblNlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRpb25TZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIGxvZ1NlcnZpY2U6IExvZ1NlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsXG4gICAgICAgIHByaXZhdGUgYXBwQ29uZmlnOiBBcHBDb25maWdTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHVzZXJQcmVmZXJlbmNlczogVXNlclByZWZlcmVuY2VzU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSBsb2NhdGlvbjogTG9jYXRpb24sXG4gICAgICAgIHByaXZhdGUgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgICAgICBwcml2YXRlIHNhbml0aXplcjogRG9tU2FuaXRpemVyXG4gICAgKSB7XG4gICAgICAgIHRoaXMuaW5pdEZvcm1FcnJvcigpO1xuICAgICAgICB0aGlzLmluaXRGb3JtRmllbGRzTWVzc2FnZXMoKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuYXV0aFNlcnZpY2UuaXNPYXV0aCgpKSB7XG4gICAgICAgICAgICBjb25zdCBvYXV0aDogT2F1dGhDb25maWdNb2RlbCA9IHRoaXMuYXBwQ29uZmlnLmdldDxPYXV0aENvbmZpZ01vZGVsPihBcHBDb25maWdWYWx1ZXMuT0FVVEhDT05GSUcsIG51bGwpO1xuICAgICAgICAgICAgaWYgKG9hdXRoICYmIG9hdXRoLmltcGxpY2l0Rmxvdykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW1wbGljaXRGbG93ID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmF1dGhTZXJ2aWNlLmlzRWNtTG9nZ2VkSW4oKSB8fCB0aGlzLmF1dGhTZXJ2aWNlLmlzQnBtTG9nZ2VkSW4oKSkge1xuICAgICAgICAgICAgdGhpcy5sb2NhdGlvbi5mb3J3YXJkKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJvdXRlLnF1ZXJ5UGFyYW1zLnN1YnNjcmliZSgocGFyYW1zOiBQYXJhbXMpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBwYXJhbXNbJ3JlZGlyZWN0VXJsJ107XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvdmlkZXIgPSB0aGlzLmFwcENvbmZpZy5nZXQ8c3RyaW5nPihBcHBDb25maWdWYWx1ZXMuUFJPVklERVJTKTtcblxuICAgICAgICAgICAgICAgIHRoaXMuYXV0aFNlcnZpY2Uuc2V0UmVkaXJlY3QoeyBwcm92aWRlciwgdXJsIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmhhc0N1c3RvbUZpZWxkc1ZhbGlkYXRpb24oKSkge1xuICAgICAgICAgICAgdGhpcy5mb3JtID0gdGhpcy5fZmIuZ3JvdXAodGhpcy5maWVsZHNWYWxpZGF0aW9uKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdEZvcm1GaWVsZHNEZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLmluaXRGb3JtRmllbGRzTWVzc2FnZXNEZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5mb3JtLnZhbHVlQ2hhbmdlc1xuICAgICAgICAgICAgLnBpcGUodGFrZVVudGlsKHRoaXMub25EZXN0cm95JCkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKGRhdGEgPT4gdGhpcy5vblZhbHVlQ2hhbmdlZChkYXRhKSk7XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMub25EZXN0cm95JC5uZXh0KHRydWUpO1xuICAgICAgICB0aGlzLm9uRGVzdHJveSQuY29tcGxldGUoKTtcbiAgICB9XG5cbiAgICBzdWJtaXQoKSB7XG4gICAgICAgIHRoaXMub25TdWJtaXQodGhpcy5mb3JtLnZhbHVlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBNZXRob2QgY2FsbGVkIG9uIHN1Ym1pdCBmb3JtXG4gICAgICogQHBhcmFtIHZhbHVlc1xuICAgICAqIEBwYXJhbSBldmVudFxuICAgICAqL1xuICAgIG9uU3VibWl0KHZhbHVlczogYW55KSB7XG4gICAgICAgIHRoaXMuZGlzYWJsZUVycm9yKCk7XG5cbiAgICAgICAgaWYgKHRoaXMuYXV0aFNlcnZpY2UuaXNPYXV0aCgpICYmICF0aGlzLmF1dGhTZXJ2aWNlLmlzU1NPRGlzY292ZXJ5Q29uZmlndXJlZCgpKSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yTXNnID0gJ0xPR0lOLk1FU1NBR0VTLlNTTy1XUk9ORy1DT05GSUdVUkFUSU9OJztcbiAgICAgICAgICAgIHRoaXMuaXNFcnJvciA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBhcmdzID0gbmV3IExvZ2luU3VibWl0RXZlbnQoe1xuICAgICAgICAgICAgICAgIGNvbnRyb2xzOiB7IHVzZXJuYW1lOiB0aGlzLmZvcm0uY29udHJvbHMudXNlcm5hbWUgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmV4ZWN1dGVTdWJtaXQuZW1pdChhcmdzKTtcblxuICAgICAgICAgICAgaWYgKGFyZ3MuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wZXJmb3JtTG9naW4odmFsdWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGltcGxpY2l0TG9naW4oKSB7XG4gICAgICAgIGlmICh0aGlzLmF1dGhTZXJ2aWNlLmlzT2F1dGgoKSAmJiAhdGhpcy5hdXRoU2VydmljZS5pc1NTT0Rpc2NvdmVyeUNvbmZpZ3VyZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5lcnJvck1zZyA9ICdMT0dJTi5NRVNTQUdFUy5TU08tV1JPTkctQ09ORklHVVJBVElPTic7XG4gICAgICAgICAgICB0aGlzLmlzRXJyb3IgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5hdXRoU2VydmljZS5zc29JbXBsaWNpdExvZ2luKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbWV0aG9kIGNoZWNrIHRoZSBlcnJvciBpbiB0aGUgZm9ybSBhbmQgcHVzaCB0aGUgZXJyb3IgaW4gdGhlIGZvcm1FcnJvciBvYmplY3RcbiAgICAgKiBAcGFyYW0gZGF0YVxuICAgICAqL1xuICAgIG9uVmFsdWVDaGFuZ2VkKGRhdGE6IGFueSkge1xuICAgICAgICB0aGlzLmRpc2FibGVFcnJvcigpO1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkIGluIHRoaXMuZm9ybUVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm1FcnJvcltmaWVsZF0gPSAnJztcbiAgICAgICAgICAgICAgICBjb25zdCBoYXNFcnJvciA9XG4gICAgICAgICAgICAgICAgICAgICh0aGlzLmZvcm0uY29udHJvbHNbZmllbGRdLmVycm9ycyAmJiBkYXRhW2ZpZWxkXSAhPT0gJycpIHx8XG4gICAgICAgICAgICAgICAgICAgICh0aGlzLmZvcm0uY29udHJvbHNbZmllbGRdLmRpcnR5ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAhdGhpcy5mb3JtLmNvbnRyb2xzW2ZpZWxkXS52YWxpZCk7XG4gICAgICAgICAgICAgICAgaWYgKGhhc0Vycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMuZm9ybS5jb250cm9sc1tmaWVsZF0uZXJyb3JzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMuX21lc3NhZ2VbZmllbGRdW2tleV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2UgJiYgbWVzc2FnZS52YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2xhdGVkID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQobWVzc2FnZS52YWx1ZSwgbWVzc2FnZS5wYXJhbXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZvcm1FcnJvcltmaWVsZF0gKz0gdHJhbnNsYXRlZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHBlcmZvcm1Mb2dpbih2YWx1ZXM6IGFueSkge1xuICAgICAgICB0aGlzLmFjdHVhbExvZ2luU3RlcCA9IExvZ2luU3RlcHMuQ2hlY2tpbmc7XG4gICAgICAgIHRoaXMuYXV0aFNlcnZpY2VcbiAgICAgICAgICAgIC5sb2dpbih2YWx1ZXMudXNlcm5hbWUsIHZhbHVlcy5wYXNzd29yZCwgdGhpcy5yZW1lbWJlck1lKVxuICAgICAgICAgICAgLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAodG9rZW46IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZWRpcmVjdFVybCA9IHRoaXMuYXV0aFNlcnZpY2UuZ2V0UmVkaXJlY3QoKTtcblxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFjdHVhbExvZ2luU3RlcCA9IExvZ2luU3RlcHMuV2VsY29tZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51c2VyUHJlZmVyZW5jZXMuc2V0U3RvcmFnZVByZWZpeCh2YWx1ZXMudXNlcm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZXMucGFzc3dvcmQgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Y2Nlc3MuZW1pdChcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBMb2dpblN1Y2Nlc3NFdmVudCh0b2tlbiwgdmFsdWVzLnVzZXJuYW1lLCBudWxsKVxuICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZWRpcmVjdFVybCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hdXRoU2VydmljZS5zZXRSZWRpcmVjdChudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwocmVkaXJlY3RVcmwpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc3VjY2Vzc1JvdXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbdGhpcy5zdWNjZXNzUm91dGVdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKGVycjogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0dWFsTG9naW5TdGVwID0gTG9naW5TdGVwcy5MYW5kaW5nO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXlFcnJvck1lc3NhZ2UoZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvci5lbWl0KG5ldyBMb2dpbkVycm9yRXZlbnQoZXJyKSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAoKSA9PiB0aGlzLmxvZ1NlcnZpY2UuaW5mbygnTG9naW4gZG9uZScpXG4gICAgICAgICAgICApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrIGFuZCBkaXNwbGF5IHRoZSByaWdodCBlcnJvciBtZXNzYWdlIGluIHRoZSBVSVxuICAgICAqL1xuICAgIHByaXZhdGUgZGlzcGxheUVycm9yTWVzc2FnZShlcnI6IGFueSk6IHZvaWQge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBlcnIuZXJyb3IgJiZcbiAgICAgICAgICAgIGVyci5lcnJvci5jcm9zc0RvbWFpbiAmJlxuICAgICAgICAgICAgZXJyLmVycm9yLm1lc3NhZ2UuaW5kZXhPZignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJykgIT09IC0xXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy5lcnJvck1zZyA9IGVyci5lcnJvci5tZXNzYWdlO1xuICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgZXJyLnN0YXR1cyA9PT0gNDAzICYmXG4gICAgICAgICAgICBlcnIubWVzc2FnZS5pbmRleE9mKCdJbnZhbGlkIENTUkYtdG9rZW4nKSAhPT0gLTFcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yTXNnID0gJ0xPR0lOLk1FU1NBR0VTLkxPR0lOLUVSUk9SLUNTUkYnO1xuICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgZXJyLnN0YXR1cyA9PT0gNDAzICYmXG4gICAgICAgICAgICBlcnIubWVzc2FnZS5pbmRleE9mKCdUaGUgc3lzdGVtIGlzIGN1cnJlbnRseSBpbiByZWFkLW9ubHkgbW9kZScpICE9PVxuICAgICAgICAgICAgLTFcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yTXNnID0gJ0xPR0lOLk1FU1NBR0VTLkxPR0lOLUVDTS1MSUNFTlNFJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3JNc2cgPSAnTE9HSU4uTUVTU0FHRVMuTE9HSU4tRVJST1ItQ1JFREVOVElBTFMnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIGEgY3VzdG9tIGZvcm0gZXJyb3IgZm9yIGEgZmllbGRcbiAgICAgKiBAcGFyYW0gZmllbGRcbiAgICAgKiBAcGFyYW0gbXNnXG4gICAgICovXG4gICAgcHVibGljIGFkZEN1c3RvbUZvcm1FcnJvcihmaWVsZDogc3RyaW5nLCBtc2c6IHN0cmluZykge1xuICAgICAgICB0aGlzLmZvcm1FcnJvcltmaWVsZF0gKz0gbXNnO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCBhIGN1c3RvbSB2YWxpZGF0aW9uIHJ1bGUgZXJyb3IgZm9yIGEgZmllbGRcbiAgICAgKiBAcGFyYW0gZmllbGRcbiAgICAgKiBAcGFyYW0gcnVsZUlkIC0gaS5lLiByZXF1aXJlZCB8IG1pbmxlbmd0aCB8IG1heGxlbmd0aFxuICAgICAqIEBwYXJhbSBtc2dcbiAgICAgKi9cbiAgICBhZGRDdXN0b21WYWxpZGF0aW9uRXJyb3IoXG4gICAgICAgIGZpZWxkOiBzdHJpbmcsXG4gICAgICAgIHJ1bGVJZDogc3RyaW5nLFxuICAgICAgICBtc2c6IHN0cmluZyxcbiAgICAgICAgcGFyYW1zPzogYW55XG4gICAgKSB7XG4gICAgICAgIHRoaXMuX21lc3NhZ2VbZmllbGRdW3J1bGVJZF0gPSB7XG4gICAgICAgICAgICB2YWx1ZTogbXNnLFxuICAgICAgICAgICAgcGFyYW1zXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGlzcGxheSBhbmQgaGlkZSB0aGUgcGFzc3dvcmQgdmFsdWUuXG4gICAgICovXG4gICAgdG9nZ2xlU2hvd1Bhc3N3b3JkKCkge1xuICAgICAgICB0aGlzLmlzUGFzc3dvcmRTaG93ID0gIXRoaXMuaXNQYXNzd29yZFNob3c7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIG1ldGhvZCByZXR1cm4gaWYgYSBmaWVsZCBpcyB2YWxpZCBvciBub3RcbiAgICAgKiBAcGFyYW0gZmllbGRcbiAgICAgKi9cbiAgICBpc0Vycm9yU3R5bGUoZmllbGQ6IEFic3RyYWN0Q29udHJvbCkge1xuICAgICAgICByZXR1cm4gIWZpZWxkLnZhbGlkICYmIGZpZWxkLmRpcnR5ICYmICFmaWVsZC5wcmlzdGluZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUcmltIHVzZXJuYW1lXG4gICAgICovXG4gICAgdHJpbVVzZXJuYW1lKGV2ZW50OiBhbnkpIHtcbiAgICAgICAgZXZlbnQudGFyZ2V0LnZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlLnRyaW0oKTtcbiAgICB9XG5cbiAgICBnZXRCYWNrZ3JvdW5kVXJsSW1hZ2VVcmwoKSB7XG4gICAgICAgIHJldHVybiAgdGhpcy5zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFN0eWxlKGB1cmwoJHt0aGlzLmJhY2tncm91bmRJbWFnZVVybH0pYCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGVmYXVsdCBmb3JtRXJyb3IgdmFsdWVzXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0Rm9ybUVycm9yKCkge1xuICAgICAgICB0aGlzLmZvcm1FcnJvciA9IHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiAnJyxcbiAgICAgICAgICAgIHBhc3N3b3JkOiAnJ1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEluaXQgZm9ybSBmaWVsZHMgbWVzc2FnZXNcbiAgICAgKi9cbiAgICBwcml2YXRlIGluaXRGb3JtRmllbGRzTWVzc2FnZXMoKSB7XG4gICAgICAgIHRoaXMuX21lc3NhZ2UgPSB7XG4gICAgICAgICAgICB1c2VybmFtZToge30sXG4gICAgICAgICAgICBwYXNzd29yZDoge31cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IGZvcm0gZmllbGRzIG1lc3NhZ2VzXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0Rm9ybUZpZWxkc01lc3NhZ2VzRGVmYXVsdCgpIHtcbiAgICAgICAgdGhpcy5fbWVzc2FnZSA9IHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB7XG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdMT0dJTi5NRVNTQUdFUy5VU0VSTkFNRS1SRVFVSVJFRCdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1pbkxlbmd0aDoge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ0xPR0lOLk1FU1NBR0VTLlVTRVJOQU1FLU1JTicsXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IG1pbkxlbmd0aCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5taW5MZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwYXNzd29yZDoge1xuICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnTE9HSU4uTUVTU0FHRVMuUEFTU1dPUkQtUkVRVUlSRUQnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdEZvcm1GaWVsZHNEZWZhdWx0KCkge1xuICAgICAgICB0aGlzLmZvcm0gPSB0aGlzLl9mYi5ncm91cCh7XG4gICAgICAgICAgICB1c2VybmFtZTogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERpc2FibGUgdGhlIGVycm9yIGZsYWdcbiAgICAgKi9cbiAgICBwcml2YXRlIGRpc2FibGVFcnJvcigpIHtcbiAgICAgICAgdGhpcy5pc0Vycm9yID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdEZvcm1FcnJvcigpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaGFzQ3VzdG9tRmllbGRzVmFsaWRhdGlvbigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmllbGRzVmFsaWRhdGlvbiAhPT0gdW5kZWZpbmVkO1xuICAgIH1cbn1cbiJdfQ==