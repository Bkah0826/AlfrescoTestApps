{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-core/utils/object-utils.ts","ng://@alfresco/adf-core/app-config/app-config.service.ts","ng://@alfresco/adf-core/services/storage.service.ts","ng://@alfresco/adf-core/services/alfresco-api.service.ts","ng://@alfresco/adf-core/services/cookie.service.ts","ng://@alfresco/adf-core/models/log-levels.model.ts","ng://@alfresco/adf-core/services/log.service.ts","ng://@alfresco/adf-core/services/jwt-helper.service.ts","ng://@alfresco/adf-core/services/authentication.service.ts","ng://@alfresco/adf-core/models/product-version.model.ts","ng://@alfresco/adf-core/services/discovery-api.service.ts","ng://@alfresco/adf-core/utils/file-utils.ts","ng://@alfresco/adf-core/utils/moment-date-formats.model.ts","ng://@alfresco/adf-core/utils/momentDateAdapter.ts","ng://@alfresco/adf-core/datatable/data/object-datarow.model.ts","ng://@alfresco/adf-core/datatable/data/object-datacolumn.model.ts","ng://@alfresco/adf-core/datatable/data/data-sorting.model.ts","ng://@alfresco/adf-core/datatable/data/object-datatable-adapter.ts","ng://@alfresco/adf-core/about/about.component.ts","ng://@alfresco/adf-core/material.module.ts","ng://@alfresco/adf-core/context-menu/context-menu.service.ts","ng://@alfresco/adf-core/context-menu/context-menu-holder.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.ts","ng://@alfresco/adf-core/context-menu/context-menu.tokens.ts","ng://@alfresco/adf-core/context-menu/animations.ts","ng://@alfresco/adf-core/context-menu/context-menu-list.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.service.ts","ng://@alfresco/adf-core/context-menu/context-menu.directive.ts","ng://@alfresco/adf-core/context-menu/context-menu.module.ts","ng://@alfresco/adf-core/services/user-preferences.service.ts","ng://@alfresco/adf-core/services/translation.service.ts","ng://@alfresco/adf-core/pipes/file-size.pipe.ts","ng://@alfresco/adf-core/services/thumbnail.service.ts","ng://@alfresco/adf-core/pipes/mime-type-icon.pipe.ts","ng://@alfresco/adf-core/pipes/node-name-tooltip.pipe.ts","ng://@alfresco/adf-core/services/highlight-transform.service.ts","ng://@alfresco/adf-core/pipes/text-highlight.pipe.ts","ng://@alfresco/adf-core/pipes/time-ago.pipe.ts","ng://@alfresco/adf-core/pipes/user-initial.pipe.ts","ng://@alfresco/adf-core/pipes/full-name.pipe.ts","ng://@alfresco/adf-core/pipes/format-space.pipe.ts","ng://@alfresco/adf-core/pipes/file-type.pipe.ts","ng://@alfresco/adf-core/pipes/multi-value.pipe.ts","ng://@alfresco/adf-core/pipes/localized-date.pipe.ts","ng://@alfresco/adf-core/pipes/decimal-number.pipe.ts","ng://@alfresco/adf-core/pipes/pipe.module.ts","ng://@alfresco/adf-core/directives/highlight.directive.ts","ng://@alfresco/adf-core/directives/logout.directive.ts","ng://@alfresco/adf-core/directives/node-delete.directive.ts","ng://@alfresco/adf-core/directives/node-favorite.directive.ts","ng://@alfresco/adf-core/models/permissions.enum.ts","ng://@alfresco/adf-core/models/allowable-operations.enum.ts","ng://@alfresco/adf-core/services/download.service.ts","ng://@alfresco/adf-core/services/content.service.ts","ng://@alfresco/adf-core/interface/injection.tokens.ts","ng://@alfresco/adf-core/directives/check-allowable-operation.directive.ts","ng://@alfresco/adf-core/directives/node-restore.directive.ts","ng://@alfresco/adf-core/directives/upload.directive.ts","ng://@alfresco/adf-core/services/download-zip.service.ts","ng://@alfresco/adf-core/dialogs/download-zip.dialog.ts","ng://@alfresco/adf-core/directives/node-download.directive.ts","ng://@alfresco/adf-core/directives/directive.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable-cell.component.ts","ng://@alfresco/adf-core/data-column/data-column.component.ts","ng://@alfresco/adf-core/data-column/data-column-list.component.ts","ng://@alfresco/adf-core/events/base.event.ts","ng://@alfresco/adf-core/events/base-ui.event.ts","ng://@alfresco/adf-core/models/file.model.ts","ng://@alfresco/adf-core/events/file.event.ts","ng://@alfresco/adf-core/datatable/data/data-row-event.model.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-cell.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-row-action.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/date-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/empty-list.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/filesize-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/location-cell.component.ts","ng://@alfresco/adf-core/datatable/directives/loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-empty-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/components/datatable/json-cell.component.ts","ng://@alfresco/adf-core/services/notification.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.directive.ts","ng://@alfresco/adf-core/clipboard/clipboard.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/drop-zone.directive.ts","ng://@alfresco/adf-core/datatable/datatable.module.ts","ng://@alfresco/adf-core/data-column/data-column.module.ts","ng://@alfresco/adf-core/about/about.module.ts","ng://@alfresco/adf-core/viewer/services/view-util.service.ts","ng://@alfresco/adf-core/viewer/components/viewer-more-actions.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-open-with.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-sidebar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer.component.ts","ng://@alfresco/adf-core/viewer/components/imgViewer.component.ts","ng://@alfresco/adf-core/viewer/components/mediaPlayer.component.ts","ng://@alfresco/adf-core/viewer/services/rendering-queue.services.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-password-dialog.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumbnails.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumb.component.ts","ng://@alfresco/adf-core/viewer/components/txtViewer.component.ts","ng://@alfresco/adf-core/viewer/components/unknown-format/unknown-format.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar-actions.component.ts","ng://@alfresco/adf-core/viewer/directives/viewer-extension.directive.ts","ng://@alfresco/adf-core/toolbar/toolbar-divider.component.ts","ng://@alfresco/adf-core/toolbar/toolbar-title.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.module.ts","ng://@alfresco/adf-core/viewer/viewer.module.ts","ng://@alfresco/adf-core/userinfo/models/bpm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/bpm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/ecm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/ecm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/identity-user.model.ts","ng://@alfresco/adf-core/userinfo/services/identity-user.service.ts","ng://@alfresco/adf-core/userinfo/components/user-info.component.ts","ng://@alfresco/adf-core/userinfo/models/identity-role.model.ts","ng://@alfresco/adf-core/userinfo/models/identity-group.model.ts","ng://@alfresco/adf-core/userinfo/userinfo.module.ts","ng://@alfresco/adf-core/settings/host-settings.component.ts","ng://@alfresco/adf-core/settings/host-settings.module.ts","ng://@alfresco/adf-core/pagination/pagination.component.ts","ng://@alfresco/adf-core/pagination/infinite-pagination.component.ts","ng://@alfresco/adf-core/pagination/pagination.module.ts","ng://@alfresco/adf-core/login/models/login-error.event.ts","ng://@alfresco/adf-core/login/models/login-submit.event.ts","ng://@alfresco/adf-core/login/models/login-success.event.ts","ng://@alfresco/adf-core/login/components/login.component.ts","ng://@alfresco/adf-core/login/directives/login-header.directive.ts","ng://@alfresco/adf-core/login/directives/login-footer.directive.ts","ng://@alfresco/adf-core/login/components/login-dialog.component.ts","ng://@alfresco/adf-core/login/components/login-dialog-panel.component.ts","ng://@alfresco/adf-core/login/login.module.ts","ng://@alfresco/adf-core/language-menu/language-menu.component.ts","ng://@alfresco/adf-core/language-menu/language-menu.module.ts","ng://@alfresco/adf-core/info-drawer/info-drawer-layout.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.module.ts","ng://@alfresco/adf-core/datatable/data/data-table.schema.ts","ng://@alfresco/adf-core/card-view/components/card-view/card-view.component.ts","ng://@alfresco/adf-core/card-view/services/card-view-update.service.ts","ng://@alfresco/adf-core/card-view/components/card-view-boolitem/card-view-boolitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-dateitem/card-view-dateitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-mapitem/card-view-mapitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-textitem/card-view-textitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-selectitem/card-view-selectitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component.ts","ng://@alfresco/adf-core/services/get-type.ts","ng://@alfresco/adf-core/services/dynamic-component-mapper.service.ts","ng://@alfresco/adf-core/card-view/services/card-item-types.service.ts","ng://@alfresco/adf-core/card-view/directives/card-view-content-proxy.directive.ts","ng://@alfresco/adf-core/card-view/components/card-view-item-dispatcher/card-view-item-dispatcher.component.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-int.validator.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-float.validator.ts","ng://@alfresco/adf-core/card-view/models/card-view-baseitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-boolitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-dateitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-datetimeitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-textitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-floatitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-intitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-mapitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-keyvaluepairs.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-selectitem.model.ts","ng://@alfresco/adf-core/card-view/card-view.module.ts","ng://@alfresco/adf-core/app-config/debug-app-config.service.ts","ng://@alfresco/adf-core/app-config/app-config.pipe.ts","ng://@alfresco/adf-core/app-config/app-config.module.ts","ng://@alfresco/adf-core/form/models/form-definition.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-types.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-widget.model.ts","ng://@alfresco/adf-core/form/models/widget-visibility.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container-column.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/error-message.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-validator.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field.model.ts","ng://@alfresco/adf-core/form/events/form.event.ts","ng://@alfresco/adf-core/form/events/form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form.event.ts","ng://@alfresco/adf-core/form/components/widgets/core/container.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/tab.model.ts","ng://@alfresco/adf-core/form/components/form-base.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome-event.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/content-link.model.ts","ng://@alfresco/adf-core/form/services/ecm-model.service.ts","ng://@alfresco/adf-core/form/services/form.service.ts","ng://@alfresco/adf-core/form/components/widgets/widget.component.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.ts","ng://@alfresco/adf-core/form/components/widgets/tabs/tabs.widget.ts","ng://@alfresco/adf-core/form/components/widgets/unknown/unknown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/amount/amount.widget.ts","ng://@alfresco/adf-core/form/components/widgets/checkbox/checkbox.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date/date.widget.ts","ng://@alfresco/adf-core/form/components/widgets/display-text/display-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/document/document.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dropdown/dropdown.widget.ts","ng://@alfresco/adf-core/form/services/widget-visibility.service.ts","ng://@alfresco/adf-core/form/events/validate-dynamic-table-row.event.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/date-cell-validator-model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-row-validation-summary.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/number-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/required-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/boolean/boolean.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/date/date.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/datetime/datetime.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/dropdown/dropdown.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/row.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/text/text.editor.ts","ng://@alfresco/adf-core/form/components/widgets/error/error.component.ts","ng://@alfresco/adf-core/form/components/widgets/functional-group/functional-group.widget.ts","ng://@alfresco/adf-core/form/components/widgets/hyperlink/hyperlink.widget.ts","ng://@alfresco/adf-core/form/components/widgets/multiline-text/multiline-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/number/number.widget.ts","ng://@alfresco/adf-core/services/people-process.service.ts","ng://@alfresco/adf-core/form/components/widgets/people/people.widget.ts","ng://@alfresco/adf-core/form/components/widgets/radio-buttons/radio-buttons.widget.ts","ng://@alfresco/adf-core/form/components/widgets/text/text-mask.component.ts","ng://@alfresco/adf-core/form/components/widgets/text/text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/typeahead/typeahead.widget.ts","ng://@alfresco/adf-core/form/services/process-content.service.ts","ng://@alfresco/adf-core/form/components/widgets/upload/upload.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date-time/date-time.widget.ts","ng://@alfresco/adf-core/form/components/widgets/index.ts","ng://@alfresco/adf-core/form/components/form-base.component.ts","ng://@alfresco/adf-core/form/components/form-list.component.ts","ng://@alfresco/adf-core/form/components/widgets/content/content.widget.ts","ng://@alfresco/adf-core/form/components/form-renderer.component.ts","ng://@alfresco/adf-core/form/services/activiti-alfresco.service.ts","ng://@alfresco/adf-core/form/services/form-rendering.service.ts","ng://@alfresco/adf-core/form/models/node-metadata.model.ts","ng://@alfresco/adf-core/form/services/node.service.ts","ng://@alfresco/adf-core/form/events/form-error.event.ts","ng://@alfresco/adf-core/form/components/form-custom-button.directive.ts","ng://@alfresco/adf-core/form/components/form-field/form-field.component.ts","ng://@alfresco/adf-core/form/form-base.module.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-content.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-header.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-navigation.directive.ts","ng://@alfresco/adf-core/layout/components/sidenav-layout/sidenav-layout.component.ts","ng://@alfresco/adf-core/layout/helpers/animations.ts","ng://@alfresco/adf-core/layout/components/layout-container/layout-container.component.ts","ng://@alfresco/adf-core/layout/components/sidebar-action/sidebar-action-menu.component.ts","ng://@alfresco/adf-core/layout/components/header/header.component.ts","ng://@alfresco/adf-core/layout/layout.module.ts","ng://@alfresco/adf-core/comments/comment-list.component.ts","ng://@alfresco/adf-core/models/comment.model.ts","ng://@alfresco/adf-core/models/user-process.model.ts","ng://@alfresco/adf-core/services/comment-process.service.ts","ng://@alfresco/adf-core/services/comment-content.service.ts","ng://@alfresco/adf-core/comments/comments.component.ts","ng://@alfresco/adf-core/comments/comments.module.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.component.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.module.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.component.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.module.ts","ng://@alfresco/adf-core/templates/error-content/error-content.component.ts","ng://@alfresco/adf-core/templates/empty-content/empty-content.component.ts","ng://@alfresco/adf-core/templates/template.module.ts","ng://@alfresco/adf-core/services/auth-guard-base.ts","ng://@alfresco/adf-core/services/auth-guard.service.ts","ng://@alfresco/adf-core/services/auth-guard-ecm.service.ts","ng://@alfresco/adf-core/services/auth-guard-bpm.service.ts","ng://@alfresco/adf-core/services/auth-guard-sso-role.service.ts","ng://@alfresco/adf-core/services/apps-process.service.ts","ng://@alfresco/adf-core/services/page-title.service.ts","ng://@alfresco/adf-core/services/renditions.service.ts","ng://@alfresco/adf-core/models/component.model.ts","ng://@alfresco/adf-core/services/translate-loader.service.ts","ng://@alfresco/adf-core/services/upload.service.ts","ng://@alfresco/adf-core/services/deleted-nodes-api.service.ts","ng://@alfresco/adf-core/services/favorites-api.service.ts","ng://@alfresco/adf-core/services/nodes-api.service.ts","ng://@alfresco/adf-core/services/people-content.service.ts","ng://@alfresco/adf-core/services/search-configuration.service.ts","ng://@alfresco/adf-core/services/search.service.ts","ng://@alfresco/adf-core/services/shared-links-api.service.ts","ng://@alfresco/adf-core/services/sites.service.ts","ng://@alfresco/adf-core/services/login-dialog.service.ts","ng://@alfresco/adf-core/services/external-alfresco-api.service.ts","ng://@alfresco/adf-core/services/lock.service.ts","ng://@alfresco/adf-core/mock/form/demo-form.mock.ts","ng://@alfresco/adf-core/services/automation.service.ts","ng://@alfresco/adf-core/dialogs/dialog.module.ts","ng://@alfresco/adf-core/icon/icon.component.ts","ng://@alfresco/adf-core/icon/icon.module.ts","ng://@alfresco/adf-core/notification-history/notification-history.component.ts","ng://@alfresco/adf-core/notification-history/notification-history.module.ts","ng://@alfresco/adf-core/models/ecm-company.model.ts","ng://@alfresco/adf-core/models/redirection.model.ts","ng://@alfresco/adf-core/models/pagination.model.ts","ng://@alfresco/adf-core/models/request-pagination.model.ts","ng://@alfresco/adf-core/models/decimal-number.model.ts","ng://@alfresco/adf-core/mock/AlfrescoApi.mock.ts","ng://@alfresco/adf-core/mock/app-config.service.mock.ts","ng://@alfresco/adf-core/mock/apps-service.mock.ts","ng://@alfresco/adf-core/mock/authentication.service.mock.ts","ng://@alfresco/adf-core/mock/bpm-user.service.mock.ts","ng://@alfresco/adf-core/mock/comment-process-service.mock.ts","ng://@alfresco/adf-core/mock/cookie.service.mock.ts","ng://@alfresco/adf-core/mock/ecm-user.service.mock.ts","ng://@alfresco/adf-core/mock/event.mock.ts","ng://@alfresco/adf-core/mock/renditionsService.mock.ts","ng://@alfresco/adf-core/mock/search.service.mock.ts","ng://@alfresco/adf-core/mock/translation.service.mock.ts","ng://@alfresco/adf-core/mock/alfresco-api.service.mock.ts","ng://@alfresco/adf-core/mock/form/form.component.mock.ts","ng://@alfresco/adf-core/mock/form/widget-visibility.service.mock.ts","ng://@alfresco/adf-core/testing/setupTestBed.ts","ng://@alfresco/adf-core/services/startup-service-factory.ts","ng://@alfresco/adf-core/services/directionality-config-factory.ts","ng://@alfresco/adf-core/services/directionality-config.service.ts","ng://@alfresco/adf-core/core.module.ts","ng://@alfresco/adf-core/mock/form/formDefinition.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionReadonly.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionVisibility.mock.ts","ng://@alfresco/adf-core/mock/form/start-form.component.mock.ts","ng://@alfresco/adf-core/mock/form/form.service.mock.ts","ng://@alfresco/adf-core/mock/jwt-helper.service.spec.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","ObjectUtils","getValue","target","key","undefined","keys","split","shift","merge","objects","_i","forEach","source","prop","isArray","APP_CONFIG_LANGUAGES_KEY","PROVIDERS","OAUTHCONFIG","ECMHOST","BASESHAREURL","BPMHOST","IDENTITY_HOST","AUTHTYPE","CONTEXTROOTECM","CONTEXTROOTBPM","ALFRESCO_REPOSITORY_NAME","LOG_LEVEL","LOGIN_ROUTE","DISABLECSRF","AUTH_WITH_CREDENTIALS","APPLICATION","STORAGE_PREFIX","NOTIFY_DURATION","INIT","LOADING","LOADED","AppConfigService","select","property","onLoadSubject","pipe","map","config","distinctUntilChanged","get","defaultValue","keywords","Map","set","getLocationHostname","getLocationPort","getLocationProtocol","formatString","location","protocol","hostname","prefix","port","load","_this","configUrl","Date","now","status","Status","http","subscribe","data","_a","onLoad","str","expr","RegExp","replace","Injectable","args","providedIn","HttpClient","application","name","ecmHost","bpmHost","logLevel","alfrescoRepositoryName","Subject","asObservable","defineProperty","StorageService","_prefix","getItem","useLocalStorage","localStorage","memoryStore","setItem","toString","clear","removeItem","hasItem","storageAvailable","type","storage","window","AlfrescoApiService","getInstance","alfrescoApi","activiti","taskApi","content","nodes","core","renditionsApi","sharedlinksApi","sitesApi","favoritesApi","peopleApi","search","searchApi","versionsApi","classesApi","groupsApi","appConfig","storageService","AppConfigValues","initAlfrescoApi","alfrescoApiInitializedSubject","reset","oauth","redirectUri","origin","redirectUriLogout","AlfrescoApiConfig","provider","hostEcm","hostBpm","authType","contextRootBpm","contextRoot","disableCsrf","withCredentials","oauth2","isDifferentConfig","lastConfig","configureJsApi","AlfrescoApiCompatibility","newConfig","JSON","stringify","nodeUpdated","alfrescoApiInitialized","CookieService","isEnabled","navigator","cookieEnabled","document","cookie","indexOf","exec","expiration","path","toUTCString","_super","LogLevelsEnum","tslib_1.__extends","Number","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","logLevels","level","LogService","configLevel","getLogLevel","message","optionalParams","currentLogLevel","messageBus","console","debug","info","log","trace","warn","assert","test","group","groupTitle","groupEnd","referencedLevel","find","currentLevel","toLocaleLowerCase","text","onMessage","JwtHelperService","decodeToken","token","parts","Error","decoded","urlBase64Decode","parse","output","decodeURIComponent","escape","atob","getValueFromLocalAccessToken","getValueFromToken","getAccessToken","USER_ACCESS_TOKEN","accessToken","USER_NAME","FAMILY_NAME","GIVEN_NAME","USER_EMAIL","USER_PREFERRED_USERNAME","REMEMBER_ME_COOKIE_KEY","AuthenticationService","isLoggedIn","isOauth","isRememberMeSet","isOauthConfiguration","isECMProvider","isEcmConfiguration","isBPMProvider","isBpmConfiguration","isALLProvider","isEcmBpmConfiguration","login","username","password","rememberMe","from","response","saveRememberMeCookie","onLogin","ticket","catchError","err","handleError","ssoImplicitLogin","implicitLogin","expireTime","getTime","setTime","logout","callApiLogout","tap","onLogout","getTicketEcm","getTicketBpm","getTicketEcmBase64","btoa","isEcmLoggedIn","isBpmLoggedIn","getEcmUsername","getBpmUsername","setRedirect","url","redirectUrl","getRedirect","hasValidRedirection","getBpmLoggedUser","profileApi","getProfile","hasSelectedProviderAll","logService","throwError","getBearerExcludedUrls","bearerExcludedUrls","getToken","addTokenToHeader","headersArg","Observable","observer","headers","HttpHeaders","complete","isSSODiscoveryConfigured","BpmProductVersionModel","obj","edition","majorVersion","revisionVersion","minorVersion","VersionModel","major","minor","patch","hotfix","schema","display","LicenseModel","issuedAt","expiresAt","remainingDays","holder","mode","isClusterEnabled","isCryptodocEnabled","VersionStatusModel","isReadOnly","isAuditEnabled","isQuickShareEnabled","isThumbnailGenerationEnabled","VersionModuleModel","id","title","description","version","installDate","installState","versionMin","versionMax","EcmProductVersionModel","modules","entry","repository","license","module","DiscoveryApiService","getEcmProductInfo","apiService","discovery","discoveryApi","getRepositoryInformation","res","getBpmProductInfo","aboutApi","getAppVersion","FileUtils","flatten","folder","reader","createReader","files","iterations","traverse","readEntries","entries","all","isFile","resolveFile","file","relativeFolder","fullPath","toFileArray","fileList","MOMENT_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateAdapter","MomentDateAdapter","getYear","date","year","getMonth","month","getDate","getDayOfWeek","day","getMonthNames","style","localeData","months","monthsShort","getDateNames","dateNames","String","getDayOfWeekNames","weekdays","weekdaysShort","getYearName","getFirstDayOfWeek","firstDayOfWeek","getNumDaysInMonth","daysInMonth","clone","locale","createDate","moment","today","parseFormat","isValid","overrideDisplayFormat","currentYear","getFullYear","isAfter","format","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","getISODateString","toISOString","setLocale","compareDate","first","second","diff","sameDate","isMoment","isSame","clampDate","min","max","isBefore","isDateInstance","isValidDateInstance","_isAMomentObject","toIso8601","fromIso8601","iso8601String","ISO_8601","invalid","ObjectDataRow","hasValue","imageErrorResolver","event","isSelected","ObjectDataColumn","input","sortable","srTitle","cssClass","template","copyContent","DataSorting","direction","ObjectDataTableAdapter","generateSchema","rowToExaminate","getRows","_rows","setRows","rows","sort","rowsChanged","getColumns","_columns","setColumns","columns","row","col","getSorting","_sorting","setSorting","sorting","a","left","valueOf","right","localeCompare","item","filter","column","AboutComponent","ngOnInit","authService","ecmVers","ecmVersion","bpmVers","bpmVersion","alfrescoPackages","dependencies","val","regexp","alfrescoPackagesTableRepresentation","required","gitHubLinkCreation","corePackage","packageUp","commitIsh","githubUrlCommitAlpha","Component","selector","encapsulation","ViewEncapsulation","None","AppExtensionService","Input","appExtensions","extensionColumns","showExtensions","extensions$","references$","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatNativeDateModule","MatOptionModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatMenuModule","MatProgressBarModule","MatSidenavModule","MatSnackBarModule","MatToolbarModule","MatTooltipModule","MatDatetimepickerModule","MatNativeDatetimeModule","MatExpansionModule","MaterialModule","NgModule","imports","exports","ContextMenuService","show","ContextMenuHolderComponent","onShowContextMenu","preventDefault","onResize","mdMenuElement","updatePosition","subscriptions","contextMenuService","mouseEvent","showMenu","menuTrigger","menuOpened","container","overlayContainer","getContainerElement","contextMenuListenerFn","renderer","listen","contextmenuEvent","menuElement","getContextMenuElement","menuClosed","ngOnDestroy","subscription","unsubscribe","onMenuItemClick","menuItem","model","disabled","stopImmediatePropagation","subject","links","mouseLocation","clientX","top","clientY","openMenu","locationCss","setTimeout","parentElement","clientWidth","viewport","getViewportRect","width","menu","xPosition","clientHeight","height","yPosition","querySelector","ViewportRuler","OverlayContainer","Renderer2","ViewChild","MatMenuTrigger","HostListener","showIcons","ContextMenuOverlayRef","close","overlayRef","dispose","CONTEXT_MENU_DATA","InjectionToken","contextMenuAnimation","state","opacity","transform","transition","sequence","query","animate","ContextMenuListComponent","handleKeydownEscape","contextMenuOverlayRef","handleKeydownEvent","keyCode","UP_ARROW","DOWN_ARROW","keyManager","onKeydown","ngAfterViewInit","FocusKeyManager","items","setFirstItemActive","host","role","class","animations","trigger","decorators","Inject","Optional","ViewChildren","MatMenuItem","DEFAULT_CONFIG","panelClass","backdropClass","hasBackdrop","ContextMenuOverlayService","open","overlayConfig","overlay","createOverlay","attachDialogContainer","backdropClick","_backdropElement","addEventListener","_backdropClick","getOverlayConfig","injector","createInjector","containerPortal","ComponentPortal","attach","instance","injectionTokens","WeakMap","PortalInjector","fakeElement","getBoundingClientRect","bottom","positionStrategy","position","connectedTo","ElementRef","originX","originY","overlayX","overlayY","withFallbackPosition","OverlayConfig","scrollStrategy","scrollStrategies","Injector","Overlay","ContextMenuDirective","enabled","Directive","CommonModule","TranslateModule","forChild","declarations","entryComponents","ContextMenuModule","PaginationSize","Locale","SupportedPageSizes","ExpandedSideNavStatus","UserPreferencesService","initUserPreferenceStatus","initUserLanguage","UserPreferenceValues","paginationSize","supportedPageSizes","getDefaultLocale","getLanguageByKey","setWithoutStore","onChange","userPreferenceStatus","getPropertyKey","onChangeSubject","getStoragePrefix","setStoragePrefix","defaults","translate","getBrowserCultureLang","language","includes","TranslateService","alfrescoApiService","expandedSidenav","bind","BehaviorSubject","TRANSLATION_PROVIDER","TranslationService","addTranslationFolder","customLoader","providerRegistered","registerProvider","userLang","loadTranslation","defaultLang","lang","fallback","getTranslation","use","onTranslationChanged","onTranslationChange","translations","getFullTranslationJSON","init","interpolateParams","instant","userPreferencesService","providers","setDefaultLang","providers_1","tslib_1.__values","providers_1_1","FileSizePipe","bytes","decimals","translation","dm","Math","floor","i18nSize","parseFloat","pow","toFixed","Pipe","pure","ThumbnailService","getDocumentThumbnailUrl","node","attachment","resultUrl","nodeId","contentApi","DEFAULT_ICON","getMimeTypeIcon","mimeType","mimeTypeIcons","getDefaultMimeTypeIcon","MatIconRegistry","DomSanitizer","matIconRegistry","sanitizer","image/png","image/jpeg","image/gif","image/bmp","image/cgm","image/ief","image/jp2","image/tiff","image/vnd.adobe.photoshop","image/vnd.adobe.premiere","image/x-cmu-raster","image/x-dwt","image/x-portable-anymap","image/x-portable-bitmap","image/x-portable-graymap","image/x-portable-pixmap","image/x-raw-adobe","image/x-raw-canon","image/x-raw-fuji","image/x-raw-hasselblad","image/x-raw-kodak","image/x-raw-leica","image/x-raw-minolta","image/x-raw-nikon","image/x-raw-olympus","image/x-raw-panasonic","image/x-raw-pentax","image/x-raw-red","image/x-raw-sigma","image/x-raw-sony","image/x-xbitmap","image/x-xpixmap","image/x-xwindowdump","image/svg+xml","application/eps","application/illustrator","application/pdf","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/vnd.ms-excel.addin.macroenabled.12","application/vnd.ms-excel.sheet.binary.macroenabled.12","application/vnd.ms-excel.sheet.macroenabled.12","application/vnd.ms-excel.template.macroenabled.12","application/vnd.sun.xml.calc","application/vnd.sun.xml.calc.template","application/vnd.ms-outlook","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-word.document.macroenabled.12","application/vnd.ms-word.template.macroenabled.12","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.template","application/rtf","text/rtf","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.presentationml.slideshow","application/vnd.oasis.opendocument.presentation","application/vnd.oasis.opendocument.presentation-template","application/vnd.openxmlformats-officedocument.presentationml.slide","application/vnd.sun.xml.impress","application/vnd.sun.xml.impress.template","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.spreadsheet-template","application/vnd.ms-powerpoint.addin.macroenabled.12","application/vnd.ms-powerpoint.presentation.macroenabled.12","application/vnd.ms-powerpoint.slide.macroenabled.12","application/vnd.ms-powerpoint.slideshow.macroenabled.12","application/vnd.ms-powerpoint.template.macroenabled.12","video/mp4","video/3gpp","video/3gpp2","video/mp2t","video/mpeg","video/mpeg2","video/ogg","video/quicktime","video/webm","video/x-flv","video/x-m4v","video/x-ms-asf","video/x-ms-wmv","video/x-msvideo","video/x-rad-screenplay","video/x-sgi-movie","video/x-matroska","audio/mpeg","audio/ogg","audio/wav","audio/basic","audio/mp4","audio/vnd.adobe.soundbooth","audio/vorbis","audio/x-aiff","audio/x-flac","audio/x-ms-wma","audio/x-wav","x-world/x-vrml","text/plain","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.text-template","application/x-javascript","application/json","text/csv","text/xml","text/html","application/x-compressed","application/x-zip-compressed","application/zip","application/x-tar","application/vnd.apple.keynote","application/vnd.apple.pages","application/vnd.apple.numbers","application/vnd.visio","application/wordperfect","application/x-cpio","smartFolder","ruleFolder","linkFolder","disable/folder","selected","bypassSecurityTrustResourceUrl","addSvgIcon","addSvgIconInNamespace","MimeTypeIconPipe","thumbnailService","NodeNameTooltipPipe","getNodeTooltip","containsLine","lines","line","some","toLowerCase","removeDuplicateLines","reduce","acc","properties","join","HighlightTransformService","highlight","wrapperClass","isMatching","pattern","regex","match","changed","HighlightPipe","highlightTransformService","TimeAgoPipe","actualLocale","defaultLocale","DatePipe","defaultDateTimeFormat","fromNow","onDestroy$","DEFAULT_LOCALE","DEFAULT_DATE_TIME_FORMAT","userPreferenceService","takeUntil","InitialUsernamePipe","user","className","delimiter","safeHtml","initialResult","getInitialUserName","firstName","lastName","sanitized","bypassSecurityTrustHtml","FullNamePipe","fullName","FormatSpacePipe","inputValue","replaceChar","lowerCase","transformedString","trim","FileTypePipe","substring","lastIndexOf","MultiValuePipe","values","valueSeparator","DEFAULT_SEPARATOR","LocalizedDatePipe","actualFormat","defaultFormat","DEFAULT_DATE_FORMAT","DecimalNumberPipe","digitsInfo","actualDigitsInfo","minIntegerDigits","defaultMinIntegerDigits","minFractionDigits","defaultMinFractionDigits","maxFractionDigits","defaultMaxFractionDigits","DecimalPipe","DEFAULT_MIN_INTEGER_DIGITS","DEFAULT_MIN_FRACTION_DIGITS","DEFAULT_MAX_FRACTION_DIGITS","PipeModule","HighlightDirective","ngAfterViewChecked","classToApply","el","nativeElement","querySelectorAll","element","highlightTransformResult","innerHTML","setProperty","LogoutDirective","elementRef","evt","auth","redirectToUri","enableRedirect","router","navigate","Router","NodeDeleteDirective","onClick","process","selection","ngOnChanges","setDisableAttribute","hasAttribute","disable","batch","getDeleteNodesBatch","forkJoin","processedItems","processStatus","getMessage","delete","emit","deleteNode","promise","nodesApi","purgeDeletedNode","permanent","of","success","failed","someFailed","someSucceeded","oneFailed","oneSucceeded","allSucceeded","allFailed","number","Output","EventEmitter","NodeFavoriteDirective","toggleFavorite","changes","currentValue","markFavoritesNodes","favorites","every","isFavorite","removeFavoriteSite","toggle","notFavorite_1","createFavoriteBody","addFavorite","newFavorites","getProcessBatch","hasFavorites","getFavorite","isFolder","getNodeType","guid","list","ids","comparator","exportAs","PermissionsEnum","CONTRIBUTOR","CONSUMER","COLLABORATOR","MANAGER","EDITOR","COORDINATOR","NOT_CONTRIBUTOR","NOT_CONSUMER","NOT_COLLABORATOR","NOT_MANAGER","NOT_EDITOR","NOT_COORDINATOR","AllowableOperationsEnum","DELETE","UPDATE","CREATE","COPY","LOCK","UPDATEPERMISSIONS","NOT_DELETE","NOT_UPDATE","NOT_CREATE","NOT_UPDATEPERMISSIONS","DownloadService","downloadBlob","blob","fileName","saveData","downloadData","downloadJSON","json","createElement","appendChild","fileData","Blob","msSaveOrOpenBlob","URL","createObjectURL","href","download","click","revokeObjectURL","ContentService","downloadService","createTrustedUrl","bypassSecurityTrustUrl","getContentUrl","getNodeContent","getFileContent","getNode","opts","hasPermissions","permission","permissions","locallySet","startsWith","currentPermission","hasAllowableOperations","allowableOperation","allowableOperations","currentOperation","isLocked","folderCreated","folderCreate","folderEdit","EXTENDIBLE_COMPONENT","CheckAllowableOperationDirective","firstChange","updateElement","enable","parentComponent","changeDetector","detectChanges","enableElement","disableElement","removeAttribute","setAttribute","contentService","ChangeDetectorRef","Host","NodeRestoreDirective","recover","nodesWithPath","getNodesWithPath","restoreProcessStatus","fail","notification","restoreNodesBatch","restoredNodes","_b","mergeMap","getDeletedNodes","deletedNodesList","nodeList","restoreErrorNodes","selectedNodes","remainingNodes","restoreNode","include","statusCode","fromList","getRestoreMessage","action","restore","UploadDirective","isClickMode","inputUpload","upload","onSelectFiles","multiple","accept","directory","isDropMode","ngZone","runOutsideAngular","onDragEnter","onDragOver","onDragLeave","onDrop","removeEventListener","classList","cssClassName","isDragging","remove","stopPropagation","dataTransfer","getDataTransfer","getFilesDropped","onUploadFiles","customEvent","CustomEvent","detail","sender","bubbles","dispatchEvent","hasMode","originalEvent","webkitGetAsEntry","item_1","getAsFile","isDirectory","resolveFolder","NgZone","DownloadZipService","createDownload","payload","downloadsApi","getDownload","downloadId","cancelDownload","DownloadZipDialogComponent","nodeIds","cancelled","downloadZip","downloadZipService","dialogRef","url_1","downloadNode","waitAndDownload","downloadEntry","link","removeChild","MatDialogRef","MAT_DIALOG_DATA","NodeDownloadDirective","downloadNodes","isSelectionValid","downloadFile","dialog","disableClose","MatDialog","DirectiveModule","DataTableCellComponent","updateValue","value$","tooltip","changeDetection","ChangeDetectionStrategy","OnPush","DataColumnComponent","ContentChild","TemplateRef","ContentChildren","DataColumnListComponent","BaseEvent","isDefaultPrevented","BaseUIEvent","Pending","Complete","Starting","Progress","Cancelled","Aborted","Deleted","FileModel","slice","Infinity","options","FileUploadStatus","size","errorCode","progress","loaded","total","percent","newVersion","FileUploadEvent","FileUploadCompleteEvent","totalComplete","totalAborted","FileUploadDeleteEvent","FileUploadErrorEvent","totalError","DataRowEvent","domEvent","DataCellEventModel","actions","DataCellEvent","DataRowActionModel","DataRowActionEvent","List","Gallery","DataTableComponent","ngAfterContentInit","columnList","setTableSchema","datatableLayoutFix","initAndSubscribeClickStream","isPropertyChanged","isTableEmpty","initTable","resetSelection","setTableRows","selectionMode","isFirstChange","emitRowSelectionEvent","setTableSorting","ngDoCheck","differ","convertToRowsData","convertToDataSorting","unsubscribeClickStream","singleClickStream","click$","buffer","debounceTime","x","singleClickStreamSub","dataRowEvents","handleRowSelection","rowClick","defaultPrevented","multiClickStream","multiClickStreamSub","rowDblClick","rowMenuCache","getSchemaFromHtml","c","onRowClick","dataRowEvent","clickObserver","onEnterKeyPressed","isSingleSelectionMode","selectRow","isMultiSelectionMode","modifier","metaKey","ctrlKey","newValue","domEventName","isSelectAllChecked","onRowDblClick","onRowKeyUp","keyboardEvent","onKeyboardNavigate","onColumnHeaderClick","current","newDirection","emitSortingChangedEvent","onSelectAllClick","matCheckboxChange","checked","multiselect","onCheckboxChange","onImageLoadingError","fallbackThumbnail","src","isIconValue","asIconValue","iconAltTextKey","isColumnSorted","getContextMenuActions","showRowContextMenu","getRowActions","event_1","showRowActionsMenu","rowMenuCacheEnabled","onExecuteRowAction","executeRowAction","rowAllowsDrop","isDropTarget","hasSelectionMode","getRowStyle","rowStyleClass","getSortingKey","idx","splice","getCellTooltip","formatTooltip","getSortableColumns","isEmpty","isHeaderVisible","loading","noPermission","isStickyHeaderEnabled","stickyHeader","dataRowsChanged","fakeRows","getNameColumnValue","getAutomationValue","IterableDiffers","differs","DisplayMode","actionsPosition","contextMenu","allowDropFiles","showHeader","share","DateCellComponent","dateFormat","DATE_FORMAT","currentLocale","EmptyListComponent","EmptyListHeaderDirective","EmptyListBodyDirective","EmptyListFooterDirective","FileSizeCellComponent","LocationCellComponent","elements","parent_1","LoadingContentTemplateDirective","dataTable","loadingTemplate","NoContentTemplateDirective","noContentTemplate","NoPermissionTemplateDirective","noPermissionTemplate","CustomEmptyContentTemplateDirective","CustomLoadingContentTemplateDirective","CustomNoPermissionTemplateDirective","JsonCellComponent","NotificationService","openSnackMessage","DEFAULT_DURATION_MESSAGE","translatedMessage","translationService","duration","messages","dateTime","snackBar","openSnackMessageAction","dismissSnackMessageAction","dismiss","showMessage","showError","showInfo","showWarning","MatSnackBar","appConfigService","ClipboardService","isTargetValid","HTMLInputElement","HTMLTextAreaElement","copyToClipboard","setSelectionRange","execCommand","notify","copyContentToClipboard","clipboardData","setData","notificationService","DOCUMENT","ClipboardDirective","handleClickEvent","showTooltip","placeholder","componentFactory","resolver","resolveComponentFactory","ClipboardComponent","viewContainerRef","createComponent","closeTooltip","clipboardService","ViewContainerRef","ComponentFactoryResolver","ClipboardModule","DropZoneDirective","dropTarget","dropColumn","dropRow","RouterModule","DataTableModule","DataColumnModule","AboutModule","ViewUtilService","printFile","pwa","TARGET","ContentGroup","IMAGE","onfocus","onload","print","printFileGeneric","objectId","getViewerTypeByMimeType","getRendition","PDF","getRenditionUrl","printType","TEXT","catch","renditionExists","waitRendition","renditionId","retries","rendition","maxRetries","wait","editorTypes","mimeTypes","editorTypes_1","editorTypes_1_1","ms","getRenditions","renditionPaging","renditionEntry","createRendition","err_1","MEDIA","pdf","image","media","ViewerMoreActionsComponent","ViewerOpenWithComponent","ViewerSidebarComponent","ViewerToolbarComponent","ViewerComponent","isSourceDefined","urlFile","blobFile","sharedLinkId","onNodeUpdated","loadExtensions","viewerExtensions","extensionService","getViewerExtensions","extension","externalExtensions","fileExtension","generateCacheBusterNumber","isLoading","setUpNodeFile","showViewer","setUpBlobData","setUpUrlFile","nodeEntry","allowGoBack","sharedLinksApi","getSharedLink","sharedLinkEntry","setUpSharedLinkFile","invalidSharedLink","fileTitle","getDisplayName","viewerType","allowDownload","extensionChange","scrollTop","filenameFromUrl","getFilenameFromUrl","getFileExtension","urlFileContent","displayName","urlFileViewer","getViewerTypeByExtension","cacheBusterNumber","setupNode","displayNodeRendition","sidebarRightTemplateContext","sidebarLeftTemplateContext","details","getSharedLinkContentUrl","displaySharedLinkRendition","toggleSidebar","showRightSidebar","toggleLeftSidebar","showLeftSidebar","scrollTo","isCustomViewerExtension","extensions","onBackButtonClick","onNavigateBeforeClick","navigateBefore","onNavigateNextClick","navigateNext","otherMenu","hidden","showViewerChange","anchor","end","flat","handleKeyboardEvent","overlayMode","canNavigateBefore","canNavigateNext","enterFullScreen","printContent","allowPrint","viewUtils","allowFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","resolveRendition","sharedId","getSharedLinkRendition","getSharedLinkRenditionUrl","error_1","error_2","supportedRendition","err_2","currentRetry","intervalId","setInterval","clearInterval","TRY_TIMEOUT","checkExtensions","extensionAllowed","currentExtension","showToolbar","allowNavigate","allowLeftSidebar","allowRightSidebar","allowThumbnails","sidebarRightTemplate","sidebarLeftTemplate","thumbnailsTemplate","goBack","extensionTemplates","ImgViewerComponent","bypassSecurityTrustStyle","scaleX","scaleY","rotate","offsetX","offsetY","round","initializeScaling","scaling","onMouseDown","onMouseUp","onMouseLeave","onMouseOut","onMouseMove","isDragged","drag","pageX","pageY","delta","zoomIn","ratio","zoomOut","rotateLeft","angle","abs","rotateRight","MediaPlayerComponent","RenderingQueueServices","setViewer","pdfViewer","setThumbnailViewer","pdfThumbnailViewer","isHighestPriority","view","highestPriorityPage","renderingId","renderHighestPriority","currentlyVisiblePages","idleTimeout","clearTimeout","forceRendering","isThumbnailViewEnabled","printing","onIdle","CLEANUP_TIMEOUT","getHighestPriority","visible","views","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","last","previousPageIndex","renderingState","renderingStates","FINISHED","renderView","PAUSED","resume","RUNNING","INITIAL","continueRendering","draw","PdfPasswordDialogComponent","passwordFormControl","FormControl","Validators","isError","reason","pdfjsLib","PasswordResponses","INCORRECT_PASSWORD","hasError","submit","PdfViewerComponent","currentScale","getUserScaling","scaleConfig","checkLimits","MAX_SCALE","MIN_SCALE","reader_1","FileReader","executePdf","readAsArrayBuffer","pdfOptions","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","onPassword","callback","onPdfPassword","onProgress","progressData","loadingPercent","pdfDocument","currentPdfDocument","totalPages","numPages","page","displayPage","initPDFViewer","getPage","scalePage","viewer","getElementById","randomPdfId","documentContainer","onPageChange","onPagesLoaded","onPageRendered","pdfjsViewer","PDFViewer","renderingQueue","renderingQueueServices","setDocument","pdfThumbnailsContext","destroy","toggleThumbnails","showThumbnails","scaleMode","currentScaleMode","viewerContainer","widthContainer","heightContainer","currentPage","_pages","_currentPageNumber","pageWidthScale","scale","pageHeightScale","setScaleUpdatePages","horizontalScale","isLandscape","MAX_AUTO_SCALE","newScale","isSameScale","update","oldScale","pageFit","ticks","DEFAULT_SCALE_DELTA","ceil","previousPage","currentPageNumber","nextPage","inputPage","pageInput","parseInt","isNaN","pageNumber","afterClosed","rendered","isPanelDisabled","generateUuid","random","PdfThumbListComponent","calculateItems","eventBus","on","setHeight","getPages","scrollInto","off","trackByFn","index","pageNum","goTo","findIndex","itemHeight","getWidth","getHeight","currentHeight","calculateHeight","getViewport","pageRatio","margin","getContainerSetup","viewPort","itemsInView","indexByScrollTop","start","translateY","virtualHeight","renderItems","elementRec","PdfThumbComponent","image$","getThumb","canvas","getCanvas","render","canvasContext","getContext","imageSource","toDataURL","TxtViewerComponent","readBlob","getUrlContent","withCredentialsMode","responseType","onerror","readAsText","UnknownFormatComponent","ViewerToolbarActionsComponent","ViewerExtensionDirective","templateModel","isVisible","viewerComponent","supportedExtensions","supportedExtension","ToolbarDividerComponent","ToolbarTitleComponent","ToolbarComponent","ToolbarModule","ExtensionsModule","FormsModule","ReactiveFormsModule","FlexLayoutModule","ViewerModule","BpmUserModel","apps","capabilities","company","created","email","externalId","fullname","groups","lastUpdate","latestSyncTimeStamp","pictureId","tenantId","tenantName","tenantPictureId","BpmUserService","getCurrentUserInfo","userRepresentation","getCurrentUserProfileImage","getProfilePictureUrl","EcmUserModel","avatarId","skypeId","googleId","instantMessageId","jobTitle","mobile","telephone","statusUpdatedAt","userStatus","emailNotificationsEnabled","EcmUserService","getUserInfo","userName","getPerson","personEntry","getUserProfileImage","temporary","realm","userId","groupId","IdentityUserModel","createdTimestamp","emailVerified","IdentityUserService","familyName","jwtHelperService","givenName","findUsersByName","buildUserUrl","queryParams","oauth2Auth","callCustomApi","findUserByUsername","findUserByEmail","findUserById","getClientRoles","clientId","buildUserClientRoleMapping","checkUserHasClientApp","clientRoles","checkUserHasAnyClientAppRole","roleNames","hasRole","roleName","availableRole","getClientIdByApplicationName","applicationName","buildGetClientsUrl","checkUserHasApplicationAccess","switchMap","checkUserHasAnyApplicationRole","getUsers","getUserRoles","buildRolesUrl","getUsersByRolesWithCurrentUser","filteredUsers","toPromise","users","userHasAnyRole","getUsersByRolesWithoutCurrentUser","currentUser_1","userRoles","userRole","checkUserHasRole","queryUsers","requestQuery","pathParams","bodyParam","headerParams","formParams","authNames","contentTypes","getTotalUsersCount","totalCount","pagination","skipCount","maxItems","count","hasMoreItems","totalItems","createUser","newUser","updateUser","updatedUser","deleteUser","changePassword","newPassword","getInvolvedGroups","joinGroup","joinGroupRequest","leaveGroup","getAvailableRoles","getAssignedRoles","getEffectiveRoles","assignRoles","roles","removeRoles","removedRoles","UserInfoComponent","loadIdentityUserInfo","loadEcmUserInfo","loadBpmUserInfo","onKeyPress","closeUserModal","$event","closeMenu","ecmUser$","ecmUserService","bpmUser$","bpmUserService","identityUser$","identityUserService","stopClosing","getEcmAvatar","getBpmUserImage","showOnRight","namePosition","ecmBackgroundImage","bpmBackgroundImage","menuPositionX","menuPositionY","showName","clientRole","composite","containerId","scopeParamRequired","realmRoles","access","attributes","UserInfoModule","HostSettingsComponent","showSelectProviders","providerSelected","form","formBuilder","providersControl","addFormGroups","addOAuthFormGroup","addIdentityHostFormControl","valueChanges","removeControl","removeFormGroups","addBPMFormControl","addECMFormControl","oauthFormGroup","createOAuthFormGroup","addControl","isBPM","isALL","isOAUTH","bpmFormControl","createBPMFormControl","identityHostFormControl","createIdentityFormControl","isECM","ecmFormControl","createECMFormControl","HOST_REGEX","scope","secret","silentLogin","implicitFlow","onCancel","cancel","onSubmit","saveBPMValues","saveECMValues","saveOAuthValues","invalidateSession","keyDownFunction","ENTER","valid","oauthConfig","identityHost","FormBuilder","HostSettingsModule","PaginationComponent","pagSize","isFirstPage","goPrevious","cdr","DEFAULT_PAGINATION","lastPage","isLastPage","hasItems","fill","goNext","handlePaginationEvent","ACTIONS","NEXT_PAGE","previous","PREV_PAGE","onChangePageNumber","CHANGE_PAGE_NUMBER","onChangePageSize","CHANGE_PAGE_SIZE","params","change","changePageNumber","changePageSize","prevPage","paginationModel","updatePagination","Pagination","HostBinding","InfinitePaginationComponent","_target","pageSize","requestPaginationModel","onLoadMore","loadMore","PaginationModule","LoginErrorEvent","LoginSubmitEvent","_values","_defaultPrevented","LoginSuccessEvent","Landing","Checking","Welcome","LoginComponent","forward","route","hasCustomFieldsValidation","_fb","fieldsValidation","initFormFieldsDefault","initFormFieldsMessagesDefault","onValueChanged","disableError","errorMsg","controls","executeSubmit","performLogin","field","formError","errors","dirty","_message","translated","translateService","actualLoginStep","LoginSteps","userPreferences","navigateByUrl","successRoute","displayErrorMessage","crossDomain","addCustomFormError","msg","addCustomValidationError","ruleId","toggleShowPassword","isPasswordShow","isErrorStyle","pristine","trimUsername","getBackgroundUrlImageUrl","backgroundImageUrl","initFormError","initFormFieldsMessages","minLength","Location","ActivatedRoute","showRememberMe","showLoginActions","needHelpLink","registerLink","logoImageUrl","copyrightText","LoginHeaderDirective","alfrescoLoginComponent","headerTemplate","LoginFooterDirective","footerTemplate","LoginDialogComponent","logged","submitForm","loginPanel","onLoginSuccess","isFormValid","buttonActionName","actionName","toUpperCase","LoginDialogPanelComponent","LoginModule","LanguageMenuComponent","languagesConfigApp","languages","changeLanguage","userPreference","LanguageMenuModule","InfoDrawerLayoutComponent","InfoDrawerTitleDirective","InfoDrawerButtonsDirective","InfoDrawerContentDirective","InfoDrawerTabComponent","icon","InfoDrawerComponent","showTabLayout","contentBlocks","onTabChange","currentTab","selectedIndex","InfoDrawerModule","DataTableSchema","createDatatableSchema","loadLayoutPresets","mergeJsonAndHtmlSchema","externalSettings","presetKey","layoutPresets","presetsModel","customSchemaColumns","getSchemaFromConfig","presetColumn","getDefaultLayoutPreset","CardViewComponent","displayEmpty","displayNoneOption","displayClearAction","transformKeyToObject","reverse","previousValue","CardViewUpdateService","itemUpdated$","clicked","itemClicked$","CardViewBoolItemComponent","isEditable","editable","cardViewUpdateService","ɵ1","MAT_MOMENT_DATETIME_FORMATS","CardViewDateItemComponent","dateAdapter","valueDate","showProperty","showClearAction","default","showDatePicker","datepicker","onDateChanged","newDateValue","momentDate","toDate","onDateClear","provide","useClass","MAT_DATE_FORMATS","useValue","ɵ0","DatetimeAdapter","MomentDatetimeAdapter","MAT_DATETIME_FORMATS","CardViewMapItemComponent","isClickable","clickable","CardViewTextItemComponent","editedValue","multiline","displayValue","hasIcon","hasErrors","errorMessages","setEditMode","editStatus","inEdit","editorInput","resetErrorMessages","updatedValue","prepareValueForUpload","getValidationErrors","multivalued","onTextAreaInputChange","clickCallBack","CardViewSelectItemComponent","getOptions","options$","selectedOption","showNoneOption","CardViewKeyValuePairsItemComponent","matTableValues","MatTableDataSource","save","onBlur","validValues","getType","DynamicComponentResolver","fromType","DynamicComponentMapper","getComponentTypeResolver","types","setComponentTypeResolver","override","resolveComponentType","CardItemTypeService","int","float","datetime","bool","keyvaluepairs","CardViewContentProxyDirective","CardViewItemDispatcherComponent","loadComponent","changeName","inputParamName","simpleChange","componentReference","proxy","factoryClass","cardItemTypeService","factory","methodName","method","CardViewItemIntValidator","CardViewItemFloatValidator","isFinite","CardViewBaseItemModel","validators","validator","isValidUntilNow","cardViewItemProperties","CardViewBoolItemModel","cardViewBoolItemProperties","CardViewDateItemModel","localizedDatePipe","cardViewDateItemProperties","CardViewDatetimeItemModel","CardViewTextItemModel","applyPipes","pipes","accumulator","cardViewTextItemProperties","CardViewFloatItemModel","CardViewIntItemModel","CardViewMapItemModel","CardViewKeyValuePairsItemModel","cardViewKeyValuePairsItemProperties","CardViewSelectItemModel","option","cardViewSelectItemProperties","CardViewModule","DebugAppConfigService","AppConfigPipe","HttpClientModule","AppConfigModule","FormDefinitionModel","FormSaveRepresentation","metadataToFields","metadata","fields","readOnly","sizeX","sizeY","colspan","existingColspan","maxColspan","layout","lastUpdatedByFullName","lastUpdated","reusable","formImageBase64","formRepresentation","lastUpdatedBy","stencilSetId","referenceId","formDefinition","fieldType","numberOfColumns","1","gridsterForm","javascriptEvents","outcomes","tabs","variables","FormFieldTypes","isReadOnlyType","READONLY_TYPES","isContainerType","CONTAINER","GROUP","DYNAMIC_TABLE","MULTILINE_TEXT","DROPDOWN","HYPERLINK","RADIO_BUTTONS","DISPLAY_VALUE","READONLY_TEXT","UPLOAD","TYPEAHEAD","FUNCTIONAL_GROUP","PEOPLE","BOOLEAN","NUMBER","DATE","AMOUNT","DATETIME","ATTACH_FOLDER","tab","WidgetVisibilityModel","leftFormFieldId","WidgetTypeEnum","leftRestResponseId","variable","leftType","rightType","rightValue","rightRestResponseId","rightFormFieldId","leftValue","operator","nextCondition","nextConditionOperator","ContainerColumnModel","hasFields","rowspan","ErrorMessageModel","isActive","getAttributesAsJsonObj","obj_1","RequiredFieldValidator","isSupported","supportedTypes","validate","hasEmptyValue","emptyOption","opt","NumberFieldValidator","isNumber","valueStr","enableFractions","validationSummary","DateFieldValidator","isValidDate","inputDate","dateDisplayFormat","BoundaryDateFieldValidator","checkDate","extractDateFormat","DATE_FORMAT_CLOUD","MinDateFieldValidator","fieldValueData","minValueDateFormat","minValue","toLocaleUpperCase","MaxDateFieldValidator","maxValueDateFormat","maxValue","MinDateTimeFieldValidator","checkDateTime","fieldValueDate","MIN_DATETIME_FORMAT","MaxDateTimeFieldValidator","MAX_DATETIME_FORMAT","MinLengthFieldValidator","toLocaleString","MaxLengthFieldValidator","maxLength","MinValueFieldValidator","MaxValueFieldValidator","RegExFieldValidator","regexPattern","FixedValueFieldValidator","hasValidNameOrValidId","hasValidName","hasValidId","hasStringValue","hasOptions","FORM_FIELD_VALIDATORS","FormWidgetModel","FormFieldModel","_value","updateForm","_readOnly","_required","_isValid","markAsInvalid","fieldValidators","validators_1","validators_1_1","getDefaultDateFormat","jsonField","originalType","defaultDateFormat","isTypeaheadFieldType","getFieldNameWithLabel","getProcessVariableValue","fieldName","findProcessVariableValue","getVariablesValue","variableName","currentVariable","processVariables","containerFactory","currentField","colFields","parseValue","isDateField","isDateTimeField","dateValue","rbEntry","hasUpload","elem","taEntry","dateTimeValue","utc","isInvalidFieldType","onFormFieldChanged","getOptionName","visibilityCondition","currency","overrideId","restUrl","restResponsePath","restIdProperty","restLabelProperty","optionType","hyperlinkUrl","displayText","processVariable","responseVariable","formVariable","FormEvent","FormFieldEvent","ValidateFormFieldEvent","ValidateFormEvent","errorsField","ContainerModel","FormOutcomeModel","SAVE_ACTION","COMPLETE_ACTION","START_PROCESS_ACTION","isSystem","selectedOutcome","TabModel","hasContent","FormBaseModel","hasTabs","hasOutcomes","getFieldById","fieldId","getFormFields","formFieldModel","UNSET_TASK_NAME","SAVE_OUTCOME","COMPLETE_OUTCOME","START_PROCESS_OUTCOME","FormModel","validateField","formService","formFieldValueChanged","validateForm","validateFormEvent","validateFieldEvent","validateFormField","parseRootFields","formWidgetModel","fields_1","fields_1_1","loadData","formValues","_c","formRepresentationJSON","taskName","customFieldTemplates","taskId","processDefinitionId","tabCache_1","saveOutcome","completeOutcome","startProcessOutcome","customOutcomes","FormOutcomeEvent","_outcome","outcome","ContentLinkModel","hasPreviewStatus","previewStatus","isTypeImage","simpleType","isTypePdf","isTypeDoc","isThumbnailReady","thumbnailStatus","isThumbnailSupported","contentAvailable","createdBy","relatedContent","EcmModelService","createEcmTypeForActivitiForm","formName","searchActivitiEcmModel","saveFomType","typeForm","createActivitiEcmModel","getEcmModels","ecmModels","MODEL_NAME","createEcmModel","MODEL_NAMESPACE","activeEcmModel","modelActive","createEcmTypeWithProperties","typeCreated","searchEcmType","ecmType","createEcmType","TYPE_MODEL","addPropertyToAType","propertyAdded","typeName","modelName","getEcmType","customTypes","prefixedName","customModelApi","activateCustomModel","toJson","nameSpace","createCustomModel","getAllCustomModel","getAllCustomType","parentType","cleanNameType","createCustomType","formFields","dataType","multiValued","mandatory","mandatoryEnforced","addPropertyToType","cleanName","FormService","modelsApi","editorApi","processApi","processInstanceVariablesApi","usersWorkflowApi","parseForm","createFormFromANode","createForm","ecmModelService","customType","formDefinitionModel","saveForm","formData","dataModel","modelType","stencilSet","createModel","formId","formModel","searchFrom","getModels","forms","getForms","toJsonArray","getProcessDefinitions","getProcessVariablesById","processInstanceId","getProcessInstanceVariables","getTasks","listTasks","getTask","saveTaskForm","saveFormRepresentation","completeTaskForm","completeFormRepresentation","getTaskForm","getFormDefinitionById","getForm","getFormDefinitionByName","filterText","getFormId","getStartFormInstance","processId","getProcessInstanceStartForm","getProcessInstance","getStartFormDefinition","getProcessDefinitionStartForm","getRestFieldValues","getRestFieldValuesByProcessId","getRestFieldValuesColumnByProcessId","getRestTableFieldValues","getRestFieldValuesColumn","getUserProfileImageApi","userApi","getUserProfilePictureUrl","getWorkflowUsers","userImage","combineAll","defaultIfEmpty","getWorkflowGroups","getGroups","errMsg","UNKNOWN_ERROR_MESSAGE","statusText","GENERIC_ERROR_MESSAGE","formLoaded","formDataRefreshed","formEvents","taskCompleted","taskCompletedError","taskSaved","taskSavedError","formContentClicked","validateDynamicTableRow","executeOutcome","baseHost","(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)","WidgetComponent","hasField","isRequired","isInvalidFieldRequired","fieldChanged","checkVisibility","onFieldChanged","getHyperlinkUrl","DEFAULT_HYPERLINK_URL","DEFAULT_HYPERLINK_SCHEME","getHyperlinkText","ContainerWidgetComponentModel","isGroup","isCollapsible","allowCollapse","isCollapsedByDefault","collapseByDefault","isExpanded","ContainerWidgetComponent","onExpanderClicked","rowContainsElement","rowIndex","getColumnWith","TabsWidgetComponent","ngAfterContentChecked","filterVisibleTabs","visibleTabs","tabChanged","formTabChanged","UnknownWidgetComponent","AmountWidgetComponent","DEFAULT_CURRENCY","CheckboxWidgetComponent","DateWidgetComponent","minDate","maxDate","displayDate","ɵ0$1","DisplayTextWidgetComponentComponent","DocumentWidgetComponent","fileId","hasFile","DropdownWidgetComponent","getValuesByTaskId","getValuesByProcessDefinitionId","formFieldOption","getOptionValue","fieldValue","WidgetVisibilityService","refreshVisibility","tabModel","refreshEntityVisibility","evaluateVisibility","visibilityObj","isLeftFieldPresent","isFieldVisible","getLeftValue","getRightValue","actualResult","evaluateCondition","isValidOperator","isValidCondition","evaluateLogicalOperation","getVariableValue","processVarList","getFormValue","variableValue","isInvalidValue","getFieldValue","searchValueInForm","valueList","dropDownFilterByName","valueFound","formField","isSearchedField","getObjectValue","getValueFromOption","fieldToFind","processVariableValue","variableDefaultValue","getFormVariableDefaultValue","identifier","getFormVariables","formVar","logicOp","cleanProcessVariable","getTaskProcessVariable","taskFormsApi","getTaskFormVariables","jsonRes","condition","ValidateDynamicTableRowEvent","summary","DateCellValidator","DynamicRowValidationSummary","NumberCellValidator","RequiredCellValidator","DynamicTableModel","_selectedRow","definitions","columnDefinitions","flushValue","moveRow","offset","oldIndex","newIndex","arr","deleteRow","selectedRow","addRow","validateRow","_d","_e","_validators","_f","getCellValue","rowValue","getDisplayText","columnName","amountCurrency","visibleColumns","DynamicTableWidgetComponent","visibilityService","forceFocusOnAddButton","cd","buttonAddRow","isDynamicTableReady","focus","editMode","onRowClicked","onKeyPressed","isEnterOrSpacePressed","selectArrayCode","hasSelection","moveSelectionUp","moveSelectionDown","deleteSelection","addNewRow","editRow","isNew","editSelection","copyRow","cellValue","onSaveChanges","copyObject","ERROR_MODEL_NOT_FOUND","onCancelChanges","BooleanEditorComponent","DateEditorComponent","table","ɵ0$2","ɵ1$1","DateTimeEditorComponent","DATE_TIME_FORMAT","ɵ0$3","DropdownEditorComponent","dynamicTableColumnOption","RowEditorComponent","TextEditorComponent","ErrorWidgetComponent","_subscriptAnimationState","translateParameters","FunctionalGroupWidgetComponent","restrictWithGroup","groupModel","onKeyUp","minTermLength","oldValue","ESCAPE","onItemClick","onItemSelect","HyperlinkWidgetComponent","linkUrl","linkText","MultilineTextWidgetComponentComponent","NumberWidgetComponent","decimalNumberPipe","PeopleProcessService","searchWord","excludeTaskId","getWorkflowUserApi","getUserImage","involveUserWithTask","idToInvolve","involveUserToTaskApi","removeInvolvedUser","idToRemove","removeInvolvedUserFromTaskApi","alfrescoJsApi","taskActionsApi","involveUser","PeopleWidgetComponent","searchTerm","setValue","checkUserAndValidateForm","isValidUser","selectedUser","peopleSelected","peopleProcessService","searchTerms$","users$","RadioButtonsWidgetComponent","getOptionsByTaskId","getOptionsByProcessDefinitionId","onOptionClick","optionSelected","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","InputMaskDirective","multi","onTextInput","inputMask","mask","maskValue","selectionStart","isReversed","_onChange","writeValue","registerOnChange","fn","registerOnTouched","_onTouched","actualValue","startCaret","maskToApply","isMaskReversed","byPassKeys","getMasked","calculatedCaret","calculateCaretPosition","setCaretPosition","caretPosition","moveStart","moveEnd","newValueLength","oldValueLength","skipMaskChars","lastMaskChar","lastUntranslatedMaskChar","check","buf","maskIndex","maskLen","valueIndex","valueLength","addMethod","resetPos","isToCheck","maskDigit","charAt","valDigit","translationMask","recursive","optional","invalidCharacters","digit","lastMaskCharDigit","0","9","#","A","S","TextWidgetComponent","TypeaheadWidgetComponent","toSelect","isValidOptionName","optionName","isValueDefined","ProcessContentService","createTemporaryRawRelatedContent","contentId","getContent","getFileRawContent","getRawContent","getContentPreview","getFileRawContentUrl","getRawContentUrl","getContentThumbnail","getTaskRelatedContent","getRelatedContentForTask","getProcessRelatedContent","getRelatedContentForProcessInstance","deleteRelatedContent","deleteContent","createProcessRelatedContent","createRelatedContentOnProcessInstance","createTaskRelatedContent","createRelatedContentOnTask","UploadWidgetComponent","getMultipleFileParam","removeFile","removeElementFromList","onFileChanged","filesSaved","uploadRawContent","processContentService","contentBlob","multipleOption","resetFormValueWithNoFiles","getIcon","fileClicked","contentLinkModel","fetch","ɵ1$2","DateTimeWidgetComponent","utcOffset","ɵ0$4","WIDGET_DIRECTIVES","MASK_DIRECTIVE","FormBaseComponent","getParsedFormDefinition","hasForm","isTitleEnabled","titleEnabled","showTitle","getColorForOutcome","outcomeName","COMPLETE_OUTCOME_NAME","COMPLETE_BUTTON_COLOR","isOutcomeButtonEnabled","disableSaveButton","disableCompleteButton","disableStartProcessButton","isOutcomeButtonVisible","isFormReadOnly","showCompleteButton","showSaveButton","onOutcomeClicked","onExecuteOutcome","SAVE_OUTCOME_ID","COMPLETE_OUTCOME_ID","START_PROCESS_OUTCOME_ID","CUSTOM_OUTCOME_ID","onTaskSaved","storeFormAsMetadata","showRefreshButton","showValidationIcon","FormListComponent","ContentWidgetComponent","loadContent","contentLoaded","loadThumbnailUrl","observable","thumbnailUrl","thumbnailLoaded","openViewer","contentClick","showDocumentContent","FormRendererComponent","showDebugButton","ActivitiContentService","getAlfrescoNodes","accountId","folderId","accountShortId","getContentInFolder","getAlfrescoRepositories","includeAccount","includeAccounts","getRepositories","linkAlfrescoNode","siteId","createTemporaryRelatedContent","sourceId","applyAlfrescoNode","currentSideId","getSiteNameFromNodePath","siteName","foundNode","pathNode","nodeType","FormRenderingService","string","integer","multi-line-text","boolean","dropdown","amount","radio-buttons","hyperlink","readonly-text","readonly","typeahead","people","functional-group","dynamic-table","NodeMetadata","NodeService","getNodeMetadata","cleanMetadataFromSemicolon","createNodeMetadata","createNode","relativePath","addNode","FormErrorEvent","StartFormCustomButtonDirective","FormFieldComponent","w","adf","originalField","getField","customTemplate","hasController","getComponentFactorySync","componentRef","componentType","formRenderingService","componentFactoryResolver","wrappedField","components","componentInfo","createComponentFactorySync","compiler","componentClass","cmpClass","RuntimeComponent","decoratedCmp","RuntimeComponentModule","compileModuleAndAllComponentsSync","componentFactories","focusToggle","Compiler","read","FormBaseModule","SidenavLayoutContentDirective","SidenavLayoutHeaderDirective","SidenavLayoutNavigationDirective","SidenavLayoutComponent","initialMenuState","menuOpenStateSubject","menuOpenState$","stepOver","STEP_OVER","isMenuMinimized","mediaQueryList","mediaMatcher","matchMedia","addListener","onMediaQueryChange","dir","templateContext","toggleMenu","removeListener","matches","expanded","_isMenuMinimized","menuState","headerDirective","emptyTemplate","navigationDirective","contentDirective","MediaMatcher","hideSidenav","sidenavAnimation","contentAnimation","margin-left","margin-right","LayoutContainerComponent","SIDENAV_STATES","MOBILE","sidenavMax","EXPANDED","COMPACT","sidenavMin","CONTENT_STATES","isMobileScreenSize","sidenavAnimationState","contentAnimationState","toggledContentAnimation","sidenav","toggledSidenavAnimation","getContentAnimationState","MatSidenav","SidebarActionMenuComponent","SidebarMenuDirective","SidebarMenuTitleIconDirective","SidebarMenuExpandIconDirective","HeaderLayoutComponent","logo","showSidenavToggle","LayoutModule","CommentListComponent","selectComment","comment","selectedComment","clickRow","getUserShortName","shortName","isPictureDefined","isAContentUsers","CommentModel","UserProcessModel","CommentProcessService","addTaskComment","getTaskComments","comments","getProcessInstanceComments","commentsApi","addProcessInstanceComment","CommentContentService","addNodeComment","addComment","createdAt","getNodeComments","getComments","CommentsComponent","resetComments","isATask","commentProcessService","comment1","comment2","date1","date2","currentComment","commentObserver","isANode","commentContentService","beingAdded","sanitize","unshift","comment$","CommentsModule","ButtonsMenuComponent","buttons","isMenuEmpty","isMobile","userAgent","ButtonsMenuModule","SortingPickerComponent","onOptionChanged","valueChange","toggleSortDirection","ascending","sortingChange","SortingPickerModule","ErrorContentComponent","checkErrorExists","UNKNOWN_ERROR","getTranslations","hasSecondButton","onSecondButton","secondaryButtonUrl","onReturnButton","returnButtonUrl","EmptyContentComponent","subtitle","TemplateModule","AuthGuardBase","canActivate","checkLogin","canActivateChild","redirectToUrl","authenticationService","urlToRedirect","getLoginRoute","isOAuthWithoutSilentLogin","AuthGuard","ticketChange","ticketChangeRedirect","reload","ticketChangeBind","activeRoute","AuthGuardEcm","AuthGuardBpm","AuthGuardSsoRoleService","hasRealmRole","hasClientRole","rolesToCheck","hasRealmRoles","clientRoleName","hasRealmRolesForClientRole","getRealmRoles","client","currentRole","AppsProcessService","getDeployedApplications","appsApi","getAppDefinitions","getDeployedApplicationsByName","app","getApplicationDetailsById","appId","PageTitleService","setTitle","originalTitle","translatedTitle","updateTitle","onLanguageChanged","titleService","Title","onLangChange","RenditionsService","getAvailableRenditionForNode","availableRenditions","renditionsAvailable","existingRendition","rend","generateRenditionForNode","empty","isRenditionAvailable","encoding","isAvailable","isConversionPossible","getRenditionsListByNodeId","convert","pollingInterval","concatMap","pollRendition","intervalSize","attempts","interval","takeWhile","ComponentTranslationModel","TranslateLoaderService","registered","fetchLanguageFile","component","fallbackUrl","translationUrl","suffix","retry","langId","getComponentToFetch","observableBatch","queue","isComponentInQueue","hasFailures","fullTranslation","UploadService","isUploading","activeTask","getQueue","addToQueue","allowedFiles","currentFile","filterElement","queueChanged","isAllowed","excludedFileList","matchingOptions","Minimatch","uploadFilesInTheQueue","emitter","onUploadStarting","beginUpload","cache","next_1","cancelUpload","abort","getAction","performAction","clearQueue","getUploadPromise","renditions","overwrite","autoRename","updateNodeContent","uploadFile","parentId","onUploadProgress","onUploadAborted","onUploadError","onUploadComplete","fileUpload","fileUploadStarting","event_2","fileUploadProgress","event_3","fileUploadError","event_4","fileUploadComplete","event_5","fileUploadAborted","onUploadCancelled","event_6","fileUploadCancelled","onUploadDeleted","event_7","fileUploadDeleted","fileDeleted","DeletedNodesApiService","defaultOptions","preferences","queryOptions","FavoritesApiService","remapEntry","cm:title","cm:description","remapFavoritesData","remapFavoriteEntries","getFavorites","personId","where","NodesApiService","api","getEntryFromEntity","entity","getNodeChildren","parentNodeId","nodeBody","createFolder","updateNode","PeopleContentService","getCurrentPerson","SearchConfigurationService","generateQueryBody","maxResults","paging","filterQueries","SearchService","getNodeQueryResults","term","queriesApi","findNodes","nodePaging","dataLoaded","searchQuery","searchConfigurationService","searchByQueryBody","queryBody","SharedLinksApiService","getSharedLinks","findSharedLinks","createSharedLinks","addSharedLink","deleteSharedLink","SitesService","getSites","getSite","deleteSite","permanentFlag","getSiteContent","relations","getSiteMembers","getEcmCurrentLoggedUserName","LoginDialogService","openLogin","openLoginDialog","currentPanelClass","chosenWidth","closeAll","ExternalAlfrescoApiService","domainPrefix","createPrefixFromHost","LockService","hasLockConfigured","isReadOnlyLock","isLockExpired","isLockOwnerAllowed","getLockExpiryTime","expiryLockTime","DemoForm","getEasyForm","easyForm","getFormDefinition","getSimpleFormDefinition","simpleFormDefinition","getFormCloudDefinition","cloudFormDefinition","endpoint","requestHeaders","customFieldsValueInfo","globalDateFormat","2","fileSource","serviceId","metaDataColumnDefinitions","folderSource","metaDataAllowed","amountEnableFractions","inputMaskReversed","inputMaskPlaceholder","property1","property2","CoreAutomationService","setup","adfProxy","setConfigField","setStorageItem","setUserPreference","setFormInEditor","setCloudFormInEditor","clearStorage","apiReset","DialogModule","IconComponent","_isCustom","IconModule","NotificationHistoryComponent","isEmptyNotification","notifications","markAsRead","NotificationHistoryModule","EcmCompanyModel","RedirectionModel","PaginationModel","RequestPaginationModel","DecimalNumberModel","AlfrescoApiMock","changeConfig","AppConfigServiceMock","AuthenticationMock","setRedirectUrl","getRedirectUrl","fakeBpmUserNoImage","fakeUser1","fakeTasksComment","fakeProcessComment","CookieServiceMock","EventMock","keyDown","createEvent","initEvent","keyUp","resizeMobileView","Event","fakeSearch","mimetype","createdByUser","modifiedByUser","searchMockApi","TranslationMock","AlfrescoApiServiceMock","initialize","formTest","resetTestingModule","TestBed","startupServiceFactory","directionalityConfigFactory","directionalityConfigService","RendererFactory2","Directionality","DirectionalityConfigService","rendererFactory","directionality","createRenderer","CoreModule","forRoot","ngModule","TranslateStore","TranslateLoader","APP_INITIALIZER","useFactory","deps","SidenavLayoutModule","defaultAppId","modelId","theme","deploymentId","organization","address1","address2","address3","postcode","fax","mimeTypeName","errorKey","briefSummary","stackTrace","descriptionURL","processDefinitionName","processDefinitionKey","taskDefinitionKey","test_1","test_2","test_3","test_4","test_5","moduleDef","beforeAll","sessionStorage","configureTestingModule","compileComponents","afterAll"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectUtils {\n    /**\n     * Gets a value from an object by composed key\n     * ObjectUtils.getValue({ item: { nodeType: 'cm:folder' }}, 'item.nodeType') ==> 'cm:folder'\n     * @param target\n     * @param key\n     */\n    static getValue(target: any, key: string): any {\n\n        if (!target) {\n            return undefined;\n        }\n\n        const keys = key.split('.');\n        key = '';\n\n        do {\n            key += keys.shift();\n            const value = target[key];\n            if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n                target = value;\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n\n        return target;\n    }\n\n    static merge(...objects): any {\n        const result = {};\n\n        objects.forEach((source) => {\n            Object.keys(source).forEach((prop) => {\n                if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = result[prop].concat(source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = ObjectUtils.merge(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            });\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { Observable, Subject } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\n/* spellchecker: disable */\nexport enum AppConfigValues {\n    APP_CONFIG_LANGUAGES_KEY = 'languages',\n    PROVIDERS = 'providers',\n    OAUTHCONFIG = 'oauth2',\n    ECMHOST = 'ecmHost',\n    BASESHAREURL = 'baseShareUrl',\n    BPMHOST = 'bpmHost',\n    IDENTITY_HOST = 'identityHost',\n    AUTHTYPE = 'authType',\n    CONTEXTROOTECM = 'contextRootEcm',\n    CONTEXTROOTBPM = 'contextRootBpm',\n    ALFRESCO_REPOSITORY_NAME = 'alfrescoRepositoryName',\n    LOG_LEVEL = 'logLevel',\n    LOGIN_ROUTE = 'loginRoute',\n    DISABLECSRF = 'disableCSRF',\n    AUTH_WITH_CREDENTIALS = 'auth.withCredentials',\n    APPLICATION = 'application',\n    STORAGE_PREFIX = 'application.storagePrefix',\n    NOTIFY_DURATION = 'notificationDefaultDuration'\n}\n\nexport enum Status {\n    INIT = 'init',\n    LOADING = 'loading',\n    LOADED = 'loaded'\n}\n\n/* spellchecker: enable */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent',\n        alfrescoRepositoryName: 'alfresco-1'\n    };\n\n    status: Status = Status.INIT;\n    protected onLoadSubject: Subject<any>;\n    onLoad: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.onLoadSubject = new Subject();\n        this.onLoad = this.onLoadSubject.asObservable();\n    }\n\n    /**\n     * Requests notification of a property value when it is loaded.\n     * @param property The desired property value\n     * @returns Property value, when loaded\n     */\n    select(property: string): Observable<any> {\n        return this.onLoadSubject\n            .pipe(\n                map((config) => config[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets the value of a named property.\n     * @param key Name of the property\n     * @param defaultValue Value to return if the key is not found\n     * @returns Value of the property\n     */\n    get<T>(key: string, defaultValue?: T): T {\n        let result: any = ObjectUtils.getValue(this.config, key);\n        if (typeof result === 'string') {\n            const keywords = new Map<string, string>();\n            keywords.set('hostname', this.getLocationHostname());\n            keywords.set(':port', this.getLocationPort(':'));\n            keywords.set('port', this.getLocationPort());\n            keywords.set('protocol', this.getLocationProtocol());\n            result = this.formatString(result, keywords);\n        }\n        if (result === undefined) {\n            return defaultValue;\n        }\n        return <T> result;\n    }\n\n    /**\n     * Gets the location.protocol value.\n     * @returns The location.protocol string\n     */\n    getLocationProtocol(): string {\n        return location.protocol;\n    }\n\n    /**\n     * Gets the location.hostname property.\n     * @returns Value of the property\n     */\n    getLocationHostname(): string {\n        return location.hostname;\n    }\n\n    /**\n     * Gets the location.port property.\n     * @param prefix Text added before port value\n     * @returns Port with prefix\n     */\n    getLocationPort(prefix: string = ''): string {\n        return location.port ? prefix + location.port : '';\n    }\n\n    /**\n     * Loads the config file.\n     * @returns Notification when loading is complete\n     */\n    load(): Promise<any> {\n        return new Promise(async (resolve) => {\n            const configUrl = `app.config.json?v=${Date.now()}`;\n\n            if (this.status === Status.INIT) {\n                this.status = Status.LOADING;\n                await this.http.get(configUrl).subscribe(\n                    (data: any) => {\n                        this.status = Status.LOADED;\n                        this.config = Object.assign({}, this.config, data || {});\n                        this.onLoadSubject.next(this.config);\n                        resolve(this.config);\n                    },\n                    () => {\n                        resolve(this.config);\n                    }\n                );\n            } else if (this.status === Status.LOADED) {\n                resolve(this.config);\n            } else if (this.status === Status.LOADING) {\n                this.onLoad.subscribe(() => {\n                    resolve(this.config);\n                });\n            }\n        });\n    }\n\n    private formatString(str: string, keywords: Map<string, string>): string {\n        let result = str;\n\n        keywords.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageService {\n\n    private memoryStore: { [key: string]: any } = {};\n    private useLocalStorage: boolean = false;\n    private _prefix: string = '';\n\n    get prefix() {\n        return this._prefix;\n    }\n\n    set prefix(prefix: string) {\n        this._prefix = prefix ? prefix + '_' : '';\n    }\n\n    constructor() {\n        this.useLocalStorage = this.storageAvailable('localStorage');\n    }\n\n    /**\n     * Gets an item.\n     * @param key Key to identify the item\n     * @returns The item (if any) retrieved by the key\n     */\n    getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.prefix + key);\n        } else {\n            return this.memoryStore.hasOwnProperty(this.prefix + key) ? this.memoryStore[this.prefix + key] : null;\n        }\n    }\n\n    /**\n     * Stores an item\n     * @param key Key to identify the item\n     * @param data Data to store\n     */\n    setItem(key: string, data: string) {\n        if (this.useLocalStorage) {\n            localStorage.setItem(this.prefix + key, data);\n        } else {\n            this.memoryStore[this.prefix + key] = data.toString();\n        }\n    }\n\n    /** Removes all currently stored items. */\n    clear() {\n        if (this.useLocalStorage) {\n            localStorage.clear();\n        } else {\n            this.memoryStore = {};\n        }\n    }\n\n    /**\n     * Removes a single item.\n     * @param key Key to identify the item\n     */\n    removeItem(key: string) {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(this.prefix + key);\n        } else {\n            delete this.memoryStore[this.prefix + key];\n        }\n    }\n\n    /**\n     * Is any item currently stored under `key`?\n     * @param key Key identifying item to check\n     * @returns True if key retrieves an item, false otherwise\n     */\n    hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.prefix + key) ? true : false;\n        } else {\n            return this.memoryStore.hasOwnProperty(key);\n        }\n    }\n\n    private storageAvailable(type: string): boolean {\n        try {\n            const storage = window[type];\n            const key = '__storage_test__';\n            storage.setItem(key, key);\n            storage.removeItem(key, key);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ContentApi,\n    Core,\n    Activiti,\n    SearchApi,\n    Node\n} from '@alfresco/js-api';\nimport { AlfrescoApiCompatibility, AlfrescoApiConfig } from '@alfresco/js-api';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Subject, Observable } from 'rxjs';\nimport { OauthConfigModel } from '../models/oauth-config.model';\nimport { StorageService } from './storage.service';\n\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlfrescoApiService {\n    /**\n     * Publish/subscribe to events related to node updates.\n     */\n    nodeUpdated = new Subject<Node>();\n\n    protected alfrescoApiInitializedSubject: Subject<any>;\n    alfrescoApiInitialized: Observable<any>;\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    lastConfig: AlfrescoApiConfig;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get taskApi(): Activiti.TaskApi {\n        return this.getInstance().activiti.taskApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    get renditionsApi(): Core.RenditionsApi {\n        return this.getInstance().core.renditionsApi;\n    }\n\n    get sharedLinksApi(): Core.SharedlinksApi {\n        return this.getInstance().core.sharedlinksApi;\n    }\n\n    get sitesApi(): Core.SitesApi {\n        return this.getInstance().core.sitesApi;\n    }\n\n    get favoritesApi(): Core.FavoritesApi {\n        return this.getInstance().core.favoritesApi;\n    }\n\n    get peopleApi(): Core.PeopleApi {\n        return this.getInstance().core.peopleApi;\n    }\n\n    get searchApi(): SearchApi {\n        return this.getInstance().search.searchApi;\n    }\n\n    get versionsApi(): Core.VersionsApi {\n        return this.getInstance().core.versionsApi;\n    }\n\n    get classesApi(): Core.ClassesApi {\n        return this.getInstance().core.classesApi;\n    }\n\n    get groupsApi(): Core.GroupsApi {\n        return this.getInstance().core.groupsApi;\n    }\n\n    constructor(\n        protected appConfig: AppConfigService,\n        protected storageService: StorageService) {\n        this.alfrescoApiInitializedSubject = new Subject();\n        this.alfrescoApiInitialized = this.alfrescoApiInitializedSubject.asObservable();\n    }\n\n    async load() {\n        await this.appConfig.load().then(() => {\n            this.storageService.prefix = this.appConfig.get<string>(AppConfigValues.STORAGE_PREFIX, '');\n            this.initAlfrescoApi();\n            this.alfrescoApiInitializedSubject.next();\n        });\n    }\n\n    async reset() {\n        this.initAlfrescoApi();\n    }\n\n    protected initAlfrescoApi() {\n        const oauth: OauthConfigModel = Object.assign({}, this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null));\n        if (oauth) {\n            oauth.redirectUri = window.location.origin + (oauth.redirectUri || '/');\n            oauth.redirectUriLogout = window.location.origin + (oauth.redirectUriLogout || '/');\n        }\n\n        const config = new AlfrescoApiConfig({\n            provider: this.appConfig.get<string>(AppConfigValues.PROVIDERS),\n            hostEcm: this.appConfig.get<string>(AppConfigValues.ECMHOST),\n            hostBpm: this.appConfig.get<string>(AppConfigValues.BPMHOST),\n            authType: this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC'),\n            contextRootBpm: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTBPM),\n            contextRoot: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTECM),\n            disableCsrf: this.appConfig.get<boolean>(AppConfigValues.DISABLECSRF),\n            withCredentials: this.appConfig.get<boolean>(AppConfigValues.AUTH_WITH_CREDENTIALS, false),\n            oauth2: oauth\n        });\n\n        if (this.alfrescoApi && this.isDifferentConfig(this.lastConfig, config)) {\n            this.lastConfig = config;\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.lastConfig = config;\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n\n    }\n\n    isDifferentConfig(lastConfig: AlfrescoApiConfig, newConfig: AlfrescoApiConfig) {\n        return JSON.stringify(lastConfig) !== JSON.stringify(newConfig);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CookieService {\n\n    /**\n     * Checks if cookies are enabled.\n     * @returns True if enabled, false otherwise\n     */\n    isEnabled(): boolean {\n        // for certain scenarios Chrome may say 'true' but have cookies still disabled\n        if (navigator.cookieEnabled === false) {\n            return false;\n        }\n\n        document.cookie = 'test-cookie';\n        return document.cookie.indexOf('test-cookie') >= 0;\n    }\n\n    /**\n     * Retrieves a cookie by its key.\n     * @param key Key to identify the cookie\n     * @returns The cookie data or null if it is not found\n     */\n    getItem(key: string): string | null {\n        const regexp = new RegExp('(?:' + key + '|;\\s*' + key + ')=(.*?)(?:;|$)', 'g');\n        const result = regexp.exec(document.cookie);\n        return (result === null) ? null : result[1];\n    }\n\n    /**\n     * Sets a cookie.\n     * @param key Key to identify the cookie\n     * @param data Data value to set for the cookie\n     * @param expiration Expiration date of the data\n     * @param path \"Pathname\" to store the cookie\n     */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        document.cookie = `${key}=${data}` +\n            (expiration ? ';expires=' + expiration.toUTCString() : '') +\n            (path ? `;path=${path}` : ';path=/');\n    }\n\n    /** Placeholder for testing purposes - do not use. */\n    clear() {\n        /* placeholder for testing purposes */\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LogLevelsEnum extends Number {\n    static TRACE: number = 5;\n    static DEBUG: number = 4;\n    static INFO: number = 3;\n    static WARN: number = 2;\n    static ERROR: number = 1;\n    static SILENT: number = 0;\n}\n\nexport let logLevels: any[] = [\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-console  */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { logLevels, LogLevelsEnum } from '../models/log-levels.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n\n    get currentLogLevel() {\n        const configLevel: string = this.appConfig.get<string>(AppConfigValues.LOG_LEVEL);\n\n        if (configLevel) {\n            return this.getLogLevel(configLevel);\n        }\n\n        return LogLevelsEnum.TRACE;\n    }\n\n    onMessage: Subject<any>;\n\n    constructor(private appConfig: AppConfigService) {\n        this.onMessage = new Subject();\n    }\n\n    /**\n     * Logs a message at the \"ERROR\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\n\n            this.messageBus(message, 'ERROR');\n\n            console.error(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"DEBUG\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\n\n            this.messageBus(message, 'DEBUG');\n\n            console.debug(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"INFO\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.INFO) {\n\n            this.messageBus(message, 'INFO');\n\n            console.info(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at any level from \"TRACE\" upwards.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'LOG');\n\n            console.log(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"TRACE\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'TRACE');\n\n            console.trace(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"WARN\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.WARN) {\n\n            this.messageBus(message, 'WARN');\n\n            console.warn(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message if a boolean test fails.\n     * @param test Test value (typically a boolean expression)\n     * @param message Message to show if test is false\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    assert(test?: boolean, message?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n\n            this.messageBus(message, 'ASSERT');\n\n            console.assert(test, message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Starts an indented group of log messages.\n     * @param groupTitle Title shown at the start of the group\n     * @param optionalParams Interpolation values for the title in \"printf\" format\n     */\n    group(groupTitle?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.group(groupTitle, ...optionalParams);\n        }\n    }\n\n    /**\n     * Ends a indented group of log messages.\n     */\n    groupEnd() {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.groupEnd();\n        }\n    }\n\n    /**\n     * Converts a log level name string into its numeric equivalent.\n     * @param level Level name\n     * @returns Numeric log level\n     */\n    getLogLevel(level: string): LogLevelsEnum {\n        const referencedLevel = logLevels.find((currentLevel: any) => {\n            return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\n        });\n\n        return referencedLevel ? referencedLevel.level : 5;\n    }\n\n    /**\n     * Triggers notification callback for log messages.\n     * @param text Message text\n     * @param logLevel Log level for the message\n     */\n    messageBus(text: string, logLevel: string) {\n        this.onMessage.next({ text: text, type: logLevel });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtHelperService {\n\n    static USER_NAME = 'name';\n    static FAMILY_NAME = 'family_name';\n    static GIVEN_NAME = 'given_name';\n    static USER_EMAIL = 'email';\n    static USER_ACCESS_TOKEN = 'access_token';\n    static USER_PREFERRED_USERNAME = 'preferred_username';\n\n    constructor() {\n    }\n\n    /**\n     * Decodes a JSON web token into a JS object.\n     * @param token Token in encoded form\n     * @returns Decoded token data object\n     */\n    decodeToken(token): Object {\n        const parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    private urlBase64Decode(token): string {\n        let output = token.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += '==';\n                break;\n            }\n            case 3: {\n                output += '=';\n                break;\n            }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return decodeURIComponent(escape(window.atob(output)));\n    }\n\n    /**\n     * Gets a named value from the user access token.\n     * @param key Key name of the field to retrieve\n     * @returns Value from the token\n     */\n    getValueFromLocalAccessToken<T>(key: string): T {\n        return this.getValueFromToken(this.getAccessToken(), key);\n    }\n\n    /**\n     * Gets access token\n     * @returns access token\n     */\n    getAccessToken(): string {\n        return localStorage.getItem(JwtHelperService.USER_ACCESS_TOKEN);\n    }\n\n    /**\n     * Gets a named value from the user access token.\n     * @param key accessToken\n     * @param key Key name of the field to retrieve\n     * @returns Value from the token\n     */\n    getValueFromToken<T>(accessToken: string, key: string): T {\n        let value;\n        if (accessToken) {\n            const tokenPayload = this.decodeToken(accessToken);\n            value = tokenPayload[key];\n        }\n        return <T> value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, throwError, Observer } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { CookieService } from './cookie.service';\nimport { LogService } from './log.service';\nimport { RedirectionModel } from '../models/redirection.model';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserRepresentation } from '@alfresco/js-api';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from './jwt-helper.service';\n\nconst REMEMBER_ME_COOKIE_KEY = 'ALFRESCO_REMEMBER_ME';\nconst REMEMBER_ME_UNTIL = 1000 * 60 * 60 * 24 * 30;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n    private redirectUrl: RedirectionModel = null;\n\n    private bearerExcludedUrls: string[] = ['auth/realms', 'resources/', 'assets/'];\n\n    onLogin: Subject<any> = new Subject<any>();\n    onLogout: Subject<any> = new Subject<any>();\n\n    constructor(\n        private appConfig: AppConfigService,\n        private alfrescoApi: AlfrescoApiService,\n        private cookie: CookieService,\n        private logService: LogService) {\n    }\n\n    /**\n     * Checks if the user logged in.\n     * @returns True if logged in, false otherwise\n     */\n    isLoggedIn(): boolean {\n        if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n            return false;\n        }\n        return this.alfrescoApi.getInstance().isLoggedIn();\n    }\n\n    /**\n     * Does the provider support OAuth?\n     * @returns True if supported, false otherwise\n     */\n    isOauth(): boolean {\n        return this.alfrescoApi.getInstance().isOauthConfiguration();\n    }\n\n    /**\n     * Does the provider support ECM?\n     * @returns True if supported, false otherwise\n     */\n    isECMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmConfiguration();\n    }\n\n    /**\n     * Does the provider support BPM?\n     * @returns True if supported, false otherwise\n     */\n    isBPMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isBpmConfiguration();\n    }\n\n    /**\n     * Does the provider support both ECM and BPM?\n     * @returns True if both are supported, false otherwise\n     */\n    isALLProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmBpmConfiguration();\n    }\n\n    /**\n     * Logs the user in.\n     * @param username Username for the login\n     * @param password Password for the login\n     * @param rememberMe Stores the user's login details if true\n     * @returns Object with auth type (\"ECM\", \"BPM\" or \"ALL\") and auth ticket\n     */\n    login(username: string, password: string, rememberMe: boolean = false): Observable<{ type: string, ticket: any }> {\n        return from(this.alfrescoApi.getInstance().login(username, password))\n            .pipe(\n                map((response: any) => {\n                    this.saveRememberMeCookie(rememberMe);\n                    this.onLogin.next(response);\n                    return {\n                        type: this.appConfig.get(AppConfigValues.PROVIDERS),\n                        ticket: response\n                    };\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Logs the user in with SSO\n     */\n    ssoImplicitLogin() {\n        this.alfrescoApi.getInstance().implicitLogin();\n    }\n\n    /**\n     * Saves the \"remember me\" cookie as either a long-life cookie or a session cookie.\n     * @param rememberMe Enables a long-life cookie\n     */\n    private saveRememberMeCookie(rememberMe: boolean): void {\n        let expiration = null;\n\n        if (rememberMe) {\n            expiration = new Date();\n            const time = expiration.getTime();\n            const expireTime = time + REMEMBER_ME_UNTIL;\n            expiration.setTime(expireTime);\n        }\n        this.cookie.setItem(REMEMBER_ME_COOKIE_KEY, '1', expiration, null);\n    }\n\n    /**\n     * Checks whether the \"remember me\" cookie was set or not.\n     * @returns True if set, false otherwise\n     */\n    isRememberMeSet(): boolean {\n        return (this.cookie.getItem(REMEMBER_ME_COOKIE_KEY) === null) ? false : true;\n    }\n\n    /**\n     * Logs the user out.\n     * @returns Response event called when logout is complete\n     */\n    logout() {\n        return from(this.callApiLogout())\n            .pipe(\n                tap((response) => {\n                    this.onLogout.next(response);\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiLogout(): Promise<any> {\n        if (this.alfrescoApi.getInstance()) {\n            return this.alfrescoApi.getInstance().logout();\n        }\n    }\n\n    /**\n     * Gets the ECM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketEcm();\n    }\n\n    /**\n     * Gets the BPM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketBpm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketBpm();\n    }\n\n    /**\n     * Gets the BPM ticket from the Storage in Base 64 format.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcmBase64(): string | null {\n        const ticket = this.alfrescoApi.getInstance().getTicketEcm();\n        if (ticket) {\n            return 'Basic ' + btoa(ticket);\n        }\n        return null;\n    }\n\n    /**\n     * Checks if the user is logged in on an ECM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isEcmLoggedIn(): boolean {\n        if (this.isECMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isEcmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Checks if the user is logged in on a BPM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isBpmLoggedIn(): boolean {\n        if (this.isBPMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isBpmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Gets the ECM username.\n     * @returns The ECM username\n     */\n    getEcmUsername(): string {\n        return this.alfrescoApi.getInstance().getEcmUsername();\n    }\n\n    /**\n     * Gets the BPM username\n     * @returns The BPM username\n     */\n    getBpmUsername(): string {\n        return this.alfrescoApi.getInstance().getBpmUsername();\n    }\n\n    /** Sets the URL to redirect to after login.\n     * @param url URL to redirect to\n     */\n    setRedirect(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    /** Gets the URL to redirect to after login.\n     * @returns The redirect URL\n     */\n    getRedirect(): string {\n        const provider = <string> this.appConfig.get(AppConfigValues.PROVIDERS);\n        return this.hasValidRedirection(provider) ? this.redirectUrl.url : null;\n    }\n\n    /**\n     * Gets information about the user currently logged into APS.\n     * @returns User information\n     */\n    getBpmLoggedUser(): Observable<UserRepresentation> {\n        return from(this.alfrescoApi.getInstance().activiti.profileApi.getProfile());\n    }\n\n    private hasValidRedirection(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === provider || this.hasSelectedProviderAll(provider));\n    }\n\n    private hasSelectedProviderAll(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === 'ALL' || provider === 'ALL');\n    }\n\n    /**\n     * Prints an error message in the console browser\n     * @param error Error message\n     * @returns Object representing the error message\n     */\n    handleError(error: any): Observable<any> {\n        this.logService.error('Error when logging in', error);\n        return throwError(error || 'Server error');\n    }\n\n    /**\n     * Gets the set of URLs that the token bearer is excluded from.\n     * @returns Array of URL strings\n     */\n    getBearerExcludedUrls(): string[] {\n        return this.bearerExcludedUrls;\n    }\n\n    /**\n     * Gets the auth token.\n     * @returns Auth token string\n     */\n    getToken(): string {\n        return localStorage.getItem(JwtHelperService.USER_ACCESS_TOKEN);\n    }\n\n    /**\n     * Adds the auth token to an HTTP header using the 'bearer' scheme.\n     * @param headersArg Header that will receive the token\n     * @returns The new header with the token added\n     */\n    addTokenToHeader(headersArg?: HttpHeaders): Observable<HttpHeaders> {\n        return new Observable((observer: Observer<any>) => {\n            let headers = headersArg;\n            if (!headers) {\n                headers = new HttpHeaders();\n            }\n            try {\n                const token: string = this.getToken();\n                headers = headers.set('Authorization', 'bearer ' + token);\n                observer.next(headers);\n                observer.complete();\n            } catch (error) {\n                observer.error(error);\n            }\n        });\n    }\n\n    /**\n     * Checks if SSO is configured correctly.\n     * @returns True if configured correctly, false otherwise\n     */\n    isSSODiscoveryConfigured() {\n        return this.alfrescoApi.getInstance().storage.getItem('discovery') ? true : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class BpmProductVersionModel {\n    edition: string;\n    majorVersion: string;\n    revisionVersion: string;\n    minorVersion: string;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.edition = obj.edition || null;\n            this.majorVersion = obj.majorVersion || null;\n            this.revisionVersion = obj.revisionVersion || null;\n            this.minorVersion = obj.minorVersion || null;\n            this.type = obj.type || null;\n        }\n    }\n}\n\nexport class VersionModel {\n    major: string;\n    minor: string;\n    patch: string;\n    hotfix: string;\n    schema: number;\n    label: string;\n    display: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.major = obj.major || null;\n            this.minor = obj.minor || null;\n            this.patch = obj.patch || null;\n            this.hotfix = obj.hotfix || null;\n            this.schema = obj.schema || null;\n            this.label = obj.label || null;\n            this.display = obj.display || null;\n        }\n    }\n}\n\nexport class LicenseModel {\n    issuedAt: string;\n    expiresAt: string;\n    remainingDays: number;\n    holder: string;\n    mode: string;\n    isClusterEnabled: boolean;\n    isCryptodocEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.issuedAt = obj.issuedAt || null;\n            this.expiresAt = obj.expiresAt || null;\n            this.remainingDays = obj.remainingDays || null;\n            this.holder = obj.holder || null;\n            this.mode = obj.mode || null;\n            this.isClusterEnabled = obj.isClusterEnabled ? true : false;\n            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionStatusModel {\n    isReadOnly: boolean;\n    isAuditEnabled: boolean;\n    isQuickShareEnabled: boolean;\n    isThumbnailGenerationEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.isReadOnly = obj.isReadOnly ? true : false;\n            this.isAuditEnabled = obj.isAuditEnabled ? true : false;\n            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;\n            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionModuleModel {\n    id: string;\n    title: string;\n    description: string;\n    version: string;\n    installDate: string;\n    installState: string;\n    versionMin: string;\n    versionMax: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.title = obj.title || null;\n            this.description = obj.description || null;\n            this.version = obj.version || null;\n            this.installDate = obj.installDate || null;\n            this.installState = obj.installState || null;\n            this.versionMin = obj.versionMin || null;\n            this.versionMax = obj.versionMax || null;\n        }\n    }\n}\n\nexport class EcmProductVersionModel {\n    edition: string;\n    version: VersionModel;\n    license: LicenseModel;\n    status: VersionStatusModel;\n    modules: VersionModuleModel[] = [];\n\n    constructor(obj?: any) {\n        if (obj && obj.entry && obj.entry.repository) {\n            this.edition = obj.entry.repository.edition || null;\n            this.version = new VersionModel(obj.entry.repository.version);\n            this.license = new LicenseModel(obj.entry.repository.license);\n            this.status = new VersionStatusModel(obj.entry.repository.status);\n            if (obj.entry.repository.modules) {\n                obj.entry.repository.modules.forEach((module) => {\n                    this.modules.push(new VersionModuleModel(module));\n                });\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { from, throwError } from 'rxjs';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DiscoveryApiService {\n\n    constructor(private apiService: AlfrescoApiService) { }\n\n    /**\n     * Gets product information for Content Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getEcmProductInfo(): Observable<EcmProductVersionModel> {\n        return from(this.apiService.getInstance().discovery.discoveryApi.getRepositoryInformation())\n            .pipe(\n                map((res) => new EcmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n\n    /**\n     * Gets product information for Process Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getBpmProductInfo(): Observable<BpmProductVersionModel> {\n        return from(this.apiService.getInstance().activiti.aboutApi.getAppVersion())\n            .pipe(\n                map((res) => new BpmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileInfo {\n    entry?: any;\n    file?: File;\n    relativeFolder?: string;\n}\n\nexport class FileUtils {\n\n    static flatten(folder: any): Promise<FileInfo[]> {\n        const reader = folder.createReader();\n        const files: FileInfo[] = [];\n        return new Promise((resolve) => {\n            const iterations = [];\n            (function traverse() {\n                reader.readEntries((entries) => {\n                    if (!entries.length) {\n                        Promise.all(iterations).then(() => resolve(files));\n                    } else {\n                        iterations.push(Promise.all(entries.map((entry) => {\n                            if (entry.isFile) {\n                                return new Promise((resolveFile) => {\n                                    entry.file(function (file: File) {\n                                        files.push({\n                                            entry: entry,\n                                            file: file,\n                                            relativeFolder: entry.fullPath.replace(/\\/[^\\/]*$/, '')\n                                        });\n                                        resolveFile();\n                                    });\n                                });\n                            } else {\n                                return FileUtils.flatten(entry).then((result) => {\n                                    files.push(...result);\n                                });\n                            }\n                        })));\n                        // Try calling traverse() again for the same dir, according to spec\n                        traverse();\n                    }\n                });\n            })();\n        });\n    }\n\n    static toFileArray(fileList: FileList): File[] {\n        const result = [];\n\n        if (fileList && fileList.length > 0) {\n            for (let i = 0; i < fileList.length; i++) {\n                result.push(fileList[i]);\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDateFormats } from '@angular/material';\n\nexport const MOMENT_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD/MM/YYYY'\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM Y',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM Y'\n    }\n};\n\nconst dateNames: string[] = [];\nfor (let date = 1; date <= 31; date++) {\n    dateNames.push(String(date));\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateAdapter } from '@angular/material';\nimport { isMoment, Moment } from 'moment';\nimport moment from 'moment-es6';\n\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private localeData: any = moment.localeData();\n\n    overrideDisplayFormat: string;\n\n    getYear(date: Moment): number {\n        return date.year();\n    }\n\n    getMonth(date: Moment): number {\n        return date.month();\n    }\n\n    getDate(date: Moment): number {\n        return date.date();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return date.day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.months();\n            case 'short':\n                return this.localeData.monthsShort();\n            case 'narrow':\n                return this.localeData.monthsShort().map((month) => month[0]);\n            default :\n                return;\n        }\n    }\n\n    getDateNames(): string[] {\n        const dateNames: string[] = [];\n        for (let date = 1; date <= 31; date++) {\n            dateNames.push(String(date));\n        }\n\n        return dateNames;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.weekdays();\n            case 'short':\n                return this.localeData.weekdaysShort();\n            case 'narrow':\n                return this.localeData.weekdaysShort();\n            default :\n                return;\n        }\n    }\n\n    getYearName(date: Moment): string {\n        return String(date.year());\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek();\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return date.daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        const locale = this.locale || 'en';\n        return date.clone().locale(locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        return moment([year, month, date]);\n    }\n\n    today(): Moment {\n        const locale = this.locale || 'en';\n        return moment().locale(locale);\n    }\n\n    parse(value: any, parseFormat: any): Moment {\n        const locale = this.locale || 'en';\n\n        if (value && typeof value === 'string') {\n            let m = moment(value, parseFormat, locale, true);\n            if (!m.isValid()) {\n                // use strict parsing because Moment's parser is very forgiving, and this can lead to undesired behavior.\n                m = moment(value, this.overrideDisplayFormat, locale, true);\n            }\n            if (m.isValid()) {\n                // if user omits year, it defaults to 2001, so check for that issue.\n                if (m.year() === 2001 && value.indexOf('2001') === -1) {\n                    // if 2001 not actually in the value string, change to current year\n                    const currentYear = new Date().getFullYear();\n                    m.set('year', currentYear);\n                    // if date is in the future, set previous year\n                    if (m.isAfter(moment())) {\n                        m.set('year', currentYear - 1);\n                    }\n                }\n            }\n            return m;\n        }\n\n        return value ? moment(value).locale(locale) : null;\n    }\n\n    format(date: Moment, displayFormat: any): string {\n        date = this.clone(date);\n        displayFormat = this.overrideDisplayFormat ? this.overrideDisplayFormat : displayFormat;\n\n        if (date && date.format) {\n            return date.format(displayFormat);\n        } else {\n            return '';\n        }\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return date.clone().add(years, 'y');\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return date.clone().add(months, 'M');\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return date.clone().add(days, 'd');\n    }\n\n    getISODateString(date: Moment): string {\n        return date.toISOString();\n    }\n\n    setLocale(locale: any): void {\n        super.setLocale(locale);\n\n        this.localeData = moment.localeData(locale);\n    }\n\n    compareDate(first: Moment, second: Moment): number {\n        return first.diff(second, 'seconds', true);\n    }\n\n    sameDate(first: any | Moment, second: any | Moment): boolean {\n        if (first == null) {\n            // same if both null\n            return second == null;\n        } else if (isMoment(first)) {\n            return first.isSame(second);\n        } else {\n            const isSame = super.sameDate(first, second);\n            return isSame;\n        }\n    }\n\n    clampDate(date: Moment, min?: any | Moment, max?: any | Moment): Moment {\n        if (min && date.isBefore(min)) {\n            return min;\n        } else if (max && date.isAfter(max)) {\n            return max;\n        } else {\n            return date;\n        }\n    }\n\n    isDateInstance(date: any) {\n        let isValidDateInstance = false;\n\n        if (date) {\n            isValidDateInstance = date._isAMomentObject;\n        }\n\n        return isValidDateInstance;\n    }\n\n    isValid(date: Moment): boolean {\n        return date.isValid();\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    fromIso8601(iso8601String: string): Moment | null {\n        const locale = this.locale || 'en';\n        const d = moment(iso8601String, moment.ISO_8601).locale(locale);\n        return this.isValid(d) ? d : null;\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectUtils } from '../../utils';\nimport { DataRow } from './data-row.model';\n\n// Simple implementation of the DataRow interface.\nexport class ObjectDataRow implements DataRow {\n\n    constructor(private obj: any, public isSelected: boolean = false) {\n        if (!obj) {\n            throw new Error('Object source not found');\n        }\n\n    }\n\n    getValue(key: string): any {\n        return ObjectUtils.getValue(this.obj, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n\n    imageErrorResolver(event: Event): string {\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { DataColumn } from './data-column.model';\n\n// Simple implementation of the DataColumn interface.\nexport class ObjectDataColumn implements DataColumn {\n\n    key: string;\n    type: string; // text|image\n    format: string;\n    sortable: boolean;\n    title: string;\n    srTitle: string;\n    cssClass: string;\n    template?: TemplateRef<any>;\n    copyContent?: boolean;\n\n    constructor(input: any) {\n        this.key = input.key;\n        this.type = input.type || 'text';\n        this.format = input.format;\n        this.sortable = input.sortable;\n        this.title = input.title;\n        this.srTitle = input.srTitle;\n        this.cssClass = input.cssClass;\n        this.template = input.template;\n        this.copyContent = input.copyContent;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DataSorting {\n    constructor(\n        public key?: string,\n        public direction?: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn } from './data-column.model';\nimport { DataRow } from './data-row.model';\nimport { ObjectDataRow } from './object-datarow.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\nimport { DataSorting } from './data-sorting.model';\nimport { DataTableAdapter } from './datatable-adapter';\nimport { Subject } from 'rxjs';\n\n// Simple implementation of the DataTableAdapter interface.\nexport class ObjectDataTableAdapter implements DataTableAdapter {\n\n    private _sorting: DataSorting;\n    private _rows: DataRow[];\n    private _columns: DataColumn[];\n\n    selectedRow: DataRow;\n    rowsChanged: Subject<Array<DataRow>>;\n\n    static generateSchema(data: any[]) {\n        const schema = [];\n\n        if (data && data.length) {\n            const rowToExaminate = data[0];\n\n            if (typeof rowToExaminate === 'object') {\n                for (const key in rowToExaminate) {\n                    if (rowToExaminate.hasOwnProperty(key)) {\n                        schema.push({\n                            type: 'text',\n                            key: key,\n                            title: key,\n                            sortable: false\n                        });\n                    }\n                }\n            }\n\n        }\n        return schema;\n    }\n\n    constructor(data: any[] = [], schema: DataColumn[] = []) {\n        this._rows = [];\n        this._columns = [];\n\n        if (data && data.length > 0) {\n            this._rows = data.map((item) => {\n                return new ObjectDataRow(item);\n            });\n        }\n\n        if (schema && schema.length > 0) {\n            this._columns = schema.map((item) => {\n                return new ObjectDataColumn(item);\n            });\n\n            // Sort by first sortable or just first column\n            const sortable = this._columns.filter((column) => column.sortable);\n            if (sortable.length > 0) {\n                this.sort(sortable[0].key, 'asc');\n            }\n        }\n\n        this.rowsChanged = new Subject<Array<DataRow>>();\n    }\n\n    getRows(): Array<DataRow> {\n        return this._rows;\n    }\n\n    setRows(rows: Array<DataRow>) {\n        this._rows = rows || [];\n        this.sort();\n        this.rowsChanged.next(this._rows);\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this._columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this._columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error('Row not found');\n        }\n        if (!col) {\n            throw new Error('Column not found');\n        }\n\n        const value = row.getValue(col.key);\n\n        if (col.type === 'icon') {\n            const icon = row.getValue(col.key);\n            return icon;\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this._sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this._sorting = sorting;\n\n        if (sorting && sorting.key) {\n            this._rows.sort((a: DataRow, b: DataRow) => {\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right)\n                    : right.localeCompare(left);\n            });\n        }\n    }\n\n    sort(key?: string, direction?: string): void {\n        const sorting = this._sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { DiscoveryApiService } from '../services/discovery-api.service';\nimport { ObjectDataTableAdapter } from '../datatable/data/object-datatable-adapter';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Observable } from 'rxjs';\nimport { ExtensionRef, AppExtensionService } from '@alfresco/adf-extensions';\n\n@Component({\n    selector: 'adf-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AboutComponent implements OnInit {\n\n    data: ObjectDataTableAdapter;\n    status: ObjectDataTableAdapter;\n    license: ObjectDataTableAdapter;\n    modules: ObjectDataTableAdapter;\n    extensionColumns: string[] = ['$id', '$name', '$version', '$vendor', '$license', '$runtime', '$description'];\n    extensions$: Observable<ExtensionRef[]>;\n\n    /** Commit corresponding to the version of ADF to be used. */\n    @Input()\n    githubUrlCommitAlpha = 'https://github.com/Alfresco/alfresco-ng2-components/commits/';\n\n    /** Toggles showing/hiding of extensions block. */\n    @Input()\n    showExtensions = true;\n\n    /** Regular expression for filtering dependencies packages. */\n    @Input() regexp = '^(@alfresco)';\n\n    ecmHost = '';\n    bpmHost = '';\n\n    ecmVersion: EcmProductVersionModel = null;\n    bpmVersion: BpmProductVersionModel = null;\n\n    constructor(private http: HttpClient,\n                private appConfig: AppConfigService,\n                private authService: AuthenticationService,\n                private discovery: DiscoveryApiService,\n                appExtensions: AppExtensionService) {\n        this.extensions$ = appExtensions.references$;\n    }\n\n    ngOnInit() {\n\n        if (this.authService.isEcmLoggedIn()) {\n            this.discovery.getEcmProductInfo().subscribe((ecmVers) => {\n                this.ecmVersion = ecmVers;\n\n                this.modules = new ObjectDataTableAdapter(this.ecmVersion.modules, [\n                    { type: 'text', key: 'id', title: 'ABOUT.TABLE_HEADERS.MODULES.ID', sortable: true },\n                    { type: 'text', key: 'title', title: 'ABOUT.TABLE_HEADERS.MODULES.TITLE', sortable: true },\n                    { type: 'text', key: 'version', title: 'ABOUT.TABLE_HEADERS.MODULES.DESCRIPTION', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'installDate',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_DATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'installState',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_STATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMin',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MIN',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMax',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MAX',\n                        sortable: true\n                    }\n                ]);\n\n                this.status = new ObjectDataTableAdapter([this.ecmVersion.status], [\n                    { type: 'text', key: 'isReadOnly', title: 'ABOUT.TABLE_HEADERS.STATUS.READ_ONLY', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isAuditEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.AUDIT_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isQuickShareEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.QUICK_SHARE_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isThumbnailGenerationEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.THUMBNAIL_ENABLED',\n                        sortable: true\n                    }\n                ]);\n\n                this.license = new ObjectDataTableAdapter([this.ecmVersion.license], [\n                    { type: 'text', key: 'issuedAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.ISSUES_AT', sortable: true },\n                    { type: 'text', key: 'expiresAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.EXPIRES_AT', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'remainingDays',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.REMAINING_DAYS',\n                        sortable: true\n                    },\n                    { type: 'text', key: 'holder', title: 'ABOUT.TABLE_HEADERS.LICENSE.HOLDER', sortable: true },\n                    { type: 'text', key: 'mode', title: 'ABOUT.TABLE_HEADERS.LICENSE.MODE', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isClusterEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CLUSTER_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isCryptodocEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CRYPTODOC_ENABLED',\n                        sortable: true\n                    }\n                ]);\n            });\n        }\n\n        if (this.authService.isBpmLoggedIn()) {\n            this.discovery.getBpmProductInfo().subscribe((bpmVers) => {\n                this.bpmVersion = bpmVers;\n            });\n        }\n\n        this.http.get('./versions.json?' + new Date()).subscribe((response: any) => {\n\n            const alfrescoPackages = Object.keys(response.dependencies).filter((val) => {\n                return new RegExp(this.regexp).test(val);\n            });\n\n            const alfrescoPackagesTableRepresentation = [];\n            alfrescoPackages.forEach((val) => {\n                alfrescoPackagesTableRepresentation.push({\n                    name: val,\n                    version: (response.dependencies[val].version || response.dependencies[val].required.version)\n                });\n            });\n\n            this.gitHubLinkCreation(alfrescoPackagesTableRepresentation);\n\n            this.data = new ObjectDataTableAdapter(alfrescoPackagesTableRepresentation, [\n                { type: 'text', key: 'name', title: 'Name', sortable: true },\n                { type: 'text', key: 'version', title: 'Version', sortable: true }\n            ]);\n\n        });\n\n        this.ecmHost = this.appConfig.get<string>(AppConfigValues.ECMHOST);\n        this.bpmHost = this.appConfig.get<string>(AppConfigValues.BPMHOST);\n    }\n\n    private gitHubLinkCreation(alfrescoPackagesTableRepresentation): void {\n        const corePackage = alfrescoPackagesTableRepresentation.find((packageUp) => {\n            return packageUp.name === '@alfresco/adf-core';\n        });\n\n        if (corePackage) {\n            const commitIsh = corePackage.version.split('-');\n            if (commitIsh.length > 1) {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + commitIsh[1];\n            } else {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + corePackage.version;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n    MatTooltipModule, MatExpansionModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule, MatExpansionModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuService {\n    public show: Subject<{event: MouseEvent, obj: any[]}> = new Subject<{event: MouseEvent, obj: any[]}>();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Component, HostListener, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { ContextMenuService } from './context-menu.service';\n\n@Component({\n    selector: 'adf-context-menu-holder',\n    template: `\n        <button mat-button [matMenuTriggerFor]=\"contextMenu\"></button>\n        <mat-menu #contextMenu=\"matMenu\" class=\"context-menu\">\n            <ng-container *ngFor=\"let link of links\">\n                <button *ngIf=\"link.model?.visible\"\n                        [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                        mat-menu-item\n                        [disabled]=\"link.model?.disabled\"\n                        (click)=\"onMenuItemClick($event, link)\">\n                    <mat-icon *ngIf=\"showIcons && link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                    {{ (link.title || link.model?.title) | translate }}\n                </button>\n            </ng-container>\n        </mat-menu>\n    `\n})\nexport class ContextMenuHolderComponent implements OnInit, OnDestroy {\n    links = [];\n\n    private mouseLocation: { left: number, top: number } = { left: 0, top: 0 };\n    private menuElement = null;\n    private subscriptions: Subscription[] = [];\n    private contextMenuListenerFn: () => void;\n\n    @Input()\n    showIcons: boolean = false;\n\n    @ViewChild(MatMenuTrigger)\n    menuTrigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    constructor(\n        private viewport: ViewportRuler,\n        private overlayContainer: OverlayContainer,\n        private contextMenuService: ContextMenuService,\n        private renderer: Renderer2\n    ) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.contextMenuService.show.subscribe((mouseEvent) => this.showMenu(mouseEvent.event, mouseEvent.obj)),\n\n            this.menuTrigger.menuOpened.subscribe(() => {\n                const container = this.overlayContainer.getContainerElement();\n                if (container) {\n                    this.contextMenuListenerFn = this.renderer.listen(container, 'contextmenu', (contextmenuEvent: Event) => {\n                        contextmenuEvent.preventDefault();\n                    });\n                }\n                this.menuElement = this.getContextMenuElement();\n            }),\n\n            this.menuTrigger.menuClosed.subscribe(() => {\n                this.menuElement = null;\n                if (this.contextMenuListenerFn) {\n                    this.contextMenuListenerFn();\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.contextMenuListenerFn) {\n            this.contextMenuListenerFn();\n        }\n\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        this.menuElement = null;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any): void {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n        menuItem.subject.next(menuItem);\n    }\n\n    showMenu(mouseEvent, links) {\n        this.links = links;\n\n        if (mouseEvent) {\n            this.mouseLocation = {\n                left: mouseEvent.clientX,\n                top: mouseEvent.clientY\n            };\n        }\n\n        this.menuTrigger.openMenu();\n\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    get mdMenuElement() {\n        return this.menuElement;\n    }\n\n    private locationCss() {\n        return {\n            left: this.mouseLocation.left + 'px',\n            top: this.mouseLocation.top + 'px'\n        };\n    }\n\n    private updatePosition() {\n        setTimeout(() => {\n            if (this.mdMenuElement.parentElement) {\n                if (this.mdMenuElement.clientWidth + this.mouseLocation.left > this.viewport.getViewportRect().width) {\n                    this.menuTrigger.menu.xPosition = 'before';\n                    this.mdMenuElement.parentElement.style.left = this.mouseLocation.left - this.mdMenuElement.clientWidth + 'px';\n                } else {\n                    this.menuTrigger.menu.xPosition = 'after';\n                    this.mdMenuElement.parentElement.style.left = this.locationCss().left;\n                }\n\n                if (this.mdMenuElement.clientHeight + this.mouseLocation.top > this.viewport.getViewportRect().height) {\n                    this.menuTrigger.menu.yPosition = 'above';\n                    this.mdMenuElement.parentElement.style.top = this.mouseLocation.top - this.mdMenuElement.clientHeight + 'px';\n                } else {\n                    this.menuTrigger.menu.yPosition = 'below';\n                    this.mdMenuElement.parentElement.style.top = this.locationCss().top;\n                }\n            }\n        }, 0);\n    }\n\n    private getContextMenuElement() {\n        return this.overlayContainer.getContainerElement().querySelector('.context-menu');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nexport class ContextMenuOverlayRef {\n\n    constructor(private overlayRef: OverlayRef) { }\n\n    close(): void {\n        this.overlayRef.dispose();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_DATA = new InjectionToken<any>('CONTEXT_MENU_DATA');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    sequence,\n    AnimationStateMetadata,\n    AnimationTransitionMetadata\n} from '@angular/animations';\n\nexport const contextMenuAnimation: ( AnimationStateMetadata | AnimationTransitionMetadata)[] = [\n    state('void', style({\n        opacity: 0,\n        transform: 'scale(0.01, 0.01)'\n    })),\n    transition('void => *', sequence([\n        query('.mat-menu-content', style({ opacity: 0 })),\n        animate('100ms linear', style({ opacity: 1, transform: 'scale(1, 0.5)' })),\n        group([\n            query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n                style({ opacity: 1 })\n            )),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ transform: 'scale(1, 1)' }))\n        ])\n    ])),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, ViewEncapsulation, HostListener, AfterViewInit,\n    Optional, Inject, QueryList, ViewChildren\n} from '@angular/core';\nimport { trigger } from '@angular/animations';\nimport { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { MatMenuItem } from '@angular/material';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { contextMenuAnimation } from './animations';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\n\n@Component({\n    selector: 'adf-context-menu',\n    template: `\n        <div mat-menu class=\"mat-menu-panel\" @panelAnimation>\n            <div id=\"adf-context-menu-content\" class=\"mat-menu-content\">\n                <ng-container *ngFor=\"let link of links\">\n                    <button *ngIf=\"link.model?.visible\"\n                            [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                            mat-menu-item\n                            [disabled]=\"link.model?.disabled\"\n                            (click)=\"onMenuItemClick($event, link)\">\n                        <mat-icon *ngIf=\"link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                        <span>{{ (link.title || link.model?.title) | translate }}</span>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    host: {\n        role: 'menu',\n        class: 'adf-context-menu'\n    },\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('panelAnimation', contextMenuAnimation)\n    ]\n})\nexport class ContextMenuListComponent implements AfterViewInit {\n    private keyManager: FocusKeyManager<MatMenuItem>;\n    @ViewChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n    links: any[];\n\n    @HostListener('document:keydown.Escape', ['$event'])\n    handleKeydownEscape(event: KeyboardEvent) {\n        if (event) {\n            this.contextMenuOverlayRef.close();\n        }\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeydownEvent(event: KeyboardEvent) {\n        if (event) {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                this.keyManager.onKeydown(event);\n            }\n        }\n    }\n\n    constructor(\n        @Inject(ContextMenuOverlayRef) private contextMenuOverlayRef: ContextMenuOverlayRef,\n        @Optional() @Inject(CONTEXT_MENU_DATA) private data: any\n    ) {\n        this.links = this.data;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any) {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n\n        menuItem.subject.next(menuItem);\n        this.contextMenuOverlayRef.close();\n    }\n\n    ngAfterViewInit() {\n        this.keyManager = new FocusKeyManager<MatMenuItem>(this.items);\n        this.keyManager.setFirstItemActive();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Injector, ElementRef, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { ContextMenuOverlayConfig } from './interfaces';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\nconst DEFAULT_CONFIG: ContextMenuOverlayConfig = {\n    panelClass: 'cdk-overlay-pane',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n    hasBackdrop: true\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuOverlayService {\n\n    constructor(\n        private injector: Injector,\n        private overlay: Overlay\n    ) {}\n\n    open(config: ContextMenuOverlayConfig): ContextMenuOverlayRef {\n        const overlayConfig = { ...DEFAULT_CONFIG, ...config };\n\n        const overlay = this.createOverlay(overlayConfig);\n\n        const overlayRef = new ContextMenuOverlayRef(overlay);\n\n        this.attachDialogContainer(overlay, config, overlayRef);\n\n        overlay.backdropClick().subscribe(() => overlayRef.close());\n\n        // prevent native contextmenu on overlay element if config.hasBackdrop is true\n        if (overlayConfig.hasBackdrop) {\n            (<any> overlay)._backdropElement\n                .addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    (<any> overlay)._backdropClick.next(null);\n                }, true);\n        }\n\n        return overlayRef;\n    }\n\n    private createOverlay(config: ContextMenuOverlayConfig): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(overlay: OverlayRef, config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef) {\n        const injector = this.createInjector(config, contextMenuOverlayRef);\n\n        const containerPortal = new ComponentPortal(ContextMenuListComponent, null, injector);\n        const containerRef: ComponentRef<ContextMenuListComponent> = overlay.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private createInjector(config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(ContextMenuOverlayRef, contextMenuOverlayRef);\n        injectionTokens.set(CONTEXT_MENU_DATA, config.data);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    private getOverlayConfig(config: ContextMenuOverlayConfig): OverlayConfig {\n        const { clientY, clientX  } = config.source;\n\n        const fakeElement: any = {\n            getBoundingClientRect: (): ClientRect => ({\n                bottom: clientY,\n                height: 0,\n                left: clientX,\n                right: clientX,\n                top: clientY,\n                width: 0\n            })\n        };\n\n        const positionStrategy = this.overlay.position()\n            .connectedTo(\n                new ElementRef(fakeElement),\n                { originX: 'start', originY: 'bottom' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'top' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'center' },\n                { overlayX: 'start', overlayY: 'center' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'center' },\n                { overlayX: 'end', overlayY: 'center' }\n            );\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass,\n            panelClass: config.panelClass,\n            scrollStrategy: this.overlay.scrollStrategies.close(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { ContextMenuOverlayService } from './context-menu-overlay.service';\n\n@Directive({\n    selector: '[adf-context-menu], [context-menu]'\n})\nexport class ContextMenuDirective {\n    /** Items for the menu. */\n    @Input('adf-context-menu')\n    links: any[];\n\n    /** Is the menu enabled? */\n    @Input('adf-context-menu-enabled')\n    enabled: boolean = false;\n\n    constructor(private contextMenuService: ContextMenuOverlayService) {}\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (this.enabled) {\n            if (event) {\n                event.preventDefault();\n            }\n\n            if (this.links && this.links.length > 0) {\n                this.contextMenuService.open({\n                    source: event,\n                    data: this.links\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContextMenuHolderComponent } from './context-menu-holder.component';\nimport { ContextMenuDirective } from './context-menu.directive';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective,\n        ContextMenuListComponent\n    ],\n    exports: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    entryComponents: [\n        ContextMenuListComponent\n    ]\n})\nexport class ContextMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { LanguageItem } from '../language-menu/language.interface';\nimport { StorageService } from './storage.service';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\nexport enum UserPreferenceValues {\n    PaginationSize = 'paginationSize',\n    Locale = 'locale',\n    SupportedPageSizes = 'supportedPageSizes',\n    ExpandedSideNavStatus = 'expandedSidenav'\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserPreferencesService {\n\n    defaults = {\n        paginationSize: 25,\n        supportedPageSizes: [5, 10, 15, 20],\n        locale: 'en',\n        expandedSidenav: true\n    };\n\n    private userPreferenceStatus: any = this.defaults;\n    private onChangeSubject: BehaviorSubject<any>;\n    onChange: Observable<any>;\n\n    constructor(public translate: TranslateService,\n                private appConfig: AppConfigService,\n                private storage: StorageService,\n                private alfrescoApiService: AlfrescoApiService) {\n        this.alfrescoApiService.alfrescoApiInitialized.subscribe(this.initUserPreferenceStatus.bind(this));\n        this.onChangeSubject = new BehaviorSubject(this.userPreferenceStatus);\n        this.onChange = this.onChangeSubject.asObservable();\n    }\n\n    private initUserPreferenceStatus() {\n        this.initUserLanguage();\n        this.set(UserPreferenceValues.PaginationSize, this.paginationSize);\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(this.supportedPageSizes));\n    }\n\n    private initUserLanguage() {\n        if (this.locale || this.appConfig.get<string>(UserPreferenceValues.Locale)) {\n            const locale = this.locale || this.getDefaultLocale();\n\n            this.set(UserPreferenceValues.Locale, locale);\n            this.set('textOrientation', this.getLanguageByKey(locale).direction || 'ltr');\n        } else {\n            const locale = this.locale || this.getDefaultLocale();\n\n            this.setWithoutStore(UserPreferenceValues.Locale, locale);\n            this.setWithoutStore('textOrientation', this.getLanguageByKey(locale).direction || 'ltr');\n        }\n    }\n\n    /**\n     * Sets up a callback to notify when a property has changed.\n     * @param property The property to watch\n     * @returns Notification callback\n     */\n    select(property: string): Observable<any> {\n        return this.onChange\n            .pipe(\n                map((userPreferenceStatus) => userPreferenceStatus[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets a preference property.\n     * @param property Name of the property\n     * @param defaultValue Default to return if the property is not found\n     * @returns Preference property\n     */\n    get(property: string, defaultValue?: string): string {\n        const key = this.getPropertyKey(property);\n        const value = this.storage.getItem(key);\n        if (value === undefined || value === null) {\n            return defaultValue;\n        }\n        return value;\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    set(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.storage.setItem(\n            this.getPropertyKey(property),\n            value\n        );\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    setWithoutStore(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Check if an item is present in the storage\n     * @param property Name of the property\n     * @returns True if the item is present, false otherwise\n     */\n    hasItem(property: string) {\n        if (!property) {\n            return;\n        }\n        return this.storage.hasItem(\n            this.getPropertyKey(property)\n        );\n    }\n\n    /**\n     * Gets the active storage prefix for preferences.\n     * @returns Storage prefix\n     */\n    getStoragePrefix(): string {\n        return this.storage.getItem('USER_PROFILE') || 'GUEST';\n    }\n\n    /**\n     * Sets the active storage prefix for preferences.\n     * @param value Name of the prefix\n     */\n    setStoragePrefix(value: string) {\n        this.storage.setItem('USER_PROFILE', value || 'GUEST');\n        this.initUserPreferenceStatus();\n    }\n\n    /**\n     * Gets the full property key with prefix.\n     * @param property The property name\n     * @returns Property key\n     */\n    getPropertyKey(property: string): string {\n        return `${this.getStoragePrefix()}__${property}`;\n    }\n\n    /**\n     * Gets an array containing the available page sizes.\n     * @returns Array of page size values\n     */\n    get supportedPageSizes(): number[] {\n        const supportedPageSizes = this.get(UserPreferenceValues.SupportedPageSizes);\n\n        if (supportedPageSizes) {\n            return JSON.parse(supportedPageSizes);\n        } else {\n            return this.appConfig.get('pagination.supportedPageSizes', this.defaults.supportedPageSizes);\n        }\n    }\n\n    set supportedPageSizes(value: number[]) {\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(value));\n    }\n\n    /** Pagination size. */\n    set paginationSize(value: number) {\n        this.set(UserPreferenceValues.PaginationSize, value);\n    }\n\n    get paginationSize(): number {\n        const paginationSize = this.get(UserPreferenceValues.PaginationSize);\n\n        if (paginationSize) {\n            return Number(paginationSize);\n        } else {\n            return Number(this.appConfig.get('pagination.size', this.defaults.paginationSize));\n        }\n    }\n\n    /** Current locale setting. */\n    get locale(): string {\n        return this.get(UserPreferenceValues.Locale);\n    }\n\n    set locale(value: string) {\n        this.set(UserPreferenceValues.Locale, value);\n    }\n\n    /**\n     * Gets the default locale.\n     * @returns Default locale language code\n     */\n    public getDefaultLocale(): string {\n        return this.appConfig.get<string>(UserPreferenceValues.Locale) || this.translate.getBrowserCultureLang() || 'en';\n    }\n\n    private getLanguageByKey(key: string): LanguageItem {\n        return (\n            this.appConfig\n                .get<Array<LanguageItem>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY, [<LanguageItem> { key: 'en' }])\n                .find((language) => key.includes(language.key)) || <LanguageItem> { key: 'en' }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { TranslateLoaderService } from './translate-loader.service';\nimport { UserPreferencesService, UserPreferenceValues } from './user-preferences.service';\n\nexport const TRANSLATION_PROVIDER = new InjectionToken('Injection token for translation providers.');\n\nexport interface TranslationProvider {\n    name: string;\n    source: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslationService {\n    defaultLang: string;\n    userLang: string;\n    customLoader: TranslateLoaderService;\n\n    constructor(public translate: TranslateService,\n                userPreferencesService: UserPreferencesService,\n                @Optional() @Inject(TRANSLATION_PROVIDER) providers: TranslationProvider[]) {\n        this.customLoader = <TranslateLoaderService> this.translate.currentLoader;\n\n        this.defaultLang = 'en';\n        translate.setDefaultLang(this.defaultLang);\n        this.customLoader.setDefaultLang(this.defaultLang);\n\n        if (providers && providers.length > 0) {\n            for (const provider of providers) {\n                this.addTranslationFolder(provider.name, provider.source);\n            }\n        }\n\n        userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            if (locale) {\n                this.userLang = locale;\n                this.use(this.userLang);\n            }\n        });\n    }\n\n    /**\n     * Adds a new folder of translation source files.\n     * @param name Name for the translation provider\n     * @param path Path to the folder\n     */\n    addTranslationFolder(name: string = '', path: string = '') {\n        if (!this.customLoader.providerRegistered(name)) {\n            this.customLoader.registerProvider(name, path);\n\n            if (this.userLang) {\n                this.loadTranslation(this.userLang, this.defaultLang);\n            } else {\n                this.loadTranslation(this.defaultLang);\n            }\n        }\n    }\n\n    /**\n     * Loads a translation file.\n     * @param lang Language code for the language to load\n     * @param fallback Language code to fall back to if the first one was unavailable\n     */\n    loadTranslation(lang: string, fallback?: string) {\n        this.translate.getTranslation(lang).subscribe(\n            () => {\n                this.translate.use(lang);\n                this.onTranslationChanged(lang);\n            },\n            () => {\n                if (fallback && fallback !== lang) {\n                    this.loadTranslation(fallback);\n                }\n            }\n        );\n    }\n\n    /**\n     * Triggers a notification callback when the translation language changes.\n     * @param lang The new language code\n     */\n    onTranslationChanged(lang: string): void {\n        this.translate.onTranslationChange.next({\n            lang: lang,\n            translations: this.customLoader.getFullTranslationJSON(lang)\n        });\n    }\n\n    /**\n     * Sets the target language for translations.\n     * @param lang Code name for the language\n     * @returns Translations available for the language\n     */\n    use(lang: string): Observable<any> {\n        this.customLoader.init(lang);\n        return this.translate.use(lang);\n    }\n\n    /**\n     * Gets the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n    /**\n     * Directly returns the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key ? this.translate.instant(key, interpolateParams) : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n    name: 'adfFileSize',\n    pure: false\n})\nexport class FileSizePipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(bytes: number, decimals: number = 2): string {\n        if (bytes == null || bytes === undefined) {\n            return '';\n        }\n\n        if (bytes === 0) {\n            return '0 ' + this.translation.instant('CORE.FILE_SIZE.BYTES');\n        }\n\n        const k = 1024,\n            dm = decimals || 2,\n            sizes = ['BYTES', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        const i18nSize = this.translation.instant(`CORE.FILE_SIZE.${sizes[i]}`);\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + i18nSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThumbnailService {\n\n    DEFAULT_ICON: string = './assets/images/ft_ic_miscellaneous.svg';\n\n    mimeTypeIcons: any = {\n        'image/png': './assets/images/ft_ic_raster_image.svg',\n        'image/jpeg': './assets/images/ft_ic_raster_image.svg',\n        'image/gif': './assets/images/ft_ic_raster_image.svg',\n        'image/bmp': './assets/images/ft_ic_raster_image.svg',\n        'image/cgm': './assets/images/ft_ic_raster_image.svg',\n        'image/ief': './assets/images/ft_ic_raster_image.svg',\n        'image/jp2': './assets/images/ft_ic_raster_image.svg',\n        'image/tiff': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.photoshop': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.premiere': './assets/images/ft_ic_raster_image.svg',\n        'image/x-cmu-raster': './assets/images/ft_ic_raster_image.svg',\n        'image/x-dwt': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-anymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-bitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-graymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-pixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-adobe': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-canon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-fuji': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-hasselblad': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-kodak': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-leica': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-minolta': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-nikon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-olympus': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-panasonic': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-pentax': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-red': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sigma': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sony': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xbitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xpixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xwindowdump': './assets/images/ft_ic_raster_image.svg',\n        'image/svg+xml': './assets/images/ft_ic_vector_image.svg',\n        'application/eps': './assets/images/ft_ic_raster_image.svg',\n        'application/illustrator': './assets/images/ft_ic_raster_image.svg',\n        'application/pdf': './assets/images/ft_ic_pdf.svg',\n        'application/vnd.ms-excel': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.addin.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.binary.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.template.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-outlook': './assets/images/ft_ic_document.svg',\n        'application/msword': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.document.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.template.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer.template': './assets/images/ft_ic_ms_word.svg',\n        'application/rtf': './assets/images/ft_ic_ms_word.svg',\n        'text/rtf': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-powerpoint': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation-template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slide': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.spreadsheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.oasis.opendocument.spreadsheet-template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-powerpoint.addin.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.presentation.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slide.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slideshow.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.template.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'video/mp4': './assets/images/ft_ic_video.svg',\n        'video/3gpp': './assets/images/ft_ic_video.svg',\n        'video/3gpp2': './assets/images/ft_ic_video.svg',\n        'video/mp2t': './assets/images/ft_ic_video.svg',\n        'video/mpeg': './assets/images/ft_ic_video.svg',\n        'video/mpeg2': './assets/images/ft_ic_video.svg',\n        'video/ogg': './assets/images/ft_ic_video.svg',\n        'video/quicktime': './assets/images/ft_ic_video.svg',\n        'video/webm': './assets/images/ft_ic_video.svg',\n        'video/x-flv': './assets/images/ft_ic_video.svg',\n        'video/x-m4v': './assets/images/ft_ic_video.svg',\n        'video/x-ms-asf': './assets/images/ft_ic_video.svg',\n        'video/x-ms-wmv': './assets/images/ft_ic_video.svg',\n        'video/x-msvideo': './assets/images/ft_ic_video.svg',\n        'video/x-rad-screenplay':  './assets/images/ft_ic_video.svg',\n        'video/x-sgi-movie': './assets/images/ft_ic_video.svg',\n        'video/x-matroska': './assets/images/ft_ic_video.svg',\n        'audio/mpeg': './assets/images/ft_ic_audio.svg',\n        'audio/ogg': './assets/images/ft_ic_audio.svg',\n        'audio/wav': './assets/images/ft_ic_audio.svg',\n        'audio/basic': './assets/images/ft_ic_audio.svg',\n        'audio/mp4': './assets/images/ft_ic_audio.svg',\n        'audio/vnd.adobe.soundbooth': './assets/images/ft_ic_audio.svg',\n        'audio/vorbis': './assets/images/ft_ic_audio.svg',\n        'audio/x-aiff': './assets/images/ft_ic_audio.svg',\n        'audio/x-flac': './assets/images/ft_ic_audio.svg',\n        'audio/x-ms-wma': './assets/images/ft_ic_audio.svg',\n        'audio/x-wav': './assets/images/ft_ic_audio.svg',\n        'x-world/x-vrml': './assets/images/ft_ic_video.svg',\n        'text/plain': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text-template': './assets/images/ft_ic_document.svg',\n        'application/x-javascript': './assets/images/ft_ic_document.svg',\n        'application/json': './assets/images/ft_ic_document.svg',\n        'text/csv': './assets/images/ft_ic_document.svg',\n        'text/xml': './assets/images/ft_ic_document.svg',\n        'text/html': './assets/images/ft_ic_website.svg',\n        'application/x-compressed': './assets/images/ft_ic_archive.svg',\n        'application/x-zip-compressed': './assets/images/ft_ic_archive.svg',\n        'application/zip': './assets/images/ft_ic_archive.svg',\n        'application/x-tar': './assets/images/ft_ic_archive.svg',\n        'application/vnd.apple.keynote': './assets/images/ft_ic_presentation.svg',\n        'application/vnd.apple.pages': './assets/images/ft_ic_document.svg',\n        'application/vnd.apple.numbers': './assets/images/ft_ic_spreadsheet.svg',\n        'application/vnd.visio': './assets/images/ft_ic_document.svg',\n        'application/wordperfect': './assets/images/ft_ic_document.svg',\n        'application/x-cpio': './assets/images/ft_ic_document.svg',\n        'folder': './assets/images/ft_ic_folder.svg',\n        'smartFolder': './assets/images/ft_ic_smart_folder.svg',\n        'ruleFolder': './assets/images/ft_ic_folder_rule.svg',\n        'linkFolder': './assets/images/ft_ic_folder_shortcut_link.svg',\n        'disable/folder': './assets/images/ft_ic_folder_disable.svg',\n        'selected': './assets/images/ft_ic_selected.svg'\n    };\n\n    constructor(protected apiService: AlfrescoApiService, matIconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n        Object.keys(this.mimeTypeIcons).forEach((key) => {\n            const url = sanitizer.bypassSecurityTrustResourceUrl(this.mimeTypeIcons[key]);\n\n            matIconRegistry.addSvgIcon(key, url);\n            matIconRegistry.addSvgIconInNamespace('adf', key, url);\n        });\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node or Node ID to get URL for.\n     * @returns URL string\n     */\n    getDocumentThumbnailUrl(node: NodeEntry | string, attachment?: boolean, ticket?: string): string {\n        let resultUrl: string;\n\n        if (node) {\n            let nodeId: string;\n\n            if (typeof node === 'string') {\n                nodeId = node;\n            } else if (node.entry) {\n                nodeId = node.entry.id;\n            }\n\n            resultUrl = this.apiService.contentApi.getDocumentThumbnailUrl(nodeId, attachment, ticket);\n        }\n\n        return resultUrl || this.DEFAULT_ICON;\n    }\n\n    /**\n     * Gets a thumbnail URL for a MIME type.\n     * @param mimeType MIME type for the thumbnail\n     * @returns URL string\n     */\n    public getMimeTypeIcon(mimeType: string): string {\n        const icon = this.mimeTypeIcons[mimeType];\n        return (icon || this.DEFAULT_ICON);\n    }\n\n    /**\n     * Gets a \"miscellaneous\" thumbnail URL for types with no other icon defined.\n     * @returns URL string\n     */\n    public getDefaultMimeTypeIcon(): string {\n        return this.DEFAULT_ICON;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@Pipe({\n    name: 'adfMimeTypeIcon'\n})\nexport class MimeTypeIconPipe implements PipeTransform {\n\n    constructor(private thumbnailService: ThumbnailService) { }\n\n    transform(text: string): string {\n        return this.thumbnailService.getMimeTypeIcon(text);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Pipe({\n    name: 'adfNodeNameTooltip'\n})\nexport class NodeNameTooltipPipe implements PipeTransform {\n\n    transform(node: NodeEntry): string {\n        if (node) {\n            return this.getNodeTooltip(node);\n        }\n        return null;\n    }\n\n    private containsLine(lines: string[], line: string): boolean {\n        return lines.some((item: string) => {\n            return item.toLowerCase() === line.toLowerCase();\n        });\n    }\n\n    private removeDuplicateLines(lines: string[]): string[] {\n        const reducer = (acc: string[], line: string): string[] => {\n            if (!this.containsLine(acc, line)) { acc.push(line); }\n            return acc;\n        };\n\n        return lines.reduce(reducer, []);\n    }\n\n    private getNodeTooltip(node: NodeEntry): string {\n        if (!node || !node.entry) {\n            return null;\n        }\n\n        const { entry: { properties, name } } = node;\n        const lines = [ name ];\n\n        if (properties) {\n            const {\n                'cm:title': title,\n                'cm:description': description\n            } = properties;\n\n            if (title && description) {\n                lines[0] = title;\n                lines[1] = description;\n            }\n\n            if (title) {\n                lines[1] = title;\n            }\n\n            if (description) {\n                lines[1] = description;\n            }\n        }\n\n        return this.removeDuplicateLines(lines).join(`\\n`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport interface HighlightTransformResult {\n    text: string;\n    changed: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HighlightTransformService {\n\n    /**\n     * Searches for `search` string(s) within `text` and highlights all occurrences.\n     * @param text Text to search within\n     * @param search Text pattern to search for\n     * @param wrapperClass CSS class used to provide highlighting style\n     * @returns New text along with boolean value to indicate whether anything was highlighted\n     */\n    public highlight(text: string, search: string, wrapperClass: string = 'adf-highlight'): HighlightTransformResult {\n        let isMatching = false,\n            result = text;\n\n        if (search && text) {\n            let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n            pattern = pattern.split(' ').filter((t) => {\n                return t.length > 0;\n            }).join('|');\n\n            const regex = new RegExp(pattern, 'gi');\n            result = text.replace(/<[^>]+>/g, '').replace(regex, (match) => {\n                isMatching = true;\n                return `<span class=\"${wrapperClass}\">${match}</span>`;\n            });\n\n            return { text: result, changed: isMatching };\n        } else {\n            return { text: result, changed: isMatching };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    constructor(private highlightTransformService: HighlightTransformService) { }\n\n    transform(text: string, search: string): string {\n        const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(text, search);\n        return highlightTransformResult.text;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { UserPreferenceValues, UserPreferencesService } from '../services/user-preferences.service';\nimport { DatePipe } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Pipe({\n    name: 'adfTimeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\n\n    static DEFAULT_LOCALE = 'en-US';\n    static DEFAULT_DATE_TIME_FORMAT = 'dd/MM/yyyy HH:mm';\n\n    defaultLocale: string;\n    defaultDateTimeFormat: string;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public userPreferenceService: UserPreferencesService,\n                public appConfig: AppConfigService) {\n        this.userPreferenceService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => {\n                this.defaultLocale = locale || TimeAgoPipe.DEFAULT_LOCALE;\n            });\n        this.defaultDateTimeFormat = this.appConfig.get<string>('dateValues.defaultDateTimeFormat', TimeAgoPipe.DEFAULT_DATE_TIME_FORMAT);\n    }\n\n    transform(value: Date, locale?: string) {\n        if (value !== null && value !== undefined ) {\n            const actualLocale = locale || this.defaultLocale;\n            const then = moment(value);\n            const diff = moment().locale(actualLocale).diff(then, 'days');\n            if ( diff > 7) {\n                const datePipe: DatePipe = new DatePipe(actualLocale);\n                return datePipe.transform(value, this.defaultDateTimeFormat);\n            } else {\n                return then.locale(actualLocale).fromNow();\n            }\n        }\n        return '';\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { EcmUserModel } from '../userinfo/models/ecm-user.model';\n\n@Pipe({\n    name: 'usernameInitials'\n})\nexport class InitialUsernamePipe implements PipeTransform {\n\n    constructor(private sanitized: DomSanitizer) {\n    }\n\n    transform(user: UserProcessModel | EcmUserModel, className: string = '', delimiter: string = ''): SafeHtml {\n        let safeHtml: SafeHtml = '';\n        if (user) {\n            const initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);\n            safeHtml = this.sanitized.bypassSecurityTrustHtml(`<div id=\"user-initials-image\" class=\"${className}\">${initialResult}</div>`);\n        }\n        return safeHtml;\n    }\n\n    getInitialUserName(firstName: string, lastName: string, delimiter: string) {\n        firstName = (firstName ? firstName[0] : '');\n        lastName = (lastName ? lastName[0] : '');\n        return firstName + delimiter + lastName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'fullName' })\nexport class FullNamePipe implements PipeTransform {\n    transform(user: any): string {\n        let fullName = '';\n        if (user) {\n            if (user.firstName) {\n                fullName += user.firstName;\n            }\n            if (user.lastName) {\n                fullName += fullName.length > 0 ? ' ' : '';\n                fullName += user.lastName;\n            }\n        }\n        return fullName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'formatSpace'\n})\nexport class FormatSpacePipe implements PipeTransform {\n\n    transform(inputValue: string, replaceChar: string = '_', lowerCase: boolean = true): string {\n        let transformedString = '';\n        if (inputValue) {\n            transformedString = lowerCase ? inputValue.trim().split(' ').join(replaceChar).toLocaleLowerCase() :\n                inputValue.trim().split(' ').join(replaceChar);\n        }\n        return transformedString;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'fileType',\n    pure: true\n})\nexport class FileTypePipe implements PipeTransform {\n\n    transform(value: string) {\n\n        if ( value == null || value === undefined ) {\n            return '';\n        } else {\n            const fileInfo = value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '');\n            return fileInfo.split('_').pop();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'multiValue' })\nexport class MultiValuePipe implements PipeTransform {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    transform(values: string | string [], valueSeparator: string = MultiValuePipe.DEFAULT_SEPARATOR): string {\n\n        if (values && values instanceof Array) {\n            const valueList = values.map((value) => value.trim());\n            return valueList.join(valueSeparator);\n        }\n\n        return <string> values;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Pipe({\n    name: 'adfLocalizedDate',\n    pure: false\n})\nexport class LocalizedDatePipe implements PipeTransform, OnDestroy {\n\n    static DEFAULT_LOCALE = 'en-US';\n    static DEFAULT_DATE_FORMAT = 'mediumDate';\n\n    defaultLocale: string = LocalizedDatePipe.DEFAULT_LOCALE;\n    defaultFormat: string = LocalizedDatePipe.DEFAULT_DATE_FORMAT;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public userPreferenceService?: UserPreferencesService,\n                public appConfig?: AppConfigService) {\n\n        if (this.userPreferenceService) {\n            this.userPreferenceService\n                .select(UserPreferenceValues.Locale)\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe(locale => {\n                    if (locale) {\n                        this.defaultLocale = locale;\n                    }\n                });\n        }\n\n        if (this.appConfig) {\n            this.defaultFormat = this.appConfig.get<string>('dateValues.defaultDateFormat', LocalizedDatePipe.DEFAULT_DATE_FORMAT);\n        }\n    }\n\n    transform(value: any, format?: string, locale?: string): any {\n        const actualFormat = format || this.defaultFormat;\n        const actualLocale = locale || this.defaultLocale;\n        const datePipe: DatePipe = new DatePipe(actualLocale);\n        return datePipe.transform(value, actualFormat);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DecimalPipe } from '@angular/common';\nimport { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { DecimalNumberModel } from '../models/decimal-number.model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Pipe({\n    name: 'adfDecimalNumber',\n    pure: false\n})\nexport class DecimalNumberPipe implements PipeTransform, OnDestroy {\n\n    static DEFAULT_LOCALE = 'en-US';\n    static DEFAULT_MIN_INTEGER_DIGITS = 1;\n    static DEFAULT_MIN_FRACTION_DIGITS = 0;\n    static DEFAULT_MAX_FRACTION_DIGITS = 2;\n\n    defaultLocale: string = DecimalNumberPipe.DEFAULT_LOCALE;\n    defaultMinIntegerDigits: number = DecimalNumberPipe.DEFAULT_MIN_INTEGER_DIGITS;\n    defaultMinFractionDigits: number = DecimalNumberPipe.DEFAULT_MIN_FRACTION_DIGITS;\n    defaultMaxFractionDigits: number = DecimalNumberPipe.DEFAULT_MAX_FRACTION_DIGITS;\n\n    onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(public userPreferenceService?: UserPreferencesService,\n                public appConfig?: AppConfigService) {\n\n        if (this.userPreferenceService) {\n            this.userPreferenceService.select(UserPreferenceValues.Locale)\n                .pipe(\n                    takeUntil(this.onDestroy$)\n                )\n                .subscribe((locale) => {\n                    if (locale) {\n                        this.defaultLocale = locale;\n                    }\n                });\n        }\n\n        if (this.appConfig) {\n            this.defaultMinIntegerDigits = this.appConfig.get<number>('decimalValues.minIntegerDigits', DecimalNumberPipe.DEFAULT_MIN_INTEGER_DIGITS);\n            this.defaultMinFractionDigits = this.appConfig.get<number>('decimalValues.minFractionDigits', DecimalNumberPipe.DEFAULT_MIN_FRACTION_DIGITS);\n            this.defaultMaxFractionDigits = this.appConfig.get<number>('decimalValues.maxFractionDigits', DecimalNumberPipe.DEFAULT_MAX_FRACTION_DIGITS);\n        }\n    }\n\n    transform(value: any, digitsInfo?: DecimalNumberModel, locale?: string): any {\n        const actualMinIntegerDigits: number = digitsInfo && digitsInfo.minIntegerDigits ? digitsInfo.minIntegerDigits : this.defaultMinIntegerDigits;\n        const actualMinFractionDigits: number = digitsInfo && digitsInfo.minFractionDigits ? digitsInfo.minFractionDigits : this.defaultMinFractionDigits;\n        const actualMaxFractionDigits: number = digitsInfo && digitsInfo.maxFractionDigits ? digitsInfo.maxFractionDigits : this.defaultMaxFractionDigits;\n\n        const actualDigitsInfo = `${actualMinIntegerDigits}.${actualMinFractionDigits}-${actualMaxFractionDigits}`;\n        const actualLocale = locale || this.defaultLocale;\n\n        const datePipe: DecimalPipe = new DecimalPipe(actualLocale);\n        return datePipe.transform(value, actualDigitsInfo);\n    }\n\n    ngOnDestroy(): void {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nimport { MimeTypeIconPipe } from './mime-type-icon.pipe';\nimport { NodeNameTooltipPipe } from './node-name-tooltip.pipe';\nimport { HighlightPipe } from './text-highlight.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { InitialUsernamePipe } from './user-initial.pipe';\nimport { FullNamePipe } from './full-name.pipe';\nimport { FormatSpacePipe } from './format-space.pipe';\nimport { FileTypePipe } from './file-type.pipe';\nimport { MultiValuePipe } from './multi-value.pipe';\nimport { LocalizedDatePipe } from './localized-date.pipe';\nimport { DecimalNumberPipe } from './decimal-number.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe,\n        LocalizedDatePipe,\n        DecimalNumberPipe\n    ],\n    providers: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe,\n        LocalizedDatePipe,\n        DecimalNumberPipe\n    ],\n    exports: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe,\n        LocalizedDatePipe,\n        DecimalNumberPipe\n    ]\n})\nexport class PipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Input, Renderer2, AfterViewChecked } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Directive({\n    selector: '[adf-highlight]'\n})\nexport class HighlightDirective implements AfterViewChecked {\n\n    /** Class selector for highlightable elements. */\n    @Input('adf-highlight-selector')\n    selector: string = '';\n\n    /** Text to highlight. */\n    @Input('adf-highlight')\n    search: string = '';\n\n    /** CSS class used to apply highlighting. */\n    @Input('adf-highlight-class')\n    classToApply: string = 'adf-highlight';\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private highlightTransformService: HighlightTransformService) {\n    }\n\n    ngAfterViewChecked() {\n        this.highlight();\n    }\n\n    public highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {\n        if (search && selector) {\n            const elements = this.el.nativeElement.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);\n                if (highlightTransformResult.changed) {\n                    this.renderer.setProperty(element, 'innerHTML', highlightTransformResult.text);\n                }\n            });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Directive({\n    selector: '[adf-logout]'\n})\nexport class LogoutDirective implements OnInit {\n\n    /** URI to redirect to after logging out. */\n    @Input()\n    redirectUri: string = '/login';\n\n    /** Enable redirecting after logout */\n    @Input()\n    enableRedirect: boolean = true;\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private router: Router,\n                private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        if (this.elementRef.nativeElement) {\n            this.renderer.listen(this.elementRef.nativeElement, 'click', (evt) => {\n                evt.preventDefault();\n                this.logout();\n            });\n        }\n    }\n\n    logout() {\n        this.auth.logout().subscribe(\n            () => this.redirectToUri(),\n            () => this.redirectToUri()\n        );\n    }\n\n    redirectToUri() {\n        if (this.enableRedirect) {\n            this.router.navigate([this.redirectUri]);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { NodeEntry, Node, DeletedNodeEntity, DeletedNode } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { map, catchError } from 'rxjs/operators';\n\ninterface ProcessedNodeData {\n    entry: Node | DeletedNode;\n    status: number;\n}\n\ninterface ProcessStatus {\n    success: ProcessedNodeData[];\n    failed: ProcessedNodeData[];\n\n    someFailed();\n\n    someSucceeded();\n\n    oneFailed();\n\n    oneSucceeded();\n\n    allSucceeded();\n\n    allFailed();\n}\n\n@Directive({\n    selector: '[adf-delete]'\n})\nexport class NodeDeleteDirective implements OnChanges {\n    /** Array of nodes to delete. */\n    @Input('adf-delete')\n    selection: NodeEntry[] | DeletedNodeEntity[];\n\n    /** If true then the nodes are deleted immediately rather than being put in the trash */\n    @Input()\n    permanent: boolean = false;\n\n    /** Emitted when the nodes have been deleted. */\n    @Output()\n    delete: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.process(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (!this.selection || (this.selection && this.selection.length === 0)) {\n            this.setDisableAttribute(true);\n        } else {\n            if (!this.elementRef.nativeElement.hasAttribute('adf-check-allowable-operation')) {\n                this.setDisableAttribute(false);\n            }\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    private process(selection: NodeEntry[] | DeletedNodeEntity[]) {\n        if (selection && selection.length) {\n\n            const batch = this.getDeleteNodesBatch(selection);\n\n            forkJoin(...batch)\n                .subscribe((data: ProcessedNodeData[]) => {\n                    const processedItems: ProcessStatus = this.processStatus(data);\n                    const message = this.getMessage(processedItems);\n\n                    this.delete.emit(message);\n                });\n        }\n    }\n\n    private getDeleteNodesBatch(selection: any): Observable<ProcessedNodeData>[] {\n        return selection.map((node) => this.deleteNode(node));\n    }\n\n    private deleteNode(node: NodeEntry | DeletedNodeEntity): Observable<ProcessedNodeData> {\n        const id = (<any> node.entry).nodeId || node.entry.id;\n\n        let promise;\n\n        if (node.entry.hasOwnProperty('archivedAt') && node.entry['archivedAt']) {\n            promise = this.alfrescoApiService.nodesApi.purgeDeletedNode(id);\n        } else {\n            promise = this.alfrescoApiService.nodesApi.deleteNode(id, { permanent: this.permanent });\n        }\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: node.entry,\n                status: 1\n            })),\n            catchError(() => of({\n                entry: node.entry,\n                status: 0\n            }))\n        );\n    }\n\n    private processStatus(data): ProcessStatus {\n        const deleteStatus = {\n            success: [],\n            failed: [],\n            get someFailed() {\n                return !!(this.failed.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.failed.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            }\n        };\n\n        return data.reduce(\n            (acc, next) => {\n                if (next.status === 1) {\n                    acc.success.push(next);\n                } else {\n                    acc.failed.push(next);\n                }\n\n                return acc;\n            },\n            deleteStatus\n        );\n    }\n\n    private getMessage(status): string {\n        if (status.allFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_PLURAL',\n                { number: status.failed.length }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PLURAL',\n                { number: status.success.length }\n            );\n        }\n\n        if (status.someFailed && status.someSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_PLURAL',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.someFailed && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_SINGULAR',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.oneFailed && !status.someSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_SINGULAR',\n                { name: status.failed[0].entry.name }\n            );\n        }\n\n        if (status.oneSucceeded && !status.someFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.SINGULAR',\n                { name: status.success[0].entry.name }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { FavoriteBody, NodeEntry, SharedLinkEntry, Node, SharedLink } from '@alfresco/js-api';\nimport { Observable, from, forkJoin, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Directive({\n    selector: '[adf-node-favorite]',\n    exportAs: 'adfFavorite'\n})\nexport class NodeFavoriteDirective implements OnChanges {\n    favorites: any[] = [];\n\n    /** Array of nodes to toggle as favorites. */\n    @Input('adf-node-favorite')\n    selection: NodeEntry[] = [];\n\n    /** Emitted when the favorite setting is complete. */\n    @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the favorite setting fails. */\n    @Output() error: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.toggleFavorite();\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnChanges(changes) {\n        if (!changes.selection.currentValue.length) {\n            this.favorites = [];\n\n            return;\n        }\n\n        this.markFavoritesNodes(changes.selection.currentValue);\n    }\n\n    toggleFavorite() {\n        if (!this.favorites.length) {\n            return;\n        }\n\n        const every = this.favorites.every((selected) => selected.entry.isFavorite);\n\n        if (every) {\n            const batch = this.favorites.map((selected: NodeEntry | SharedLinkEntry) => {\n                // shared files have nodeId\n                const id = (<SharedLinkEntry> selected).entry.nodeId || selected.entry.id;\n\n                return from(this.alfrescoApiService.favoritesApi.removeFavoriteSite('-me-', id));\n            });\n\n            forkJoin(batch).subscribe(\n                () => {\n                    this.favorites.map((selected) => selected.entry.isFavorite = false);\n                    this.toggle.emit();\n                },\n                (error) => this.error.emit(error)\n            );\n        }\n\n        if (!every) {\n            const notFavorite = this.favorites.filter((node) => !node.entry.isFavorite);\n            const body: FavoriteBody[] = notFavorite.map((node) => this.createFavoriteBody(node));\n\n            from(this.alfrescoApiService.favoritesApi.addFavorite('-me-', <any> body))\n                .subscribe(\n                    () => {\n                        notFavorite.map((selected) => selected.entry.isFavorite = true);\n                        this.toggle.emit();\n                    },\n                    (error) => this.error.emit(error)\n                );\n        }\n    }\n\n    markFavoritesNodes(selection: NodeEntry[]) {\n        if (selection.length <= this.favorites.length) {\n            const newFavorites = this.reduce(this.favorites, selection);\n            this.favorites = newFavorites;\n        }\n\n        const result = this.diff(selection, this.favorites);\n        const batch = this.getProcessBatch(result);\n\n        forkJoin(batch).subscribe((data) => {\n            this.favorites.push(...data);\n        });\n    }\n\n    hasFavorites(): boolean {\n        if (this.favorites && !this.favorites.length) {\n            return false;\n        }\n\n        return this.favorites.every((selected) => selected.entry.isFavorite);\n    }\n\n    private getProcessBatch(selection): any[] {\n        return selection.map((selected: NodeEntry) => this.getFavorite(selected));\n    }\n\n    private getFavorite(selected: NodeEntry | SharedLinkEntry): Observable<any> {\n        const node: Node | SharedLink = selected.entry;\n\n        // ACS 6.x with 'isFavorite' include\n        if (node && node.hasOwnProperty('isFavorite')) {\n            return of(selected);\n        }\n\n        // ACS 5.x and 6.x without 'isFavorite' include\n        const { name, isFile, isFolder } = <Node> node;\n        const id =  (<SharedLink> node).nodeId || node.id;\n\n        const promise = this.alfrescoApiService.favoritesApi.getFavorite('-me-', id);\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: {\n                    id,\n                    isFolder,\n                    isFile,\n                    name,\n                    isFavorite: true\n                }\n            })),\n            catchError(() => {\n                return of({\n                    entry: {\n                        id,\n                        isFolder,\n                        isFile,\n                        name,\n                        isFavorite: false\n                    }\n                });\n            })\n        );\n    }\n\n    private createFavoriteBody(node): FavoriteBody {\n        const type = this.getNodeType(node);\n        // shared files have nodeId\n        const id = node.entry.nodeId || node.entry.id;\n\n        return {\n            target: {\n                [type]: {\n                    guid: id\n                }\n            }\n        };\n    }\n\n    private getNodeType(node): string {\n        // shared could only be files\n        if (!node.entry.isFile && !node.entry.isFolder) {\n            return 'file';\n        }\n\n        return node.entry.isFile ? 'file' : 'folder';\n    }\n\n    private diff(list, patch): any[] {\n        const ids = patch.map((item) => item.entry.id);\n\n        return list.filter((item) => ids.includes(item.entry.id) ? null : item);\n    }\n\n    private reduce(patch, comparator): any[] {\n        const ids = comparator.map((item) => item.entry.id);\n\n        return patch.filter((item) => ids.includes(item.entry.id) ? item : null);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class PermissionsEnum extends String {\n    static CONTRIBUTOR: string = 'Contributor';\n    static CONSUMER: string = 'Consumer';\n    static COLLABORATOR: string = 'Collaborator';\n    static MANAGER: string = 'Manager';\n    static EDITOR: string = 'Editor';\n    static COORDINATOR: string = 'Coordinator';\n    static NOT_CONTRIBUTOR: string = '!Contributor';\n    static NOT_CONSUMER: string = '!Consumer';\n    static NOT_COLLABORATOR: string = '!Collaborator';\n    static NOT_MANAGER: string = '!Manager';\n    static NOT_EDITOR: string = '!Editor';\n    static NOT_COORDINATOR: string = '!Coordinator';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class AllowableOperationsEnum extends String {\n    static DELETE: string = 'delete';\n    static UPDATE: string = 'update';\n    static CREATE: string = 'create';\n    static COPY: string = 'copy';\n    static LOCK: string = 'lock';\n    static UPDATEPERMISSIONS: string = 'updatePermissions';\n    static NOT_DELETE: string = '!delete';\n    static NOT_UPDATE: string = '!update';\n    static NOT_CREATE: string = '!create';\n    static NOT_UPDATEPERMISSIONS: string = '!updatePermissions';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadService {\n    private saveData: Function;\n\n    constructor() {\n        this.saveData = (function() {\n            const a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n\n            return function(fileData, format, fileName) {\n                let blob = null;\n\n                if (format === 'blob' || format === 'data') {\n                    blob = new Blob([fileData], { type: 'octet/stream' });\n                }\n\n                if (format === 'object' || format === 'json') {\n                    const json = JSON.stringify(fileData);\n                    blob = new Blob([json], { type: 'octet/stream' });\n                }\n\n                if (blob) {\n                    if (\n                        typeof window.navigator !== 'undefined' &&\n                        window.navigator.msSaveOrOpenBlob\n                    ) {\n                        navigator.msSaveOrOpenBlob(blob, fileName);\n                    } else {\n                        const url = window.URL.createObjectURL(blob);\n                        a.href = url;\n                        a.download = fileName;\n                        a.click();\n\n                        window.URL.revokeObjectURL(url);\n                    }\n                }\n            };\n        })();\n    }\n\n    /**\n     * Invokes content download for a Blob with a file name.\n     * @param blob Content to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.saveData(blob, 'blob', fileName);\n    }\n\n    /**\n     * Invokes content download for a data array with a file name.\n     * @param data Data to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadData(data: any, fileName: string): void {\n        this.saveData(data, 'data', fileName);\n    }\n\n    /**\n     * Invokes content download for a JSON object with a file name.\n     * @param json JSON object to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadJSON(json: any, fileName: string): void {\n        this.saveData(json, 'json', fileName);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentApi, MinimalNode, Node, NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\nimport { catchError } from 'rxjs/operators';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AllowableOperationsEnum } from '../models/allowable-operations.enum';\nimport { DownloadService } from './download.service';\nimport { ThumbnailService } from './thumbnail.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentService {\n\n    folderCreated: Subject<FolderCreatedEvent> = new Subject<FolderCreatedEvent>();\n    folderCreate: Subject<MinimalNode> = new Subject<MinimalNode>();\n    folderEdit: Subject<MinimalNode> = new Subject<MinimalNode>();\n\n    constructor(public authService: AuthenticationService,\n                public apiService: AlfrescoApiService,\n                private logService: LogService,\n                private sanitizer: DomSanitizer,\n                private downloadService: DownloadService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    /**\n     * @deprecated in 3.2.0, use DownloadService instead.\n     * Invokes content download for a Blob with a file name.\n     * @param blob Content to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.downloadService.downloadBlob(blob, fileName);\n    }\n\n    /**\n     * @deprecated in 3.2.0, use DownloadService instead.\n     * Invokes content download for a data array with a file name.\n     * @param data Data to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadData(data: any, fileName: string): void {\n        this.downloadService.downloadData(data, fileName);\n    }\n\n    /**\n     * @deprecated in 3.2.0, use DownloadService instead.\n     * Invokes content download for a JSON object with a file name.\n     * @param json JSON object to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadJSON(json: any, fileName: string): void {\n        this.downloadService.downloadJSON(json, fileName);\n    }\n\n    /**\n     * Creates a trusted object URL from the Blob.\n     * WARNING: calling this method with untrusted user data exposes your application to XSS security risks!\n     * @param  blob Data to wrap into object URL\n     * @returns URL string\n     */\n    createTrustedUrl(blob: Blob): string {\n        const url = window.URL.createObjectURL(blob);\n        return <string> this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    private get contentApi(): ContentApi {\n        return this.apiService.getInstance().content;\n    }\n\n    /**\n     * @deprecated in 3.2.0, use ThumbnailService instead.\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node or Node ID to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getDocumentThumbnailUrl(node: NodeEntry | string, attachment?: boolean, ticket?: string): string {\n        return this.thumbnailService.getDocumentThumbnailUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param node Node or Node ID to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string or `null`\n     */\n    getContentUrl(node: NodeEntry | string, attachment?: boolean, ticket?: string): string {\n        if (node) {\n            let nodeId: string;\n\n            if (typeof node === 'string') {\n                nodeId = node;\n            } else if (node.entry) {\n                nodeId = node.entry.id;\n            }\n\n            return this.contentApi.getContentUrl(nodeId, attachment, ticket);\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets content for the given node.\n     * @param nodeId ID of the target node\n     * @returns Content data\n     */\n    getNodeContent(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().core.nodesApi.getFileContent(nodeId))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @param opts Options supported by JS-API\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, opts?: any): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts));\n    }\n\n    /**\n     * Checks if the user has permission on that node\n     * @param node Node to check permissions\n     * @param permission Required permission type\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasPermissions(node: Node, permission: PermissionsEnum | string): boolean {\n        let hasPermissions = false;\n\n        if (node && node.permissions && node.permissions.locallySet) {\n            if (permission && permission.startsWith('!')) {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission.replace('!', '')) ? false : true;\n            } else {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission) ? true : false;\n            }\n\n        } else {\n\n            if (permission === PermissionsEnum.CONSUMER) {\n                hasPermissions = true;\n            } else if (permission === PermissionsEnum.NOT_CONSUMER) {\n                hasPermissions = false;\n            } else if (permission && permission.startsWith('!')) {\n                hasPermissions = true;\n            }\n        }\n\n        return hasPermissions;\n    }\n\n    /**\n     * Checks if the user has permissions on that node\n     * @param node Node to check allowableOperations\n     * @param allowableOperation Create, delete, update, updatePermissions, !create, !delete, !update, !updatePermissions\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasAllowableOperations(node: Node, allowableOperation: AllowableOperationsEnum | string): boolean {\n        let hasAllowableOperations = false;\n\n        if (node && node.allowableOperations) {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation.replace('!', '')) ? false : true;\n            } else {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation) ? true : false;\n            }\n\n        } else {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = true;\n            }\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.COPY) {\n            hasAllowableOperations = true;\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.LOCK) {\n            hasAllowableOperations = node.isFile;\n\n            if (node.isLocked && node.allowableOperations) {\n                hasAllowableOperations = !!~node.allowableOperations.indexOf('updatePermissions');\n            }\n        }\n\n        return hasAllowableOperations;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, InjectionToken } from '@angular/core';\n\nexport const EXTENDIBLE_COMPONENT = new InjectionToken<Component>('extendible.component');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ChangeDetectorRef, Directive, ElementRef, Host, Inject, Input, OnChanges, Optional, Renderer2,  SimpleChanges } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ContentService } from './../services/content.service';\nimport { EXTENDIBLE_COMPONENT } from './../interface/injection.tokens';\n\nexport interface NodeAllowableOperationSubject {\n    disabled: boolean;\n}\n\n@Directive({\n    selector: '[adf-check-allowable-operation]'\n})\nexport class CheckAllowableOperationDirective implements OnChanges {\n\n    /** Node permission to check (create, delete, update, updatePermissions,\n     * !create, !delete, !update, !updatePermissions).\n     */\n    @Input('adf-check-allowable-operation')\n    permission: string  = null;\n\n    /** Nodes to check permission for. */\n    @Input('adf-nodes')\n    nodes: NodeEntry[] = [];\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private contentService: ContentService,\n                private changeDetector: ChangeDetectorRef,\n\n                @Host()\n                @Optional()\n                @Inject(EXTENDIBLE_COMPONENT) private parentComponent?: NodeAllowableOperationSubject) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && !changes.nodes.firstChange) {\n            this.updateElement();\n        }\n    }\n\n    /**\n     * Updates disabled state for the decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    updateElement(): boolean {\n        const enable = this.hasAllowableOperations(this.nodes, this.permission);\n\n        if (enable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n\n        return enable;\n    }\n\n    private enable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = false;\n            this.changeDetector.detectChanges();\n        } else {\n            this.enableElement();\n        }\n    }\n\n    private disable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = true;\n            this.changeDetector.detectChanges();\n        } else {\n            this.disableElement();\n        }\n    }\n\n    /**\n     * Enables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    enableElement(): void {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n    }\n\n    /**\n     * Disables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    disableElement(): void {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n    }\n\n    /**\n     * Checks whether all nodes have a particular permission\n     *\n     * @param  nodes Node collection to check\n     * @param  permission Permission to check for each node\n     * @memberof CheckAllowableOperationDirective\n     */\n    hasAllowableOperations(nodes: NodeEntry[], permission: string): boolean {\n        if (nodes && nodes.length > 0) {\n            return nodes.every((node) => this.contentService.hasAllowableOperations(node.entry, permission));\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { DeletedNodeEntry, DeletedNodesPaging, PathInfoEntity } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\n\nexport class RestoreMessageModel {\n    message: string;\n    path: PathInfoEntity;\n    action: string;\n}\n\n@Directive({\n    selector: '[adf-restore]'\n})\nexport class NodeRestoreDirective {\n    private restoreProcessStatus;\n\n    /** Array of deleted nodes to restore. */\n    @Input('adf-restore')\n    selection: DeletedNodeEntry[];\n\n    /** Emitted when restoration is complete. */\n    @Output()\n    restore: EventEmitter<RestoreMessageModel> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.recover(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService) {\n        this.restoreProcessStatus = this.processStatus();\n    }\n\n    private recover(selection: any) {\n        if (!selection.length) {\n            return;\n        }\n\n        const nodesWithPath = this.getNodesWithPath(selection);\n\n        if (selection.length && nodesWithPath.length) {\n\n            this.restoreNodesBatch(nodesWithPath).pipe(\n                tap((restoredNodes) => {\n                    const status = this.processStatus(restoredNodes);\n\n                    this.restoreProcessStatus.fail.push(...status.fail);\n                    this.restoreProcessStatus.success.push(...status.success);\n                }),\n                mergeMap(() => this.getDeletedNodes())\n            )\n            .subscribe((deletedNodesList) => {\n                const { entries: nodeList } = deletedNodesList.list;\n                const { fail: restoreErrorNodes } = this.restoreProcessStatus;\n                const selectedNodes = this.diff(restoreErrorNodes, selection, false);\n                const remainingNodes = this.diff(selectedNodes, nodeList);\n\n                if (!remainingNodes.length) {\n                    this.notification();\n                } else {\n                    this.recover(remainingNodes);\n                }\n            });\n        } else {\n            this.restoreProcessStatus.fail.push(...selection);\n            this.notification();\n            return;\n        }\n    }\n\n    private restoreNodesBatch(batch: DeletedNodeEntry[]): Observable<DeletedNodeEntry[]> {\n        return forkJoin(batch.map((node) => this.restoreNode(node)));\n    }\n\n    private getNodesWithPath(selection): DeletedNodeEntry[] {\n        return selection.filter((node) => node.entry.path);\n    }\n\n    private getDeletedNodes(): Observable<DeletedNodesPaging> {\n        const promise = this.alfrescoApiService.getInstance()\n            .core.nodesApi.getDeletedNodes({ include: ['path'] });\n\n        return from(promise);\n    }\n\n    private restoreNode(node): Observable<any> {\n        const { entry } = node;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.restoreNode(entry.id);\n\n        return from(promise).pipe(\n            map(() => ({\n                status: 1,\n                entry\n            })),\n            catchError((error) => {\n                const { statusCode } = (JSON.parse(error.message)).error;\n\n                return of({\n                    status: 0,\n                    statusCode,\n                    entry\n                });\n            })\n        );\n    }\n\n    private diff(selection, list, fromList = true): any {\n        const ids = selection.map((item) => item.entry.id);\n\n        return list.filter((item) => {\n            if (fromList) {\n                return ids.includes(item.entry.id) ? item : null;\n            } else {\n                return !ids.includes(item.entry.id) ? item : null;\n            }\n        });\n    }\n\n    private processStatus(data = []): any {\n        const status = {\n            fail: [],\n            success: [],\n            get someFailed() {\n                return !!(this.fail.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.fail.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            },\n            reset() {\n                this.fail = [];\n                this.success = [];\n            }\n        };\n\n        return data.reduce(\n            (acc, node) => {\n                if (node.status) {\n                    acc.success.push(node);\n                } else {\n                    acc.fail.push(node);\n                }\n\n                return acc;\n            },\n            status\n        );\n    }\n\n    private getRestoreMessage(): string {\n        const { restoreProcessStatus: status } = this;\n\n        if (status.someFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.PARTIAL_PLURAL',\n                {\n                    number: status.fail.length\n                }\n            );\n        }\n\n        if (status.oneFailed && status.fail[0].statusCode) {\n            if (status.fail[0].statusCode === 409) {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.NODE_EXISTS',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            } else {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.GENERIC',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            }\n        }\n\n        if (status.oneFailed && !status.fail[0].statusCode) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.LOCATION_MISSING',\n                {\n                    name: status.fail[0].entry.name\n                }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant('CORE.RESTORE_NODE.PLURAL');\n        }\n\n        if (status.allSucceeded && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.SINGULAR',\n                {\n                    name: status.success[0].entry.name\n                }\n            );\n        }\n    }\n\n    private notification(): void {\n        const status = Object.assign({}, this.restoreProcessStatus);\n\n        const message = this.getRestoreMessage();\n        this.reset();\n\n        const action = (status.oneSucceeded && !status.someFailed) ? this.translation.instant('CORE.RESTORE_NODE.VIEW') : '';\n\n        let path;\n        if (status.success && status.success.length > 0) {\n            path = status.success[0].entry.path;\n        }\n        this.restore.emit({\n            message: message,\n            action: action,\n            path: path\n        });\n    }\n\n    private reset(): void {\n        this.restoreProcessStatus.reset();\n        this.selection = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FileInfo, FileUtils } from '../utils/file-utils';\n\n@Directive({\n    selector: '[adf-upload]'\n})\nexport class UploadDirective implements OnInit, OnDestroy {\n\n    /** Enables/disables uploading. */\n    @Input('adf-upload')\n    enabled: boolean = true;\n\n    /** Data to upload. */\n    @Input('adf-upload-data')\n    data: any;\n\n    /** Upload mode. Can be \"drop\" (receives dropped files) or \"click\"\n     * (clicking opens a file dialog). Both modes can be active at once.\n     */\n    @Input()\n    mode: string[] = ['drop']; // click|drop\n\n    /** Toggles multiple file uploads. */\n    @Input()\n    multiple: boolean;\n\n    /** (Click mode only) MIME type filter for files to accept. */\n    @Input()\n    accept: string;\n\n    /** (Click mode only) Toggles uploading of directories. */\n    @Input()\n    directory: boolean;\n\n    isDragging: boolean = false;\n\n    private cssClassName: string = 'adf-upload__dragging';\n    private upload: HTMLInputElement;\n    private element: HTMLElement;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        if (this.isClickMode() && this.renderer) {\n            const inputUpload = this.renderer.createElement('input');\n            this.upload = this.el.nativeElement.parentElement.appendChild(inputUpload);\n\n            this.upload.type = 'file';\n            this.upload.style.display = 'none';\n            this.upload.addEventListener('change', (event) => this.onSelectFiles(event));\n\n            if (this.multiple) {\n                this.upload.setAttribute('multiple', '');\n            }\n\n            if (this.accept) {\n                this.upload.setAttribute('accept', this.accept);\n            }\n\n            if (this.directory) {\n                this.upload.setAttribute('webkitdirectory', '');\n            }\n        }\n\n        if (this.isDropMode()) {\n            this.ngZone.runOutsideAngular(() => {\n                this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n                this.element.addEventListener('dragover', this.onDragOver.bind(this));\n                this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n                this.element.addEventListener('drop', this.onDrop.bind(this));\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isClickMode() && this.upload) {\n            event.preventDefault();\n            this.upload.click();\n        }\n    }\n\n    onDragEnter(event: Event) {\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n    }\n\n    onDragOver(event: Event) {\n        event.preventDefault();\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n        return false;\n    }\n\n    onDragLeave(event) {\n        if (this.isDropMode()) {\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n        }\n    }\n\n    onDrop(event: Event) {\n        if (this.isDropMode()) {\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n\n            const dataTransfer = this.getDataTransfer(event);\n            if (dataTransfer) {\n                this.getFilesDropped(dataTransfer).then((files) => {\n                    this.onUploadFiles(files);\n                });\n\n            }\n        }\n        return false;\n    }\n\n    onUploadFiles(files: FileInfo[]) {\n        if (this.enabled && files.length > 0) {\n            const customEvent = new CustomEvent('upload-files', {\n                detail: {\n                    sender: this,\n                    data: this.data,\n                    files: files\n                },\n                bubbles: true\n            });\n\n            this.el.nativeElement.dispatchEvent(customEvent);\n        }\n    }\n\n    protected hasMode(mode: string): boolean {\n        return this.enabled && mode && this.mode && this.mode.indexOf(mode) > -1;\n    }\n\n    protected isDropMode(): boolean {\n        return this.hasMode('drop');\n    }\n\n    protected isClickMode(): boolean {\n        return this.hasMode('click');\n    }\n\n    getDataTransfer(event: Event | any): DataTransfer {\n        if (event && event.dataTransfer) {\n            return event.dataTransfer;\n        }\n        if (event && event.originalEvent && event.originalEvent.dataTransfer) {\n            return event.originalEvent.dataTransfer;\n        }\n        return null;\n    }\n\n    /**\n     * Extract files from the DataTransfer object used to hold the data that is being dragged during a drag and drop operation.\n     * @param dataTransfer DataTransfer object\n     */\n    getFilesDropped(dataTransfer: DataTransfer): Promise<FileInfo[]> {\n        return new Promise((resolve) => {\n            const iterations = [];\n\n            if (dataTransfer) {\n                const items = dataTransfer.items;\n                if (items) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                            const item = items[i].webkitGetAsEntry();\n                            if (item) {\n                                if (item.isFile) {\n                                    iterations.push(Promise.resolve(<FileInfo> {\n                                        entry: item,\n                                        file: items[i].getAsFile(),\n                                        relativeFolder: '/'\n                                    }));\n                                } else if (item.isDirectory) {\n                                    iterations.push(new Promise((resolveFolder) => {\n                                        FileUtils.flatten(item).then((files) => resolveFolder(files));\n                                    }));\n                                }\n                            }\n                        } else {\n                            iterations.push(Promise.resolve(<FileInfo> {\n                                entry: null,\n                                file: items[i].getAsFile(),\n                                relativeFolder: '/'\n                            }));\n                        }\n                    }\n                } else {\n                    // safari or FF\n                    const files = FileUtils\n                        .toFileArray(dataTransfer.files)\n                        .map((file) => <FileInfo> {\n                            entry: null,\n                            file: file,\n                            relativeFolder: '/'\n                        });\n\n                    iterations.push(Promise.resolve(files));\n                }\n            }\n\n            Promise.all(iterations).then((result) => {\n                resolve(result.reduce((a, b) => a.concat(b), []));\n            });\n        });\n    }\n\n    /**\n     * Invoked when user selects files or folders by means of File Dialog\n     * @param event DOM event\n     */\n    onSelectFiles(event: any): void {\n        if (this.isClickMode()) {\n            const input = (<HTMLInputElement> event.currentTarget);\n            const files = FileUtils.toFileArray(input.files);\n            this.onUploadFiles(files.map((file) => <FileInfo> {\n                entry: null,\n                file: file,\n                relativeFolder: '/'\n            }));\n            event.target.value = '';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, DownloadEntry, DownloadBodyCreate } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { LogService } from './log.service';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadZipService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates a new download.\n     * @param payload Object containing the node IDs of the items to add to the ZIP file\n     * @returns Status object for the download\n     */\n    createDownload(payload: DownloadBodyCreate): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.createDownload(payload)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param nodeId Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @returns URL string\n     */\n    getContentUrl(nodeId: string, attachment?: boolean): string {\n        return this.apiService.getInstance().content.getContentUrl(nodeId, attachment);\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @returns Details of the node\n     */\n    getNode(nodeId: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().core.nodesApi.getNode(nodeId));\n    }\n\n    /**\n     * Gets status information for a download node.\n     * @param downloadId ID of the download node\n     * @returns Status object for the download\n     */\n    getDownload(downloadId: string): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.getDownload(downloadId));\n    }\n\n    /**\n     * Cancels a download.\n     * @param downloadId ID of the target download node\n     */\n    cancelDownload(downloadId: string) {\n        this.apiService.getInstance().core.downloadsApi.cancelDownload(downloadId);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, NodeEntry } from '@alfresco/js-api';\nimport { LogService } from '../services/log.service';\nimport { DownloadZipService } from '../services/download-zip.service';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    templateUrl: './download-zip.dialog.html',\n    styleUrls: ['./download-zip.dialog.scss'],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    cancelled = false;\n    downloadId: string;\n\n    constructor(private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA)\n                public data: any,\n                private logService: LogService,\n                private downloadZipService: DownloadZipService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.downloadZipService.cancelDownload(this.downloadId);\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            this.downloadZipService.createDownload({ nodeIds }).subscribe((data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.downloadZipService.getContentUrl(data.entry.id, true);\n\n                    this.downloadZipService.getNode(data.entry.id).subscribe((downloadNode: NodeEntry) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.downloadId = data.entry.id;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.downloadZipService.getDownload(downloadId).subscribe((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\nimport { NodeEntry } from '@alfresco/js-api';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-node-download], [adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: NodeEntry | NodeEntry[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: NodeEntry | Array<NodeEntry>) {\n\n        if (!this.isSelectionValid(selection)) {\n            return;\n        }\n        if (selection instanceof Array) {\n            if (selection.length === 1) {\n                this.downloadNode(selection[0]);\n            } else {\n                this.downloadZip(selection);\n            }\n        } else {\n            this.downloadNode(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: NodeEntry) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private isSelectionValid(selection: NodeEntry | Array<NodeEntry>) {\n        return selection || (selection instanceof Array && selection.length > 0);\n    }\n\n    private downloadFile(node: NodeEntry) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n            // nodeId for Shared node\n            const id = (<any> node.entry).nodeId || node.entry.id;\n\n            const url = contentApi.getContentUrl(id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<NodeEntry>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HighlightDirective } from './highlight.directive';\nimport { LogoutDirective } from './logout.directive';\nimport { NodeDeleteDirective } from './node-delete.directive';\nimport { NodeFavoriteDirective } from './node-favorite.directive';\nimport { CheckAllowableOperationDirective } from './check-allowable-operation.directive';\nimport { NodeRestoreDirective } from './node-restore.directive';\nimport { UploadDirective } from './upload.directive';\nimport { NodeDownloadDirective } from './node-download.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ],\n    exports: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ]\n})\nexport class DirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-datatable-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultCell\"\n                adf-clipboard=\"CLIPBOARD.CLICK_TO_COPY\"\n                [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\"\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n                >{{ value$ | async }}</span>\n        </ng-container>\n        <ng-template #defaultCell>\n            <span\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n            >{{ value$ | async }}</span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class DataTableCellComponent implements OnInit, OnDestroy {\n    /** Data table adapter instance. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Data that defines the column. */\n    @Input()\n    column: DataColumn;\n\n    /** Data that defines the row. */\n    @Input()\n    row: DataRow;\n\n    value$ = new BehaviorSubject<any>('');\n\n    /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n    @Input()\n    copyContent: boolean;\n\n    /** Text for the cell's tooltip. */\n    @Input()\n    tooltip: string;\n\n    protected onDestroy$ = new Subject<boolean>();\n\n    constructor(protected alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n        this.alfrescoApiService.nodeUpdated\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(node => {\n                if (this.row) {\n                    if (this.row['node'].entry.id === node.id) {\n                        this.row['node'].entry = node;\n                        this.row['cache'][this.column.key] = this.column.key.split('.').reduce((source, key) => source[key], node);\n                        this.updateValue();\n                    }\n                }\n            });\n    }\n\n    protected updateValue() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const value = this.data.getValue(this.row, this.column);\n\n            this.value$.next(value);\n\n            if (!this.tooltip) {\n                this.tooltip = value;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'data-column',\n    template: ''\n})\nexport class DataColumnComponent implements OnInit {\n\n    /** Data source key. Can be either a column/property key like `title`\n     *  or a property path like `createdBy.name`.\n     */\n    @Input()\n    key: string;\n\n    /** Value type for the column. Possible settings are 'text', 'image',\n     * 'date', 'fileSize', 'location', and 'json'.\n     */\n    @Input()\n    type: string = 'text';\n\n    /** Value format (if supported by the parent component), for example format of the date. */\n    @Input()\n    format: string;\n\n    /** Toggles ability to sort by this column, for example by clicking the column header. */\n    @Input()\n    sortable: boolean = true;\n\n    /** Display title of the column, typically used for column headers. You can use the\n     * i18n resource key to get it translated automatically.\n     */\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /** Custom tooltip formatter function. */\n    @Input()\n    formatTooltip: Function;\n\n    /** Title to be used for screen readers. */\n    @Input('sr-title')\n    srTitle: string;\n\n    /** Additional CSS class to be applied to column (header and cells). */\n    @Input('class')\n    cssClass: string;\n\n     /** Enables/disables a Clipboard directive to allow copying of cell contents. */\n    @Input()\n    copyContent: boolean;\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChildren, QueryList } from '@angular/core';\nimport { DataColumnComponent } from './data-column.component';\n\n@Component({\n    selector: 'data-columns',\n    template: ''\n})\nexport class DataColumnListComponent {\n\n    @ContentChildren(DataColumnComponent) columns: QueryList<DataColumnComponent>;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Base cancellable event implementation */\nexport class BaseEvent<T> {\n\n    private isDefaultPrevented: boolean = false;\n\n    value: T;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from './base.event';\n\n/** Base container for any event which takes place in the DOM  */\nexport class BaseUIEvent<T> extends BaseEvent<T> {\n\n    /** Original DOM event */\n    event: Event;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AssocChildBody, AssociationBody } from '@alfresco/js-api';\n\nexport interface FileUploadProgress {\n    loaded: number;\n    total: number;\n    percent: number;\n}\n\nexport class FileUploadOptions {\n    comment?: string;\n    newVersion?: boolean;\n    majorVersion?: boolean;\n    parentId?: string;\n    path?: string;\n    nodeType?: string;\n    properties?: any;\n    association?: any;\n    secondaryChildren?: AssocChildBody[];\n    targets?: AssociationBody[];\n}\n\nexport enum FileUploadStatus {\n    Pending = 0,\n    Complete = 1,\n    Starting = 2,\n    Progress = 3,\n    Cancelled = 4,\n    Aborted = 5,\n    Error = 6,\n    Deleted = 7\n}\n\nexport class FileModel {\n    readonly name: string;\n    readonly size: number;\n    readonly file: File;\n\n    id: string;\n    status: FileUploadStatus = FileUploadStatus.Pending;\n    errorCode: number;\n    progress: FileUploadProgress;\n    options: FileUploadOptions;\n    data: any;\n\n    constructor(file: File, options?: FileUploadOptions, id?: string) {\n        this.file = file;\n        this.id = id;\n        this.name = file.name;\n        this.size = file.size;\n        this.data = null;\n        this.errorCode = null;\n\n        this.progress = {\n            loaded: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.options = Object.assign({}, {\n            newVersion: false\n        }, options);\n    }\n\n    get extension(): string {\n        return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '../models/file.model';\n\nexport class FileUploadEvent {\n\n    constructor(\n        public readonly file: FileModel,\n        public readonly status: FileUploadStatus = FileUploadStatus.Pending,\n        public readonly error: any = null) {\n    }\n\n}\n\nexport class FileUploadCompleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0, public data?: any, public totalAborted: number = 0) {\n        super(file, FileUploadStatus.Complete);\n    }\n\n}\n\nexport class FileUploadDeleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0) {\n        super(file, FileUploadStatus.Deleted);\n    }\n\n}\n\nexport class FileUploadErrorEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public error: any, public totalError: number = 0) {\n        super(file, FileUploadStatus.Error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseUIEvent } from '../../events';\nimport { DataRow } from './data-row.model';\n\nexport class DataRowEvent extends BaseUIEvent<DataRow> {\n\n    sender: any;\n\n    constructor(value: DataRow, domEvent: Event, sender?: any) {\n        super();\n        this.value = value;\n        this.event = domEvent;\n        this.sender = sender;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataCellEventModel {\n\n    readonly row: DataRow;\n    readonly col: DataColumn;\n    actions: any[];\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        this.row = row;\n        this.col = col;\n        this.actions = actions || [];\n    }\n\n}\n\nexport class DataCellEvent extends BaseEvent<DataCellEventModel> {\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        super();\n        this.value = new DataCellEventModel(row, col, actions);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataRowActionModel {\n\n    row: DataRow;\n    action: any;\n\n    constructor(row: DataRow, action: any) {\n        this.row = row;\n        this.action = action;\n    }\n}\n\nexport class DataRowActionEvent extends BaseEvent<DataRowActionModel> {\n\n    // backwards compatibility with 1.2.0 and earlier\n    get args(): DataRowActionModel {\n        return this.value;\n    }\n\n    constructor(row: DataRow, action: any) {\n        super();\n        this.value = new DataRowActionModel(row, action);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, DoCheck, ElementRef, EventEmitter, Input,\n    IterableDiffers, OnChanges, Output, SimpleChange, SimpleChanges, TemplateRef, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { Subscription, Observable, Observer } from 'rxjs';\nimport { DataColumnListComponent } from '../../../data-column/data-column-list.component';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRowEvent } from '../../data/data-row-event.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataSorting } from '../../data/data-sorting.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\nimport { ObjectDataRow } from '../../data/object-datarow.model';\nimport { ObjectDataTableAdapter } from '../../data/object-datatable-adapter';\nimport { DataCellEvent } from './data-cell.event';\nimport { DataRowActionEvent } from './data-row-action.event';\nimport { share, buffer, map, filter, debounceTime } from 'rxjs/operators';\n\nexport enum DisplayMode {\n    List = 'list',\n    Gallery = 'gallery'\n}\n\n@Component({\n    selector: 'adf-datatable',\n    styleUrls: ['./datatable.component.scss'],\n    templateUrl: './datatable.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable' }\n})\nexport class DataTableComponent implements AfterContentInit, OnChanges, DoCheck, OnDestroy {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Data source for the table */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Selects the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** The rows that the datatable will show. */\n    @Input()\n    rows: any[] = [];\n\n    /** Define the sort order of the datatable. Possible values are :\n     * [`created`, `desc`], [`created`, `asc`], [`due`, `desc`], [`due`, `asc`]\n     */\n    @Input()\n    sorting: any[] = [];\n\n    /** The columns that the datatable will show. */\n    @Input()\n    columns: any[] = [];\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row. */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles the data actions column. */\n    @Input()\n    actions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Fallback image for rows where the thumbnail is missing. */\n    @Input()\n    fallbackThumbnail: string;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    contextMenu: boolean = false;\n\n    /** Toggles file drop support for rows (see\n     * [Upload directive](upload.directive.md) for further details).\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** The inline style to apply to every row. See\n     * [NgStyle](https://angular.io/docs/ts/latest/api/common/index/NgStyle-directive.html)\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row. */\n    @Input()\n    rowStyleClass: string = '';\n\n    /** Toggles the header. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Emitted when the user clicks a row. */\n    @Output()\n    rowClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted when the user double-clicks a row. */\n    @Output()\n    rowDblClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Flag that indicates if the datatable is in loading state and needs to show the\n     * loading template (see the docs to learn how to configure a loading template).\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Flag that indicates if the datatable should show the \"no permission\" template. */\n    @Input()\n    noPermission: boolean = false;\n\n    /**\n     * Should the items for the row actions menu be cached for reuse after they are loaded\n     * the first time?\n     */\n    @Input()\n    rowMenuCacheEnabled = true;\n\n    noContentTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    loadingTemplate: TemplateRef<any>;\n\n    isSelectAllChecked: boolean = false;\n    selection = new Array<DataRow>();\n\n    /** This array of fake rows fix the flex layout for the gallery view */\n    fakeRows = [];\n\n    private clickObserver: Observer<DataRowEvent>;\n    private click$: Observable<DataRowEvent>;\n\n    private differ: any;\n    private rowMenuCache: object = {};\n\n    private subscriptions: Subscription[] = [];\n    private singleClickStreamSub: Subscription;\n    private multiClickStreamSub: Subscription;\n    private dataRowsChanged: Subscription;\n\n    constructor(private elementRef: ElementRef,\n                differs: IterableDiffers) {\n        if (differs) {\n            this.differ = differs.find([]).create(null);\n        }\n        this.click$ = new Observable<DataRowEvent>((observer) => this.clickObserver = observer)\n            .pipe(share());\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.datatableLayoutFix();\n        this.setTableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.initAndSubscribeClickStream();\n        if (this.isPropertyChanged(changes['data'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.data = changes['data'].currentValue;\n                this.resetSelection();\n            }\n            return;\n        }\n\n        if (this.isPropertyChanged(changes['rows'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.setTableRows(changes['rows'].currentValue);\n            }\n            return;\n        }\n\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\n            this.resetSelection();\n            this.emitRowSelectionEvent('row-unselect', null);\n        }\n\n        if (this.isPropertyChanged(changes['sorting'])) {\n            this.setTableSorting(changes['sorting'].currentValue);\n        }\n\n        if (this.isPropertyChanged(changes['display'])) {\n            this.datatableLayoutFix();\n        }\n    }\n\n    ngDoCheck() {\n        const changes = this.differ.diff(this.rows);\n        if (changes) {\n            this.setTableRows(this.rows);\n        }\n    }\n\n    isPropertyChanged(property: SimpleChange): boolean {\n        return property && property.currentValue ? true : false;\n    }\n\n    convertToRowsData(rows: any []): ObjectDataRow[] {\n        return rows.map((row) => new ObjectDataRow(row, row.isSelected));\n    }\n\n    convertToDataSorting(sorting: any[]): DataSorting {\n        if (sorting && sorting.length > 0) {\n            return new DataSorting(sorting[0], sorting[1]);\n        }\n    }\n\n    private initAndSubscribeClickStream() {\n        this.unsubscribeClickStream();\n        const singleClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length === 1)\n            );\n\n        this.singleClickStreamSub = singleClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.handleRowSelection(event.value, <MouseEvent | KeyboardEvent> event.event);\n            this.rowClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-click', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n\n        const multiClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length >= 2)\n            );\n\n        this.multiClickStreamSub = multiClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.rowDblClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-dblclick', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n    }\n\n    private unsubscribeClickStream() {\n        if (this.singleClickStreamSub) {\n            this.singleClickStreamSub.unsubscribe();\n            this.singleClickStreamSub = null;\n        }\n        if (this.multiClickStreamSub) {\n            this.multiClickStreamSub.unsubscribe();\n            this.multiClickStreamSub = null;\n        }\n    }\n\n    private initTable() {\n        this.data = new ObjectDataTableAdapter(this.rows, this.columns);\n        this.setTableSorting(this.sorting);\n        this.resetSelection();\n        this.rowMenuCache = {};\n    }\n\n    isTableEmpty() {\n        return this.data === undefined || this.data === null;\n    }\n\n    private setTableRows(rows: any[]) {\n        if (this.data) {\n            this.resetSelection();\n            this.data.setRows(this.convertToRowsData(rows));\n        }\n    }\n\n    private setTableSchema() {\n        let schema = [];\n        if (!this.columns || this.columns.length === 0) {\n            schema = this.getSchemaFromHtml();\n        } else {\n            schema = this.columns.concat(this.getSchemaFromHtml());\n        }\n\n        this.columns = schema;\n\n        if (this.data && this.columns && this.columns.length > 0) {\n            this.data.setColumns(this.columns);\n        }\n    }\n\n    private setTableSorting(sorting) {\n        if (this.data) {\n            this.data.setSorting(this.convertToDataSorting(sorting));\n        }\n    }\n\n    public getSchemaFromHtml(): any {\n        let schema = [];\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n    onRowClick(row: DataRow, mouseEvent: MouseEvent) {\n        if (mouseEvent) {\n            mouseEvent.preventDefault();\n        }\n\n        if (row) {\n            const dataRowEvent = new DataRowEvent(row, mouseEvent, this);\n            this.clickObserver.next(dataRowEvent);\n        }\n    }\n\n    onEnterKeyPressed(row: DataRow, e: KeyboardEvent) {\n        if (row) {\n            this.handleRowSelection(row, e);\n        }\n    }\n\n    private handleRowSelection(row: DataRow, e: KeyboardEvent | MouseEvent) {\n        if (this.data) {\n            if (this.isSingleSelectionMode()) {\n                this.resetSelection();\n                this.selectRow(row, true);\n                this.emitRowSelectionEvent('row-select', row);\n            }\n\n            if (this.isMultiSelectionMode()) {\n                const modifier = e && (e.metaKey || e.ctrlKey);\n                let newValue: boolean;\n                if (this.selection.length === 1) {\n                    newValue = !row.isSelected;\n                } else {\n                    newValue = modifier ? !row.isSelected : true;\n                }\n                const domEventName = newValue ? 'row-select' : 'row-unselect';\n\n                if (!modifier) {\n                    this.resetSelection();\n                }\n                this.selectRow(row, newValue);\n                this.emitRowSelectionEvent(domEventName, row);\n            }\n        }\n    }\n\n    resetSelection(): void {\n        if (this.data) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                rows.forEach((r) => r.isSelected = false);\n            }\n            this.selection = [];\n        }\n        this.isSelectAllChecked = false;\n    }\n\n    onRowDblClick(row: DataRow, event?: Event) {\n        if (event) {\n            event.preventDefault();\n        }\n        const dataRowEvent = new DataRowEvent(row, event, this);\n        this.clickObserver.next(dataRowEvent);\n    }\n\n    onRowKeyUp(row: DataRow, e: KeyboardEvent) {\n        const event = new CustomEvent('row-keyup', {\n            detail: {\n                row: row,\n                keyboardEvent: e,\n                sender: this\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(event);\n\n        if (event.defaultPrevented) {\n            e.preventDefault();\n        } else {\n            if (e.key === 'Enter') {\n                this.onKeyboardNavigate(row, e);\n            }\n        }\n    }\n\n    private onKeyboardNavigate(row: DataRow, keyboardEvent: KeyboardEvent) {\n        if (keyboardEvent) {\n            keyboardEvent.preventDefault();\n        }\n\n        const event = new DataRowEvent(row, keyboardEvent, this);\n\n        this.rowDblClick.emit(event);\n        this.elementRef.nativeElement.dispatchEvent(\n            new CustomEvent('row-dblclick', {\n                detail: event,\n                bubbles: true\n            })\n        );\n    }\n\n    onColumnHeaderClick(column: DataColumn) {\n        if (column && column.sortable) {\n            const current = this.data.getSorting();\n            let newDirection = 'asc';\n            if (current && column.key === current.key) {\n                newDirection = current.direction === 'asc' ? 'desc' : 'asc';\n            }\n            this.data.setSorting(new DataSorting(column.key, newDirection));\n            this.emitSortingChangedEvent(column.key, newDirection);\n        }\n    }\n\n    onSelectAllClick(matCheckboxChange: MatCheckboxChange) {\n        this.isSelectAllChecked = matCheckboxChange.checked;\n\n        if (this.multiselect) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                for (let i = 0; i < rows.length; i++) {\n                    this.selectRow(rows[i], matCheckboxChange.checked);\n                }\n            }\n\n            const domEventName = matCheckboxChange.checked ? 'row-select' : 'row-unselect';\n            const row = this.selection.length > 0 ? this.selection[0] : null;\n\n            this.emitRowSelectionEvent(domEventName, row);\n        }\n    }\n\n    onCheckboxChange(row: DataRow, event: MatCheckboxChange) {\n        const newValue = event.checked;\n\n        this.selectRow(row, newValue);\n\n        const domEventName = newValue ? 'row-select' : 'row-unselect';\n        this.emitRowSelectionEvent(domEventName, row);\n    }\n\n    onImageLoadingError(event: Event, row: DataRow) {\n        if (event) {\n            const element = <any> event.target;\n\n            if (this.fallbackThumbnail) {\n                element.src = this.fallbackThumbnail;\n            } else {\n                element.src = row.imageErrorResolver(event);\n            }\n        }\n    }\n\n    isIconValue(row: DataRow, col: DataColumn): boolean {\n        if (row && col) {\n            const value = row.getValue(col.key);\n            return value && value.startsWith('material-icons://');\n        }\n        return false;\n    }\n\n    asIconValue(row: DataRow, col: DataColumn): string {\n        if (this.isIconValue(row, col)) {\n            const value = row.getValue(col.key) || '';\n            return value.replace('material-icons://', '');\n        }\n        return null;\n    }\n\n    iconAltTextKey(value: string): string {\n        return value ? 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '') : '';\n    }\n\n    isColumnSorted(col: DataColumn, direction: string): boolean {\n        if (col && direction) {\n            const sorting = this.data.getSorting();\n            return sorting && sorting.key === col.key && sorting.direction === direction;\n        }\n        return false;\n    }\n\n    getContextMenuActions(row: DataRow, col: DataColumn): any[] {\n        const event = new DataCellEvent(row, col, []);\n        this.showRowContextMenu.emit(event);\n        return event.value.actions;\n    }\n\n    getRowActions(row: DataRow, col?: DataColumn): any[] {\n        const id = row.getValue('id');\n\n        if (!this.rowMenuCache[id]) {\n            const event = new DataCellEvent(row, col, []);\n            this.showRowActionsMenu.emit(event);\n            if (!this.rowMenuCacheEnabled) {\n                return event.value.actions;\n            }\n            this.rowMenuCache[id] = event.value.actions;\n        }\n\n        return this.rowMenuCache[id];\n    }\n\n    onExecuteRowAction(row: DataRow, action: any) {\n        if (action.disabled || action.disabled) {\n            event.stopPropagation();\n        } else {\n            this.executeRowAction.emit(new DataRowActionEvent(row, action));\n        }\n    }\n\n    rowAllowsDrop(row: DataRow): boolean {\n        return row.isDropTarget === true;\n    }\n\n    hasSelectionMode(): boolean {\n        return this.isSingleSelectionMode() || this.isMultiSelectionMode();\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';\n    }\n\n    isMultiSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';\n    }\n\n    getRowStyle(row: DataRow): string {\n        row.cssClass = row.cssClass ? row.cssClass : '';\n        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';\n        return `${row.cssClass} ${this.rowStyleClass}`;\n    }\n\n    getSortingKey(): string {\n        if (this.data.getSorting()) {\n            return this.data.getSorting().key;\n        }\n    }\n\n    selectRow(row: DataRow, value: boolean) {\n        if (row) {\n            row.isSelected = value;\n            const idx = this.selection.indexOf(row);\n            if (value) {\n                if (idx < 0) {\n                    this.selection.push(row);\n                }\n            } else {\n                if (idx > -1) {\n                    this.selection.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    getCellTooltip(row: DataRow, col: DataColumn): string {\n        if (row && col && col.formatTooltip) {\n            const result: string = col.formatTooltip(row, col);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    getSortableColumns() {\n        return this.data.getColumns().filter((column) => {\n            return column.sortable === true;\n        });\n    }\n\n    isEmpty() {\n        return this.data.getRows().length === 0;\n    }\n\n    isHeaderVisible() {\n        return !this.loading && !this.isEmpty() && !this.noPermission;\n    }\n\n    isStickyHeaderEnabled() {\n        return this.stickyHeader && this.isHeaderVisible();\n    }\n\n    private emitRowSelectionEvent(name: string, row: DataRow) {\n        const domEvent = new CustomEvent(name, {\n            detail: {\n                row: row,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    private emitSortingChangedEvent(key: string, direction: string) {\n        const domEvent = new CustomEvent('sorting-changed', {\n            detail: {\n                key,\n                direction\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    ngOnDestroy() {\n        this.unsubscribeClickStream();\n\n        this.subscriptions.forEach((s) => s.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.dataRowsChanged) {\n            this.dataRowsChanged.unsubscribe();\n            this.dataRowsChanged = null;\n        }\n    }\n\n    datatableLayoutFix() {\n        const maxGalleryRows = 25;\n\n        if (this.display === 'gallery') {\n            for (let i = 0; i < maxGalleryRows; i++) {\n               this.fakeRows.push('');\n            }\n        } else {\n            this.fakeRows = [];\n        }\n    }\n\n    getNameColumnValue() {\n        return this.data.getColumns().find( (el: any) => {\n            return el.key.includes('name');\n        });\n    }\n\n    getAutomationValue(row: DataRow, col: DataColumn) {\n        const name = this.getNameColumnValue();\n        return name ? row.getValue(name.key) : '';\n    }\n}\n\nexport interface DataTableDropEvent {\n    detail: {\n        target: 'cell' | 'header';\n        event: Event;\n        column: DataColumn;\n        row?: DataRow\n    };\n\n    preventDefault(): void;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport {\n    UserPreferencesService,\n    UserPreferenceValues\n} from '../../../services/user-preferences.service';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\nimport { AppConfigService } from '../../../app-config/app-config.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-date-cell',\n\n    template: `\n        <ng-container>\n            <span\n                [attr.aria-label]=\"value$ | async | adfTimeAgo: currentLocale\"\n                title=\"{{ tooltip | adfLocalizedDate: 'medium' }}\"\n                class=\"adf-datatable-cell-value\"\n                *ngIf=\"format === 'timeAgo'; else standard_date\">\n                {{ value$ | async | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span\n                class=\"adf-datatable-cell-value\"\n                title=\"{{ tooltip | adfLocalizedDate: format }}\"\n                class=\"adf-datatable-cell-value\"\n                [attr.aria-label]=\"value$ | async | adfLocalizedDate: format\">\n                {{ value$ | async | adfLocalizedDate: format }}\n            </span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-date-cell adf-datatable-content-cell' }\n})\nexport class DateCellComponent extends DataTableCellComponent {\n\n    static DATE_FORMAT = 'medium';\n\n    currentLocale: string;\n    dateFormat: string;\n\n    get format(): string {\n        if (this.column) {\n            return this.column.format || this.dateFormat;\n        }\n        return this.dateFormat;\n    }\n\n    constructor(\n        userPreferenceService: UserPreferencesService,\n        alfrescoApiService: AlfrescoApiService,\n        appConfig: AppConfigService\n    ) {\n        super(alfrescoApiService);\n\n        this.dateFormat = appConfig.get('dateValues.defaultDateFormat', DateCellComponent.DATE_FORMAT);\n        if (userPreferenceService) {\n            userPreferenceService\n                .select(UserPreferenceValues.Locale)\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe(locale => this.currentLocale = locale);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-list',\n    styleUrls: ['./empty-list.component.scss'],\n    templateUrl: './empty-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptyListComponent {}\n\n@Directive({ selector: '[adf-empty-list-header]' }) export class EmptyListHeaderDirective {}\n@Directive({ selector: '[adf-empty-list-body]' }) export class EmptyListBodyDirective {}\n@Directive({ selector: '[adf-empty-list-footer]' }) export class EmptyListFooterDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-filesize-cell',\n    template: `\n        <ng-container>\n            <span\n                [title]=\"tooltip\"\n                [attr.aria-label]=\"value$ | async | adfFileSize\"\n                >{{ value$ | async | adfFileSize }}</span\n            >\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-filesize-cell' }\n})\nexport class FileSizeCellComponent extends DataTableCellComponent {\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { PathInfoEntity } from '@alfresco/js-api';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-location-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <a href=\"\" [title]=\"tooltip\" [routerLink]=\"link\">\n                {{ value$ | async }}\n            </a>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-location-cell adf-datatable-content-cell' }\n})\nexport class LocationCellComponent extends DataTableCellComponent implements OnInit {\n    @Input()\n    link: any[];\n\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n\n    /** @override */\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const path: PathInfoEntity = this.data.getValue(\n                this.row,\n                this.column\n            );\n\n            if (path && path.name && path.elements) {\n                this.value$.next(path.name.split('/').pop());\n\n                if (!this.tooltip) {\n                    this.tooltip = path.name;\n                }\n\n                const parent = path.elements[path.elements.length - 1];\n                this.link = [this.column.format, parent.id];\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-loading-content-template, loading-content-template'\n})\nexport class LoadingContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.loadingTemplate = this.template;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-content-template, no-content-template'\n})\nexport class NoContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noContentTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-permission-template, no-permission-template'\n})\nexport class NoPermissionTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noPermissionTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The empty-folder-content selector will be deprecated as it has been replace by\n * adf-custom-empty-content-template.\n */\n@Directive({\n    selector: 'adf-custom-empty-content-template, empty-folder-content'\n})\n\nexport class CustomEmptyContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n    selector: 'adf-custom-loading-content-template'\n})\nexport class CustomLoadingContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The no-permission-content selector will be deprecated as it has been replace by\n * adf-custom-no-permission-template.\n */\n@Directive({\n    selector: 'adf-custom-no-permission-template, no-permission-content'\n})\nexport class CustomNoPermissionTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-json-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultJsonTemplate\" class=\"adf-datatable-cell-value\">\n                <pre\n                    class=\"adf-datatable-json-cell\"\n                    [adf-clipboard]=\"'CLIPBOARD.CLICK_TO_COPY'\"\n                    [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-container>\n        <ng-template #defaultJsonTemplate>\n            <span class=\"adf-datatable-cell-value\">\n                <pre class=\"adf-datatable-json-cell\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-template>\n    `,\n    styleUrls: ['./json-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class JsonCellComponent extends DataTableCellComponent implements OnInit {\n\n     /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n     @Input()\n     copyContent: boolean;\n\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            this.value$.next(this.data.getValue(this.row, this.column));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MatSnackBarConfig } from '@angular/material';\nimport { TranslationService } from './translation.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Subject } from 'rxjs';\nimport { NotificationModel } from '../models/notification.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    DEFAULT_DURATION_MESSAGE: number = 5000;\n\n    messages: Subject<NotificationModel> = new Subject();\n\n    constructor(private snackBar: MatSnackBar,\n                private translationService: TranslationService,\n                private appConfigService: AppConfigService) {\n        this.DEFAULT_DURATION_MESSAGE = this.appConfigService.get<number>(AppConfigValues.NOTIFY_DURATION) || this.DEFAULT_DURATION_MESSAGE;\n\n    }\n\n    /**\n     * Opens a SnackBar notification to show a message.\n     * @param message The message (or resource key) to show.\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessage(message: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        this.messages.next({ message: translatedMessage, dateTime: new Date });\n\n        return this.snackBar.open(translatedMessage, null, config);\n    }\n\n    /**\n     * Opens a SnackBar notification with a message and a response button.\n     * @param message The message (or resource key) to show.\n     * @param action Caption for the response button\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessageAction(message: string, action: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        this.messages.next({ message: translatedMessage, dateTime: new Date });\n\n        return this.snackBar.open(translatedMessage, action, config);\n    }\n\n    /**\n     *  dismiss the notification snackbar\n     */\n    dismissSnackMessageAction() {\n        return this.snackBar.dismiss();\n    }\n\n    protected showMessage(message: string, panelClass: string, action?: string): MatSnackBarRef<any> {\n        message = this.translationService.instant(message);\n\n        this.messages.next({ message: message, dateTime: new Date });\n\n        return this.snackBar.open(message, action, {\n            duration: this.DEFAULT_DURATION_MESSAGE,\n            panelClass\n        });\n    }\n\n    /**\n     * Rase error message\n     * @param message Text message or translation key for the message.\n     * @param action Action name\n     */\n    showError(message: string, action?: string): MatSnackBarRef<any> {\n        return this.showMessage(message, 'adf-error-snackbar', action);\n    }\n\n    /**\n     * Rase info message\n     * @param message Text message or translation key for the message.\n     * @param action Action name\n     */\n    showInfo(message: string, action?: string): MatSnackBarRef<any> {\n        return this.showMessage(message, 'adf-info-snackbar', action);\n    }\n\n    /**\n     * Rase warning message\n     * @param message Text message or translation key for the message.\n     * @param action Action name\n     */\n    showWarning(message: string, action?: string): MatSnackBarRef<any> {\n        return this.showMessage(message, 'adf-warning-snackbar', action);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { LogService } from '../services/log.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable()\nexport class ClipboardService {\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private logService: LogService,\n        private notificationService: NotificationService) {}\n\n    /**\n     * Checks if the target element can have its text copied.\n     * @param target Target HTML element\n     * @returns True if the text can be copied, false otherwise\n     */\n    isTargetValid(target: HTMLInputElement | HTMLTextAreaElement) {\n        if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n            return !target.hasAttribute('disabled');\n        }\n        return false;\n    }\n\n    /**\n     * Copies text from an HTML element to the clipboard.\n     * @param target HTML element to be copied\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyToClipboard(target: HTMLInputElement | HTMLTextAreaElement, message?: string) {\n        if (this.isTargetValid(target)) {\n            try {\n                target.select();\n                target.setSelectionRange(0, target.value.length);\n                this.document.execCommand('copy');\n                this.notify(message);\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    /**\n     * Copies a text string to the clipboard.\n     * @param content Text to copy\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyContentToClipboard(content: string, message: string) {\n        try {\n            document.addEventListener('copy', (e: ClipboardEvent) => {\n                e.clipboardData.setData('text/plain', (content));\n                e.preventDefault();\n                document.removeEventListener('copy', null);\n              });\n            document.execCommand('copy');\n            this.notify(message);\n        } catch (error) {\n            this.logService.error(error);\n        }\n    }\n\n    private notify(message) {\n        if (message) {\n            this.notificationService.openSnackMessage(message);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, Component, ViewContainerRef, ComponentFactoryResolver, ViewEncapsulation, OnInit } from '@angular/core';\nimport { ClipboardService } from './clipboard.service';\n\n@Directive({\n    selector: '[adf-clipboard]',\n    exportAs: 'adfClipboard'\n})\nexport class ClipboardDirective {\n    /** Translation key or message for the tooltip. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-clipboard')\n    placeholder: string;\n\n    /** Reference to the HTML element containing the text to copy. */\n    @Input()\n    target: HTMLInputElement | HTMLTextAreaElement;\n\n    /** Translation key or message for snackbar notification. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('clipboard-notification') message: string;\n\n    constructor(private clipboardService: ClipboardService,\n                public viewContainerRef: ViewContainerRef,\n                private resolver: ComponentFactoryResolver) {}\n\n    @HostListener('click', ['$event'])\n    handleClickEvent(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.copyToClipboard();\n    }\n\n    @HostListener('mouseenter')\n    showTooltip() {\n        if (this.placeholder) {\n            const componentFactory = this.resolver.resolveComponentFactory(ClipboardComponent);\n            const componentRef = this.viewContainerRef.createComponent(componentFactory).instance;\n            componentRef.placeholder = this.placeholder;\n        }\n    }\n\n    @HostListener('mouseleave')\n    closeTooltip() {\n        this.viewContainerRef.remove();\n    }\n\n    private copyToClipboard() {\n        const isValidTarget = this.clipboardService.isTargetValid(this.target);\n\n        if (isValidTarget) {\n            this.clipboardService.copyToClipboard(this.target, this.message);\n        } else {\n            this.copyContentToClipboard(this.viewContainerRef.element.nativeElement.innerHTML);\n        }\n    }\n\n    private copyContentToClipboard(content) {\n        this.clipboardService.copyContentToClipboard(content, this.message);\n    }\n}\n\n@Component({\n    selector: 'adf-copy-content-tooltip',\n    template: `\n        <span class='adf-copy-tooltip'>{{ placeholder | translate }} </span>\n        `,\n    styleUrls: ['./clipboard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ClipboardComponent implements OnInit {\n    placeholder: string;\n\n    ngOnInit() {\n        this.placeholder = this.placeholder || 'CLIPBOARD.CLICK_TO_COPY';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClipboardDirective, ClipboardComponent } from './clipboard.directive';\nimport { ClipboardService } from './clipboard.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    providers: [\n        ClipboardService\n    ],\n    declarations: [\n        ClipboardDirective,\n        ClipboardComponent\n    ],\n    exports: [\n        ClipboardDirective\n    ],\n    entryComponents: [ClipboardComponent]\n})\n\nexport class ClipboardModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, ElementRef, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataColumn } from '../../data/data-column.model';\n\n@Directive({\n    selector: '[adf-drop-zone]'\n})\nexport class DropZoneDirective implements OnInit, OnDestroy {\n    private element: HTMLElement;\n\n    @Input()\n    dropTarget: 'header' | 'cell' = 'cell';\n\n    @Input()\n    dropRow: DataRow;\n\n    @Input()\n    dropColumn: DataColumn;\n\n    constructor(elementRef: ElementRef, private ngZone: NgZone) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('drop', this.onDrop.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    onDragOver(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-dragover`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    onDrop(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-drop`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { ContextMenuModule } from '../context-menu/context-menu.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { DirectiveModule } from '../directives/directive.module';\nimport { DataTableCellComponent } from './components/datatable/datatable-cell.component';\nimport { DataTableComponent } from './components/datatable/datatable.component';\nimport { DateCellComponent } from './components/datatable/date-cell.component';\nimport { EmptyListBodyDirective,\n    EmptyListComponent,\n    EmptyListFooterDirective,\n    EmptyListHeaderDirective } from './components/datatable/empty-list.component';\nimport { FileSizeCellComponent } from './components/datatable/filesize-cell.component';\nimport { LocationCellComponent } from './components/datatable/location-cell.component';\nimport { LoadingContentTemplateDirective } from './directives/loading-template.directive';\nimport { NoContentTemplateDirective } from './directives/no-content-template.directive';\nimport { NoPermissionTemplateDirective } from './directives/no-permission-template.directive';\nimport { CustomEmptyContentTemplateDirective } from './directives/custom-empty-content-template.directive';\nimport { CustomLoadingContentTemplateDirective } from './directives/custom-loading-template.directive';\nimport { CustomNoPermissionTemplateDirective } from './directives/custom-no-permission-template.directive';\nimport { JsonCellComponent } from './components/datatable/json-cell.component';\nimport { ClipboardModule } from '../clipboard/clipboard.module';\nimport { DropZoneDirective } from './components/datatable/drop-zone.directive';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild(),\n        ContextMenuModule,\n        PipeModule,\n        DirectiveModule,\n        ClipboardModule\n    ],\n    declarations: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ],\n    exports: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ]\n\n})\nexport class DataTableModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DataColumnListComponent } from './data-column-list.component';\nimport { DataColumnComponent } from './data-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ],\n    exports: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ]\n})\nexport class DataColumnModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { AboutComponent } from './about.component';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        DataTableModule,\n        DataColumnModule\n    ],\n    declarations: [\n        AboutComponent\n    ],\n    exports: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ViewUtilService {\n    static TARGET = '_new';\n\n    /**\n     * Content groups based on categorization of files that can be viewed in the web browser. This\n     * implementation or grouping is tied to the definition the ng component: ViewerComponent\n     */\n        // tslint:disable-next-line:variable-name\n    static ContentGroup = {\n        IMAGE: 'image',\n        MEDIA: 'media',\n        PDF: 'pdf',\n        TEXT: 'text'\n    };\n\n    /**\n     * Based on ViewerComponent Implementation, this value is used to determine how many times we try\n     * to get the rendition of a file for preview, or printing.\n     */\n    maxRetries = 5;\n\n    /**\n     * Mime-type grouping based on the ViewerComponent.\n     */\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * This method takes a url to trigger the print dialog against, and the type of artifact that it\n     * is.\n     * This URL should be one that can be rendered in the browser, for example PDF, Image, or Text\n     */\n    printFile(url: string, type: string): void {\n        const pwa = window.open(url, ViewUtilService.TARGET);\n        if (pwa) {\n            // Because of the way chrome focus and close image window vs. pdf preview window\n            if (type === ViewUtilService.ContentGroup.IMAGE) {\n                pwa.onfocus = () => {\n                    setTimeout(() => {\n                        pwa.close();\n                    }, 500);\n                };\n            }\n\n            pwa.onload = () => {\n                pwa.print();\n            };\n        }\n    }\n\n    /**\n     * Launch the File Print dialog from anywhere other than the preview service, which resolves the\n     * rendition of the object that can be printed from a web browser.\n     * These are: images, PDF files, or PDF rendition of files.\n     * We also force PDF rendition for TEXT type objects, otherwise the default URL is to download.\n     * TODO there are different TEXT type objects, (HTML, plaintext, xml, etc. we should determine how these are handled)\n     */\n    printFileGeneric(objectId: string, mimeType: string): void {\n        const nodeId = objectId;\n        const type: string = this.getViewerTypeByMimeType(mimeType);\n\n        this.getRendition(nodeId, ViewUtilService.ContentGroup.PDF)\n            .then((value) => {\n                const url: string = this.getRenditionUrl(nodeId, type, (value ? true : false));\n                const printType = (type === ViewUtilService.ContentGroup.PDF\n                    || type === ViewUtilService.ContentGroup.TEXT)\n                    ? ViewUtilService.ContentGroup.PDF : type;\n                this.printFile(url, printType);\n            })\n            .catch((err) => {\n                this.logService.error('Error with Printing');\n                this.logService.error(err);\n            });\n    }\n\n    getRenditionUrl(nodeId: string, type: string, renditionExists: boolean): string {\n        return (renditionExists && type !== ViewUtilService.ContentGroup.IMAGE) ?\n            this.apiService.contentApi.getRenditionUrl(nodeId, ViewUtilService.ContentGroup.PDF) :\n            this.apiService.contentApi.getContentUrl(nodeId, false);\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string, retries: number): Promise<RenditionEntry> {\n        const rendition = await this.apiService.renditionsApi.getRendition(nodeId, renditionId);\n\n        if (this.maxRetries < retries) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'CREATED') {\n                return rendition;\n            } else {\n                retries += 1;\n                await this.wait(1000);\n                return await this.waitRendition(nodeId, renditionId, retries);\n            }\n        }\n    }\n\n    getViewerTypeByMimeType(mimeType: string): string {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    wait(ms: number): Promise<any> {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    async getRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        const renditionPaging: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n        let rendition: RenditionEntry = renditionPaging.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n\n        if (rendition) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId });\n                    rendition = await this.waitRendition(nodeId, renditionId, 0);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n        return new Promise<RenditionEntry>((resolve) => resolve(rendition));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-more-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-more-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerMoreActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-open-with',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-open-with' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerOpenWithComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-sidebar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-sidebar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerSidebarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, ContentChild, EventEmitter, HostListener, ElementRef,\n    Input, OnChanges, Output, SimpleChanges, TemplateRef,\n    ViewEncapsulation, OnInit, OnDestroy\n} from '@angular/core';\nimport { RenditionPaging, SharedLinkEntry, Node, RenditionEntry, NodeEntry } from '@alfresco/js-api';\nimport { BaseEvent } from '../../events';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { ViewerMoreActionsComponent } from './viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './viewer-open-with.component';\nimport { ViewerSidebarComponent } from './viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './viewer-toolbar.component';\nimport { Subscription } from 'rxjs';\nimport { ViewUtilService } from '../services/view-util.service';\nimport { AppExtensionService, ViewerExtensionRef } from '@alfresco/adf-extensions';\n\n@Component({\n    selector: 'adf-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.scss'],\n    host: { 'class': 'adf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ViewerComponent implements OnChanges, OnInit, OnDestroy {\n\n    @ContentChild(ViewerToolbarComponent)\n    toolbar: ViewerToolbarComponent;\n\n    @ContentChild(ViewerSidebarComponent)\n    sidebar: ViewerSidebarComponent;\n\n    @ContentChild(ViewerOpenWithComponent)\n    mnuOpenWith: ViewerOpenWithComponent;\n\n    @ContentChild(ViewerMoreActionsComponent)\n    mnuMoreActions: ViewerMoreActionsComponent;\n\n    /** If you want to load an external file that does not come from ACS you\n     * can use this URL to specify where to load the file from.\n     */\n    @Input()\n    urlFile = '';\n\n    /** Viewer to use with the `urlFile` address (`pdf`, `image`, `media`, `text`).\n     * Used when `urlFile` has no filename and extension.\n     */\n    @Input()\n    urlFileViewer: string = null;\n\n    /** Loads a Blob File */\n    @Input()\n    blobFile: Blob;\n\n    /** Node Id of the file to load. */\n    @Input()\n    nodeId: string = null;\n\n    /** Shared link id (to display shared file). */\n    @Input()\n    sharedLinkId: string = null;\n\n    /** If `true` then show the Viewer as a full page over the current content.\n     * Otherwise fit inside the parent div.\n     */\n    @Input()\n    overlayMode = false;\n\n    /** Hide or show the viewer */\n    @Input()\n    showViewer = true;\n\n    /** Hide or show the toolbar */\n    @Input()\n    showToolbar = true;\n\n    /** Specifies the name of the file when it is not available from the URL. */\n    @Input()\n    displayName: string;\n\n    /** @deprecated 3.2.0 */\n    /** Allows `back` navigation */\n    @Input()\n    allowGoBack = true;\n\n    /** Toggles downloading. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles printing. */\n    @Input()\n    allowPrint = false;\n\n    /** Toggles the 'Full Screen' feature. */\n    @Input()\n    allowFullScreen = true;\n\n    /** Toggles before/next navigation. You can use the arrow buttons to navigate\n     * between documents in the collection.\n     */\n    @Input()\n    allowNavigate = false;\n\n    /** Toggles the \"before\" (\"<\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateBefore = true;\n\n    /** Toggles the next (\">\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateNext = true;\n\n    /** Allow the left the sidebar. */\n    @Input()\n    allowLeftSidebar = false;\n\n    /** Allow the right sidebar. */\n    @Input()\n    allowRightSidebar = false;\n\n    /** Toggles PDF thumbnails. */\n    @Input()\n    allowThumbnails = true;\n\n    /** Toggles right sidebar visibility. Requires `allowRightSidebar` to be set to `true`. */\n    @Input()\n    showRightSidebar = false;\n\n    /** Toggles left sidebar visibility. Requires `allowLeftSidebar` to be set to `true`. */\n    @Input()\n    showLeftSidebar = false;\n\n    /** The template for the right sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarRightTemplate: TemplateRef<any> = null;\n\n    /** The template for the left sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarLeftTemplate: TemplateRef<any> = null;\n\n    /** The template for the pdf thumbnails. */\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    /** MIME type of the file content (when not determined by the filename extension). */\n    @Input()\n    mimeType: string;\n\n    /** Content filename. */\n    @Input()\n    fileName: string;\n\n    /** Number of times the Viewer will retry fetching content Rendition.\n     * There is a delay of at least one second between attempts.\n     */\n    @Input()\n    maxRetries = 30;\n\n    /** Emitted when user clicks the 'Back' button. */\n    @Output()\n    goBack = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Print' button. */\n    @Output()\n    print = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when the viewer is shown or hidden. */\n    @Output()\n    showViewerChange = new EventEmitter<boolean>();\n\n    /** Emitted when the filename extension changes. */\n    @Output()\n    extensionChange = new EventEmitter<string>();\n\n    /** Emitted when user clicks 'Navigate Before' (\"<\") button. */\n    @Output()\n    navigateBefore = new EventEmitter();\n\n    /** Emitted when user clicks 'Navigate Next' (\">\") button. */\n    @Output()\n    navigateNext = new EventEmitter();\n\n    /** Emitted when the shared link used is not valid. */\n    @Output()\n    invalidSharedLink = new EventEmitter();\n\n    TRY_TIMEOUT: number = 10000;\n\n    viewerType = 'unknown';\n    isLoading = false;\n    nodeEntry: NodeEntry;\n\n    extensionTemplates: { template: TemplateRef<any>, isVisible: boolean }[] = [];\n    externalExtensions: string[] = [];\n    urlFileContent: string;\n    otherMenu: any;\n    extension: string;\n    sidebarRightTemplateContext: { node: Node } = { node: null };\n    sidebarLeftTemplateContext: { node: Node } = { node: null };\n    fileTitle: string;\n    viewerExtensions: Array<ViewerExtensionRef> = [];\n\n    private cacheBusterNumber;\n\n    private subscriptions: Subscription[] = [];\n\n    // Extensions that are supported by the Viewer without conversion\n    private extensions = {\n        image: ['png', 'jpg', 'jpeg', 'gif', 'bpm', 'svg'],\n        media: ['wav', 'mp4', 'mp3', 'webm', 'ogg'],\n        text: ['txt', 'xml', 'html', 'json', 'ts', 'css', 'md'],\n        pdf: ['pdf']\n    };\n\n    // Mime types that are supported by the Viewer without conversion\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private viewUtils: ViewUtilService,\n                private logService: LogService,\n                private extensionService: AppExtensionService,\n                private el: ElementRef) {\n    }\n\n    isSourceDefined(): boolean {\n        return (this.urlFile || this.blobFile || this.nodeId || this.sharedLinkId) ? true : false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.apiService.nodeUpdated.subscribe((node) => this.onNodeUpdated(node))\n        );\n\n        this.loadExtensions();\n    }\n\n    private loadExtensions() {\n        this.viewerExtensions = this.extensionService.getViewerExtensions();\n        this.viewerExtensions\n            .forEach((extension: ViewerExtensionRef) => {\n                this.externalExtensions.push(extension.fileExtension);\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private onNodeUpdated(node: Node) {\n        if (node && node.id === this.nodeId) {\n            this.generateCacheBusterNumber();\n            this.isLoading = true;\n            this.setUpNodeFile(node).then(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showViewer) {\n            if (!this.isSourceDefined()) {\n                throw new Error('A content source attribute value is missing.');\n            }\n            this.isLoading = true;\n\n            if (this.blobFile) {\n                this.setUpBlobData();\n                this.isLoading = false;\n            } else if (this.urlFile) {\n                this.setUpUrlFile();\n                this.isLoading = false;\n            } else if (this.nodeId) {\n                this.apiService.nodesApi.getNode(this.nodeId, { include: ['allowableOperations'] }).then(\n                    (node: NodeEntry) => {\n                        this.nodeEntry = node;\n                        this.setUpNodeFile(node.entry).then(() => {\n                            this.isLoading = false;\n                        });\n                    },\n                    (error) => {\n                        this.isLoading = false;\n                        this.logService.error('This node does not exist');\n                    }\n                );\n            } else if (this.sharedLinkId) {\n                this.allowGoBack = false;\n\n                this.apiService.sharedLinksApi.getSharedLink(this.sharedLinkId).then(\n                    (sharedLinkEntry: SharedLinkEntry) => {\n                        this.setUpSharedLinkFile(sharedLinkEntry);\n                        this.isLoading = false;\n                    },\n                    () => {\n                        this.isLoading = false;\n                        this.logService.error('This sharedLink does not exist');\n                        this.invalidSharedLink.next();\n                    });\n            }\n        }\n    }\n\n    private setUpBlobData() {\n        this.fileTitle = this.getDisplayName('Unknown');\n        this.mimeType = this.blobFile.type;\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n\n        this.allowDownload = false;\n        // TODO: wrap blob into the data url and allow downloading\n\n        this.extensionChange.emit(this.mimeType);\n        this.scrollTop();\n    }\n\n    private setUpUrlFile() {\n        const filenameFromUrl = this.getFilenameFromUrl(this.urlFile);\n        this.fileTitle = this.getDisplayName(filenameFromUrl);\n        this.extension = this.getFileExtension(filenameFromUrl);\n        this.urlFileContent = this.urlFile;\n\n        this.fileName = this.displayName;\n\n        this.viewerType = this.urlFileViewer || this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.scrollTop();\n    }\n\n    private async setUpNodeFile(data: Node) {\n        let setupNode;\n\n        if (data.content) {\n            this.mimeType = data.content.mimeType;\n        }\n\n        this.fileTitle = this.getDisplayName(data.name);\n\n        this.urlFileContent = this.apiService.contentApi.getContentUrl(data.id);\n        this.urlFileContent = this.cacheBusterNumber ? this.urlFileContent + '&' + this.cacheBusterNumber : this.urlFileContent;\n\n        this.extension = this.getFileExtension(data.name);\n\n        this.fileName = data.name;\n\n        this.viewerType = this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        if (this.viewerType === 'unknown') {\n            setupNode = this.displayNodeRendition(data.id);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.sidebarRightTemplateContext.node = data;\n        this.sidebarLeftTemplateContext.node = data;\n        this.scrollTop();\n\n        return setupNode;\n    }\n\n    private setUpSharedLinkFile(details: any) {\n        this.mimeType = details.entry.content.mimeType;\n        this.fileTitle = this.getDisplayName(details.entry.name);\n        this.extension = this.getFileExtension(details.entry.name);\n        this.fileName = details.entry.name;\n\n        this.urlFileContent = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, false);\n\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByExtension(this.extension);\n        }\n\n        if (this.viewerType === 'unknown') {\n            this.displaySharedLinkRendition(this.sharedLinkId);\n        }\n\n        this.extensionChange.emit(this.extension);\n    }\n\n    toggleSidebar() {\n        this.showRightSidebar = !this.showRightSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarRightTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    toggleLeftSidebar() {\n        this.showLeftSidebar = !this.showLeftSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarLeftTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    private getDisplayName(name) {\n        return this.displayName || name;\n    }\n\n    scrollTop() {\n        window.scrollTo(0, 1);\n    }\n\n    getViewerTypeByMimeType(mimeType: string) {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    getViewerTypeByExtension(extension: string) {\n        if (extension) {\n            extension = extension.toLowerCase();\n        }\n\n        if (this.isCustomViewerExtension(extension)) {\n            return 'custom';\n        }\n\n        if (this.extensions.image.indexOf(extension) >= 0) {\n            return 'image';\n        }\n\n        if (this.extensions.media.indexOf(extension) >= 0) {\n            return 'media';\n        }\n\n        if (this.extensions.text.indexOf(extension) >= 0) {\n            return 'text';\n        }\n\n        if (this.extensions.pdf.indexOf(extension) >= 0) {\n            return 'pdf';\n        }\n\n        return 'unknown';\n    }\n\n    onBackButtonClick() {\n        this.close();\n    }\n\n    onNavigateBeforeClick() {\n        this.navigateBefore.next();\n    }\n\n    onNavigateNextClick() {\n        this.navigateNext.next();\n    }\n\n    /**\n     * close the viewer\n     */\n    close() {\n        if (this.otherMenu) {\n            this.otherMenu.hidden = false;\n        }\n        this.showViewer = false;\n        this.showViewerChange.emit(this.showViewer);\n    }\n\n    /**\n     * get File name from url\n     *\n     * @param  url - url file\n     */\n    getFilenameFromUrl(url: string): string {\n        const anchor = url.indexOf('#');\n        const query = url.indexOf('?');\n        const end = Math.min(\n            anchor > 0 ? anchor : url.length,\n            query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf('/', end) + 1, end);\n    }\n\n    /**\n     * Get file extension from the string.\n     * Supports the URL formats like:\n     * http://localhost/test.jpg?cache=1000\n     * http://localhost/test.jpg#cache=1000\n     *\n     * @param fileName - file name\n     */\n    getFileExtension(fileName: string): string {\n        if (fileName) {\n            const match = fileName.match(/\\.([^\\./\\?\\#]+)($|\\?|\\#)/);\n            return match ? match[1] : null;\n        }\n        return null;\n    }\n\n    isCustomViewerExtension(extension: string): boolean {\n        const extensions: any = this.externalExtensions || [];\n\n        if (extension && extensions.length > 0) {\n            extension = extension.toLowerCase();\n            return extensions.flat().indexOf(extension) >= 0;\n        }\n\n        return false;\n    }\n\n    /**\n     * Keyboard event listener\n     * @param  event\n     */\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n\n        // Esc\n        if (key === 27 && this.overlayMode) { // esc\n            this.close();\n        }\n\n        // Left arrow\n        if (key === 37 && this.canNavigateBefore) {\n            event.preventDefault();\n            this.onNavigateBeforeClick();\n        }\n\n        // Right arrow\n        if (key === 39 && this.canNavigateNext) {\n            event.preventDefault();\n            this.onNavigateNextClick();\n        }\n\n        // Ctrl+F\n        if (key === 70 && event.ctrlKey) {\n            event.preventDefault();\n            this.enterFullScreen();\n        }\n    }\n\n    printContent() {\n        if (this.allowPrint) {\n            const args = new BaseEvent();\n            this.print.next(args);\n\n            if (!args.defaultPrevented) {\n                this.viewUtils.printFileGeneric(this.nodeId, this.mimeType);\n            }\n        }\n    }\n\n    /**\n     * Triggers full screen mode with a main content area displayed.\n     */\n    enterFullScreen(): void {\n        if (this.allowFullScreen) {\n            const container = this.el.nativeElement.querySelector('.adf-viewer__fullscreen-container');\n            if (container) {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n        }\n    }\n\n    private async displayNodeRendition(nodeId: string) {\n        try {\n            const rendition = await this.resolveRendition(nodeId, 'pdf');\n            if (rendition) {\n                const renditionId = rendition.entry.id;\n\n                if (renditionId === 'pdf') {\n                    this.viewerType = 'pdf';\n                } else if (renditionId === 'imgpreview') {\n                    this.viewerType = 'image';\n                }\n\n                this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n            }\n        } catch (err) {\n            this.logService.error(err);\n        }\n    }\n\n    private async displaySharedLinkRendition(sharedId: string) {\n        try {\n            const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'pdf');\n            if (rendition.entry.status.toString() === 'CREATED') {\n                this.viewerType = 'pdf';\n                this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'pdf');\n            }\n        } catch (error) {\n            this.logService.error(error);\n            try {\n                const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'imgpreview');\n                if (rendition.entry.status.toString() === 'CREATED') {\n                    this.viewerType = 'image';\n                    this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'imgpreview');\n                }\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private async resolveRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        renditionId = renditionId.toLowerCase();\n\n        const supportedRendition: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n\n        let rendition: RenditionEntry = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        if (!rendition) {\n            renditionId = 'imgpreview';\n            rendition = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        }\n\n        if (rendition) {\n            const status: string = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId }).then(() => {\n                        this.viewerType = 'in_creation';\n                    });\n                    rendition = await this.waitRendition(nodeId, renditionId);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n\n        return rendition;\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        let currentRetry: number = 0;\n        return new Promise<RenditionEntry>((resolve, reject) => {\n            const intervalId = setInterval(() => {\n                currentRetry++;\n                if (this.maxRetries >= currentRetry) {\n                    this.apiService.renditionsApi.getRendition(nodeId, renditionId).then((rendition: RenditionEntry) => {\n                        const status: string = rendition.entry.status.toString();\n                        if (status === 'CREATED') {\n\n                            if (renditionId === 'pdf') {\n                                this.viewerType = 'pdf';\n                            } else if (renditionId === 'imgpreview') {\n                                this.viewerType = 'image';\n                            }\n\n                            this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n\n                            clearInterval(intervalId);\n                            return resolve(rendition);\n                        }\n                    }, () => {\n                        this.viewerType = 'error_in_creation';\n                        return reject();\n                    });\n                } else {\n                    this.isLoading = false;\n                    this.viewerType = 'error_in_creation';\n                    clearInterval(intervalId);\n                }\n            }, this.TRY_TIMEOUT);\n        });\n    }\n\n    checkExtensions(extensionAllowed) {\n        if (typeof extensionAllowed === 'string') {\n            return this.extension.toLowerCase() === extensionAllowed.toLowerCase();\n        } else if (extensionAllowed.length > 0) {\n            return extensionAllowed.find((currentExtension) => {\n                return this.extension.toLowerCase() === currentExtension.toLowerCase();\n            });\n        }\n\n    }\n\n    private generateCacheBusterNumber() {\n        this.cacheBusterNumber = Date.now();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewEncapsulation,\n    ElementRef,\n    OnInit,\n    OnDestroy\n} from '@angular/core';\nimport { ContentService } from '../../services/content.service';\nimport { AppConfigService } from './../../app-config/app-config.service';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-img-viewer',\n    templateUrl: './imgViewer.component.html',\n    styleUrls: ['./imgViewer.component.scss'],\n    host: { 'class': 'adf-image-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ImgViewerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    showToolbar = true;\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    rotate: number = 0;\n    scaleX: number = 1.0;\n    scaleY: number = 1.0;\n    offsetX: number = 0;\n    offsetY: number = 0;\n    isDragged: boolean = false;\n\n    private drag = { x: 0, y: 0 };\n    private delta = { x: 0, y: 0 };\n\n    get transform(): SafeStyle {\n        return this.sanitizer.bypassSecurityTrustStyle(`scale(${this.scaleX}, ${this.scaleY}) rotate(${this.rotate}deg) translate(${this.offsetX}px, ${this.offsetY}px)`);\n    }\n\n    get currentScaleText(): string {\n        return Math.round(this.scaleX * 100) + '%';\n    }\n\n    private element: HTMLElement;\n\n    constructor(\n        private sanitizer: DomSanitizer,\n        private appConfigService: AppConfigService,\n        private contentService: ContentService,\n        private el: ElementRef) {\n        this.initializeScaling();\n    }\n\n    initializeScaling() {\n        const scaling = this.appConfigService.get<number>('adf-viewer.image-viewer-scaling', undefined) / 100;\n        if (scaling) {\n            this.scaleX = scaling;\n            this.scaleY = scaling;\n        }\n    }\n\n    ngOnInit() {\n        this.element = <HTMLElement> this.el.nativeElement.querySelector('#viewer-image');\n\n        if (this.element) {\n            this.element.addEventListener('mousedown', this.onMouseDown.bind(this));\n            this.element.addEventListener('mouseup', this.onMouseUp.bind(this));\n            this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n            this.element.addEventListener('mouseout', this.onMouseOut.bind(this));\n            this.element.addEventListener('mousemove', this.onMouseMove.bind(this));\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.removeEventListener('mousedown', this.onMouseDown);\n            this.element.removeEventListener('mouseup', this.onMouseUp);\n            this.element.removeEventListener('mouseleave', this.onMouseLeave);\n            this.element.removeEventListener('mouseout', this.onMouseOut);\n            this.element.removeEventListener('mousemove', this.onMouseMove);\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        event.preventDefault();\n        this.isDragged = true;\n        this.drag = { x: event.pageX, y: event.pageY };\n    }\n\n    onMouseMove(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n\n            this.delta.x = event.pageX - this.drag.x;\n            this.delta.y = event.pageY - this.drag.y;\n\n            this.drag.x = event.pageX;\n            this.drag.y = event.pageY;\n\n            const scaleX = (this.scaleX !== 0 ? this.scaleX : 1.0);\n            const scaleY = (this.scaleY !== 0 ? this.scaleY : 1.0);\n\n            this.offsetX += (this.delta.x / scaleX);\n            this.offsetY += (this.delta.y / scaleY);\n        }\n    }\n\n    onMouseUp(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseLeave(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseOut(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    zoomIn() {\n        const ratio = +((this.scaleX + 0.2).toFixed(1));\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    zoomOut() {\n        let ratio = +((this.scaleX - 0.2).toFixed(1));\n        if (ratio < 0.2) {\n            ratio = 0.2;\n        }\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    rotateLeft() {\n        const angle = this.rotate - 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    rotateRight() {\n        const angle = this.rotate + 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    reset() {\n        this.rotate = 0;\n        this.scaleX = 1.0;\n        this.scaleY = 1.0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-media-player',\n    templateUrl: './mediaPlayer.component.html',\n    styleUrls: ['./mediaPlayer.component.scss'],\n    host: { 'class': 'adf-media-player' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class MediaPlayerComponent implements OnChanges {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    mimeType: string;\n\n    @Input()\n    nameFile: string;\n\n    constructor(private contentService: ContentService ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n}\n","/* tslint:disable:adf-license-banner  */\n\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n *\n * RenderingQueueServices rendering of the views for pages and thumbnails.\n *\n */\n@Injectable()\nexport class RenderingQueueServices {\n\n    renderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n    };\n\n    CLEANUP_TIMEOUT: number = 30000;\n\n    pdfViewer: any = null;\n    pdfThumbnailViewer: any = null;\n    onIdle: any = null;\n\n    highestPriorityPage: any = null;\n    idleTimeout: any = null;\n    printing: any = false;\n    isThumbnailViewEnabled: any = false;\n\n    /**\n     * @param pdfViewer\n     */\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n\n    /**\n     * @param pdfThumbnailViewer\n     */\n    setThumbnailViewer(pdfThumbnailViewer) {\n        this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n\n    /**\n     * @param  view\n     */\n    isHighestPriority(view: any): boolean {\n        return this.highestPriorityPage === view.renderingId;\n    }\n\n    renderHighestPriority(currentlyVisiblePages) {\n        if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n        }\n\n        // Pages have a higher priority than thumbnails, so check them first.\n        if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n        }\n        // No pages needed rendering so check thumbnails.\n        if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n                return;\n            }\n        }\n\n        if (this.printing) {\n            // If printing is currently ongoing do not reschedule cleanup.\n            return;\n        }\n\n        if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), this.CLEANUP_TIMEOUT);\n        }\n    }\n\n    getHighestPriority(visible, views, scrolledDown) {\n        // The state has changed figure out which page has the highest priority to\n        // render next (if any).\n        // Priority:\n        // 1 visible pages\n        // 2 if last scrolled down page after the visible pages\n        // 2 if last scrolled up page before the visible pages\n        const visibleViews = visible.views;\n\n        const numVisible = visibleViews.length;\n        if (numVisible === 0) {\n            return false;\n        }\n        for (let i = 0; i < numVisible; ++i) {\n            const view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n                return view;\n            }\n        }\n\n        // All the visible views have rendered, try to render next/previous pages.\n        if (scrolledDown) {\n            const nextPageIndex = visible.last.id;\n            // ID's start at 1 so no need to add 1.\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n                return views[nextPageIndex];\n            }\n        } else {\n            const previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n                return views[previousPageIndex];\n            }\n        }\n        // Everything that needs to be rendered has been.\n        return null;\n    }\n\n    /**\n     * @param view\n     */\n    isViewFinished(view): boolean {\n        return view.renderingState === this.renderingStates.FINISHED;\n    }\n\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * false.\n     * @param view\n     */\n    renderView(view: any) {\n        const state = view.renderingState;\n        switch (state) {\n            case this.renderingStates.FINISHED:\n                return false;\n            case this.renderingStates.PAUSED:\n                this.highestPriorityPage = view.renderingId;\n                view.resume();\n                break;\n            case this.renderingStates.RUNNING:\n                this.highestPriorityPage = view.renderingId;\n                break;\n            case this.renderingStates.INITIAL:\n                this.highestPriorityPage = view.renderingId;\n                const continueRendering = function () {\n                    this.renderHighestPriority();\n                }.bind(this);\n                view.draw().then(continueRendering, continueRendering);\n                break;\n            default:\n                break;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\n\ndeclare const pdfjsLib: any;\n\n@Component({\n    selector: 'adf-pdf-viewer-password-dialog',\n    templateUrl: './pdfViewer-password-dialog.html',\n    styleUrls: [ './pdfViewer-password-dialog.scss' ]\n})\nexport class PdfPasswordDialogComponent implements OnInit {\n    passwordFormControl: FormControl;\n\n    constructor(\n        private dialogRef: MatDialogRef<PdfPasswordDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit() {\n        this.passwordFormControl = new FormControl('', [Validators.required]);\n    }\n\n    isError(): boolean {\n        return this.data.reason === pdfjsLib.PasswordResponses.INCORRECT_PASSWORD;\n    }\n\n    isValid(): boolean {\n        return !this.passwordFormControl.hasError('required');\n    }\n\n    submit(): void {\n        this.dialogRef.close(this.passwordFormControl.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    TemplateRef,\n    HostListener,\n    Output,\n    Input,\n    OnChanges,\n    OnDestroy,\n    ViewEncapsulation,\n    EventEmitter,\n    SimpleChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { LogService } from '../../services/log.service';\nimport { RenderingQueueServices } from '../services/rendering-queue.services';\nimport { PdfPasswordDialogComponent } from './pdfViewer-password-dialog';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\ndeclare const pdfjsLib: any;\ndeclare const pdfjsViewer: any;\n\nexport interface PdfDocumentOptions {\n    url?: string;\n    data?: any;\n    withCredentials?: boolean;\n}\n\n@Component({\n    selector: 'adf-pdf-viewer',\n    templateUrl: './pdfViewer.component.html',\n    styleUrls: [\n        './pdfViewer.component.scss',\n        './pdfViewerHost.component.scss'\n    ],\n    providers: [RenderingQueueServices],\n    host: { 'class': 'adf-pdf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfViewerComponent implements OnChanges, OnDestroy {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    @Input()\n    showToolbar: boolean = true;\n\n    @Input()\n    allowThumbnails = false;\n\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    @Output()\n    rendered = new EventEmitter<any>();\n\n    @Output()\n    error = new EventEmitter<any>();\n\n    @Output()\n    close = new EventEmitter<any>();\n\n    loadingTask: any;\n    currentPdfDocument: any;\n    page: number;\n    displayPage: number;\n    totalPages: number;\n    loadingPercent: number;\n    pdfViewer: any;\n    documentContainer: any;\n    currentScaleMode: string = 'auto';\n    currentScale: number = 1;\n\n    MAX_AUTO_SCALE: number = 1.25;\n    DEFAULT_SCALE_DELTA: number = 1.1;\n    MIN_SCALE: number = 0.25;\n    MAX_SCALE: number = 10.0;\n\n    isPanelDisabled = true;\n    showThumbnails: boolean = false;\n    pdfThumbnailsContext: { viewer: any } = { viewer: null };\n    randomPdfId: string;\n\n    get currentScaleText(): string {\n        return Math.round(this.currentScale * 100) + '%';\n    }\n\n    constructor(\n        private dialog: MatDialog,\n        private renderingQueueServices: RenderingQueueServices,\n        private logService: LogService,\n        private appConfigService: AppConfigService) {\n        // needed to preserve \"this\" context\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onPagesLoaded = this.onPagesLoaded.bind(this);\n        this.onPageRendered = this.onPageRendered.bind(this);\n        this.randomPdfId = this.generateUuid();\n        this.currentScale = this.getUserScaling();\n    }\n\n    getUserScaling(): number {\n        const scaleConfig = this.appConfigService.get<number>('adf-viewer.pdf-viewer-scaling', undefined) / 100;\n        if (scaleConfig) {\n            return this.checkLimits(scaleConfig);\n        } else {\n            return 1;\n        }\n    }\n\n    checkLimits(scaleConfig: number): number {\n        if (scaleConfig > this.MAX_SCALE) {\n            return this.MAX_SCALE;\n        } else if (scaleConfig < this.MIN_SCALE) {\n            return this.MIN_SCALE;\n        } else {\n            return scaleConfig;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n\n        if (blobFile && blobFile.currentValue) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const options = {\n                    data: reader.result,\n                    withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n                };\n                this.executePdf(options);\n            };\n            reader.readAsArrayBuffer(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            const options = {\n                url: urlFile.currentValue,\n                withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n            };\n            this.executePdf(options);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    executePdf(pdfOptions: PdfDocumentOptions) {\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\n\n        this.loadingTask = pdfjsLib.getDocument(pdfOptions);\n\n        this.loadingTask.onPassword = (callback, reason) => {\n            this.onPdfPassword(callback, reason);\n        };\n\n        this.loadingTask.onProgress = (progressData) => {\n            const level = progressData.loaded / progressData.total;\n            this.loadingPercent = Math.round(level * 100);\n        };\n\n        this.loadingTask.then((pdfDocument) => {\n            this.currentPdfDocument = pdfDocument;\n            this.totalPages = pdfDocument.numPages;\n            this.page = 1;\n            this.displayPage = 1;\n            this.initPDFViewer(this.currentPdfDocument);\n\n            this.currentPdfDocument.getPage(1).then(() => {\n                this.scalePage('auto');\n            }, () => {\n                this.error.emit();\n            });\n\n        }, () => {\n            this.error.emit();\n        });\n    }\n\n    initPDFViewer(pdfDocument: any) {\n        const viewer: any = document.getElementById(`${this.randomPdfId}-viewer-viewerPdf`);\n        const container = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (viewer && container) {\n            this.documentContainer = container;\n\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('textlayerrendered', this.onPageRendered, true);\n\n            this.pdfViewer = new pdfjsViewer.PDFViewer({\n                container: this.documentContainer,\n                viewer: viewer,\n                renderingQueue: this.renderingQueueServices\n            });\n\n            this.renderingQueueServices.setViewer(this.pdfViewer);\n            this.pdfViewer.setDocument(pdfDocument);\n            this.pdfThumbnailsContext.viewer = this.pdfViewer;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.documentContainer) {\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('textlayerrendered', this.onPageRendered, true);\n        }\n\n        if (this.loadingTask) {\n            try {\n                this.loadingTask.destroy();\n            } catch {\n            }\n\n            this.loadingTask = null;\n        }\n    }\n\n    toggleThumbnails() {\n        this.showThumbnails = !this.showThumbnails;\n    }\n\n    /**\n     * Method to scale the page current support implementation\n     *\n     * @param scaleMode - new scale mode\n     */\n    scalePage(scaleMode) {\n        this.currentScaleMode = scaleMode;\n\n        const viewerContainer = document.getElementById(`${this.randomPdfId}-viewer-main-container`);\n        const documentContainer = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (this.pdfViewer && documentContainer) {\n\n            let widthContainer;\n            let heightContainer;\n\n            if (viewerContainer && viewerContainer.clientWidth <= documentContainer.clientWidth) {\n                widthContainer = viewerContainer.clientWidth;\n                heightContainer = viewerContainer.clientHeight;\n            } else {\n                widthContainer = documentContainer.clientWidth;\n                heightContainer = documentContainer.clientHeight;\n            }\n\n            const currentPage = this.pdfViewer._pages[this.pdfViewer._currentPageNumber - 1];\n\n            const padding = 20;\n            const pageWidthScale = (widthContainer - padding) / currentPage.width * currentPage.scale;\n            const pageHeightScale = (heightContainer - padding) / currentPage.width * currentPage.scale;\n\n            let scale = this.getUserScaling();\n            if (!scale) {\n                switch (this.currentScaleMode) {\n                    case 'page-actual':\n                        scale = 1;\n                        break;\n                    case 'page-width':\n                        scale = pageWidthScale;\n                        break;\n                    case 'page-height':\n                        scale = pageHeightScale;\n                        break;\n                    case 'page-fit':\n                        scale = Math.min(pageWidthScale, pageHeightScale);\n                        break;\n                    case 'auto':\n                        let horizontalScale;\n                        if (this.isLandscape) {\n                            horizontalScale = Math.min(pageHeightScale, pageWidthScale);\n                        } else {\n                            horizontalScale = pageWidthScale;\n                        }\n                        horizontalScale = Math.round(horizontalScale);\n                        scale = Math.min(this.MAX_AUTO_SCALE, horizontalScale);\n\n                        break;\n                    default:\n                        this.logService.error('pdfViewSetScale: \\'' + scaleMode + '\\' is an unknown zoom value.');\n                        return;\n                }\n\n                this.setScaleUpdatePages(scale);\n            } else {\n                this.currentScale = 0;\n                this.setScaleUpdatePages(scale);\n            }\n        }\n    }\n\n    /**\n     * Update all the pages with the newScale scale\n     *\n     * @param newScale - new scale page\n     */\n    setScaleUpdatePages(newScale: number) {\n        if (this.pdfViewer) {\n            if (!this.isSameScale(this.currentScale, newScale)) {\n                this.currentScale = newScale;\n\n                this.pdfViewer._pages.forEach(function (currentPage) {\n                    currentPage.update(newScale);\n                });\n            }\n\n            this.pdfViewer.update();\n        }\n    }\n\n    /**\n     * Check if the request scale of the page is the same for avoid useless re-rendering\n     *\n     * @param oldScale - old scale page\n     * @param newScale - new scale page\n     *\n     */\n    isSameScale(oldScale: number, newScale: number): boolean {\n        return (newScale === oldScale);\n    }\n\n    /**\n     * Check if is a land scape view\n     *\n     * @param width\n     * @param height\n     */\n    isLandscape(width: number, height: number): boolean {\n        return (width > height);\n    }\n\n    /**\n     * Method triggered when the page is resized\n     */\n    onResize() {\n        this.scalePage(this.currentScaleMode);\n    }\n\n    /**\n     * toggle the fit page pdf\n     */\n    pageFit() {\n        if (this.currentScaleMode !== 'page-fit') {\n            this.scalePage('page-fit');\n        } else {\n            this.scalePage('auto');\n        }\n    }\n\n    /**\n     * zoom in page pdf\n     *\n     * @param ticks\n     */\n    zoomIn(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale * this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.ceil(newScale * 10) / 10;\n            newScale = Math.min(this.MAX_SCALE, newScale);\n        } while (--ticks > 0 && newScale < this.MAX_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * zoom out page pdf\n     *\n     * @param ticks\n     */\n    zoomOut(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale / this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.floor(newScale * 10) / 10;\n            newScale = Math.max(this.MIN_SCALE, newScale);\n        } while (--ticks > 0 && newScale > this.MIN_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * load the previous page\n     */\n    previousPage() {\n        if (this.pdfViewer && this.page > 1) {\n            this.page--;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the next page\n     */\n    nextPage() {\n        if (this.pdfViewer && this.page < this.totalPages) {\n            this.page++;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the page in input\n     *\n     * @param page to load\n     */\n    inputPage(page: string) {\n        const pageInput = parseInt(page, 10);\n\n        if (!isNaN(pageInput) && pageInput > 0 && pageInput <= this.totalPages) {\n            this.page = pageInput;\n            this.displayPage = this.page;\n            this.pdfViewer.currentPageNumber = this.page;\n        } else {\n            this.displayPage = this.page;\n        }\n    }\n\n    /**\n     * Page Change Event\n     *\n     * @param event\n     */\n    onPageChange(event) {\n        this.page = event.pageNumber;\n        this.displayPage = event.pageNumber;\n    }\n\n    onPdfPassword(callback, reason) {\n        this.dialog\n            .open(PdfPasswordDialogComponent, {\n                width: '400px',\n                data: { reason }\n            })\n            .afterClosed().subscribe((password) => {\n                if (password) {\n                    callback(password);\n                } else {\n                    this.close.emit();\n                }\n        });\n    }\n\n    /**\n     * Page Rendered Event\n     */\n    onPageRendered() {\n        this.rendered.emit();\n    }\n\n    /**\n     * Pages Loaded Event\n     *\n     * @param event\n     */\n    onPagesLoaded(event) {\n        this.isPanelDisabled = false;\n    }\n\n    /**\n     * Keyboard Event Listener\n     * @param KeyboardEvent event\n     */\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n        if (key === 39) { // right arrow\n            this.nextPage();\n        } else if (key === 37) {// left arrow\n            this.previousPage();\n        }\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, Input, ContentChild, TemplateRef, HostListener, OnInit,\n    AfterViewInit, ElementRef, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-pdf-thumbnails',\n    templateUrl: './pdfViewer-thumbnails.component.html',\n    styleUrls: ['./pdfViewer-thumbnails.component.scss'],\n    host: { 'class': 'adf-pdf-thumbnails' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbListComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input() pdfViewer: any;\n\n    virtualHeight: number = 0;\n    translateY: number = 0;\n    renderItems = [];\n    width: number = 91;\n    currentHeight: number = 0;\n\n    private items = [];\n    private margin: number = 15;\n    private itemHeight: number = 114 + this.margin;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.calculateItems();\n    }\n\n    constructor(private element: ElementRef) {\n        this.calculateItems = this.calculateItems.bind(this);\n        this.onPageChange = this.onPageChange.bind(this);\n    }\n\n    ngOnInit() {\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);\n        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);\n\n        this.setHeight(this.pdfViewer.currentPageNumber);\n        this.items = this.getPages();\n        this.calculateItems();\n\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.scrollInto(this.pdfViewer.currentPageNumber), 0);\n    }\n\n    ngOnDestroy() {\n        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);\n    }\n\n    trackByFn(index: number, item: any): number {\n        return item.id;\n    }\n\n    isSelected(pageNum: number) {\n        return this.pdfViewer.currentPageNumber === pageNum;\n    }\n\n    goTo(pageNum: number) {\n        this.pdfViewer.currentPageNumber = pageNum;\n    }\n\n    scrollInto(item: any) {\n        if (this.items.length) {\n            const index: number = this.items.findIndex((element) => element.id === item);\n\n            if (index < 0 || index >= this.items.length) {\n                return;\n            }\n\n            this.element.nativeElement.scrollTop = index * this.itemHeight;\n\n            this.calculateItems();\n        }\n    }\n\n    getPages() {\n        return this.pdfViewer._pages.map((page) => ({\n            id: page.id,\n            getWidth: () => { return this.width; },\n            getHeight: () => { return this.currentHeight; },\n            getPage: () => this.pdfViewer.pdfDocument.getPage(page.id)\n        }));\n    }\n\n    private setHeight(id): number {\n        const height = this.pdfViewer.pdfDocument.getPage(id).then((page) => this.calculateHeight(page));\n        return height;\n    }\n\n    private calculateHeight(page) {\n        const viewport = page.getViewport(1);\n        const pageRatio = viewport.width / viewport.height;\n        const height = Math.floor(this.width / pageRatio);\n\n        this.currentHeight = height;\n        this.itemHeight = height + this.margin;\n    }\n\n    private calculateItems() {\n        const { element, viewPort, itemsInView } = this.getContainerSetup();\n\n        const indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;\n\n        const start = Math.floor(indexByScrollTop);\n\n        const end = Math.ceil(indexByScrollTop) + (itemsInView);\n\n        this.translateY = this.itemHeight * Math.ceil(start);\n        this.virtualHeight = this.itemHeight * this.items.length  - this.translateY;\n        this.renderItems = this.items.slice(start, end);\n    }\n\n    private getContainerSetup() {\n        const element = this.element.nativeElement;\n        const elementRec = element.getBoundingClientRect();\n        const itemsInView = Math.ceil(elementRec.height / this.itemHeight);\n        const viewPort = (this.itemHeight * this.items.length) / itemsInView;\n\n        return {\n            element,\n            viewPort,\n            itemsInView\n        };\n    }\n\n    private onPageChange(event) {\n        const index = this.renderItems.findIndex((element) => element.id === event.pageNumber);\n\n        if (index < 0) {\n            this.scrollInto(event.pageNumber);\n        }\n\n        if (index >= this.renderItems.length - 1) {\n            this.element.nativeElement.scrollTop += this.itemHeight;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-pdf-thumb',\n    templateUrl: './pdfViewer-thumb.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbComponent implements OnInit {\n\n    @Input()\n    page: any = null;\n\n    image$: Promise<string>;\n\n    constructor(private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.image$ = this.page.getPage().then((page) => this.getThumb(page));\n    }\n\n    private getThumb(page): Promise<string> {\n        const viewport = page.getViewport(1);\n\n        const pageRatio = viewport.width / viewport.height;\n        const canvas = this.getCanvas(pageRatio);\n        const scale = Math.min((canvas.height / viewport.height), (canvas.width / viewport.width));\n\n        return page.render({\n            canvasContext: canvas.getContext('2d'),\n            viewport: page.getViewport(scale)\n        })\n        .then(() => {\n            const imageSource = canvas.toDataURL();\n            return this.sanitizer.bypassSecurityTrustUrl(imageSource);\n        });\n    }\n\n    private getCanvas(pageRatio): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.page.getWidth();\n        canvas.height = this.page.getHeight();\n        return canvas;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-txt-viewer',\n    templateUrl: './txtViewer.component.html',\n    styleUrls: ['./txtViewer.component.scss'],\n    host: { 'class': 'adf-txt-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class TxtViewerComponent implements OnChanges {\n\n    @Input()\n    urlFile: any;\n\n    @Input()\n    blobFile: Blob;\n\n    content: string | ArrayBuffer;\n\n    constructor(private http: HttpClient, private appConfigService: AppConfigService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): Promise<any> {\n\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            return this.readBlob(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            return this.getUrlContent(urlFile.currentValue);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    private getUrlContent(url: string): Promise<any> {\n        const withCredentialsMode = this.appConfigService.get<boolean>('auth.withCredentials', false);\n\n        return new Promise((resolve, reject) => {\n            this.http.get(url, { responseType: 'text', withCredentials: withCredentialsMode }).subscribe((res) => {\n                this.content = res;\n                resolve();\n            }, (event) => {\n                reject(event);\n            });\n        });\n    }\n\n    private readBlob(blob: Blob): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                this.content = reader.result;\n                resolve();\n            };\n\n            reader.onerror = (error: any) => {\n                reject(error);\n            };\n\n            reader.readAsText(blob);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-unknown-format',\n    templateUrl: 'unknown-format.component.html',\n    styleUrls: ['unknown-format.component.scss']\n})\nexport class UnknownFormatComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, Input, TemplateRef, OnDestroy } from '@angular/core';\nimport { ViewerComponent } from '../components/viewer.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n    selector: 'adf-viewer-extension'\n})\nexport class ViewerExtensionDirective implements AfterContentInit, OnDestroy {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    urlFileContent: string;\n\n    @Input()\n    extension: string;\n\n    @Input()\n    supportedExtensions: string[];\n\n    templateModel: any;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private viewerComponent: ViewerComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.templateModel = { template: this.template, isVisible: false };\n\n        this.viewerComponent.extensionTemplates.push(this.templateModel);\n\n        this.viewerComponent.extensionChange\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(fileExtension => {\n                this.templateModel.isVisible = this.isVisible(fileExtension);\n            });\n\n        if (this.supportedExtensions instanceof Array) {\n            this.supportedExtensions.forEach((extension) => {\n                this.viewerComponent.externalExtensions.push(extension);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    /**\n     * check if the current extension in the viewer is compatible with this extension checking against supportedExtensions\n     */\n    isVisible(fileExtension): boolean {\n        let supportedExtension: string;\n\n        if (this.supportedExtensions && (this.supportedExtensions instanceof Array)) {\n            supportedExtension = this.supportedExtensions.find((extension) => {\n                return extension.toLowerCase() === fileExtension;\n\n            });\n        }\n\n        return !!supportedExtension;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-divider',\n    template: '<div></div>',\n    host: { 'class': 'adf-toolbar-divider' },\n    styles: [`\n        .adf-toolbar-divider > div {\n            height: 24px;\n            width: 1px;\n            background: rgba(0, 0, 0, 0.26);\n            margin-left: 5px;\n            margin-right: 5px;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarDividerComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-title',\n    template: '<ng-content></ng-content>',\n    host: { 'class': 'adf-toolbar-title' }\n})\nexport class ToolbarTitleComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-toolbar' }\n})\nexport class ToolbarComponent {\n\n    /** Toolbar title. */\n    @Input()\n    title: string = '';\n\n    /** Toolbar color. Can be changed to empty value (default), `primary`, `accent` or `warn`. */\n    @Input()\n    color: string;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { ToolbarDividerComponent } from './toolbar-divider.component';\nimport { ToolbarTitleComponent } from './toolbar-title.component';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ],\n    exports: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ]\n})\nexport class ToolbarModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\n\nimport { MaterialModule } from '../material.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { ImgViewerComponent } from './components/imgViewer.component';\nimport { MediaPlayerComponent } from './components/mediaPlayer.component';\nimport { PdfViewerComponent } from './components/pdfViewer.component';\nimport { PdfPasswordDialogComponent } from './components/pdfViewer-password-dialog';\nimport { PdfThumbComponent } from './components/pdfViewer-thumb.component';\nimport { PdfThumbListComponent } from './components/pdfViewer-thumbnails.component';\nimport { TxtViewerComponent } from './components/txtViewer.component';\nimport { UnknownFormatComponent } from './components/unknown-format/unknown-format.component';\nimport { ViewerMoreActionsComponent } from './components/viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './components/viewer-open-with.component';\nimport { ViewerSidebarComponent } from './components/viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './components/viewer-toolbar.component';\nimport { ViewerComponent } from './components/viewer.component';\nimport { ViewerExtensionDirective } from './directives/viewer-extension.directive';\nimport { ViewerToolbarActionsComponent } from './components/viewer-toolbar-actions.component';\nimport { DirectiveModule } from '../directives/directive.module';\n\n@NgModule({\n    imports: [\n        ExtensionsModule,\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        ToolbarModule,\n        PipeModule,\n        FlexLayoutModule,\n        DirectiveModule\n    ],\n    declarations: [\n        PdfPasswordDialogComponent,\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ],\n    entryComponents: [\n        PdfPasswordDialogComponent\n    ],\n    exports: [\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfPasswordDialogComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ]\n})\nexport class ViewerModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserRepresentation } from '@alfresco/js-api';\n\nexport class BpmUserModel implements UserRepresentation {\n    apps: any;\n    capabilities: string[];\n    company: string;\n    created: Date;\n    email: string;\n    externalId: string;\n    firstName: string;\n    lastName: string;\n    fullname: string;\n    groups: any;\n    id: number;\n    lastUpdate: Date;\n    latestSyncTimeStamp: Date;\n    password: string;\n    pictureId: number;\n    status: string;\n    tenantId: number;\n    tenantName: string;\n    tenantPictureId: number;\n    type: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.apps = input.apps;\n            this.capabilities = input.capabilities;\n            this.company = input.company;\n            this.created = input.created;\n            this.email = input.email;\n            this.externalId = input.externalId;\n            this.firstName = input.firstName;\n            this.lastName = input.lastName;\n            this.fullname = input.fullname;\n            this.groups = input.groups;\n            this.id = input.id;\n            this.lastUpdate = input.lastUpdate;\n            this.latestSyncTimeStamp = input.latestSyncTimeStamp;\n            this.password = input.password;\n            this.pictureId = input.pictureId;\n            this.status = input.status;\n            this.tenantId = input.tenantId;\n            this.tenantName = input.tenantName;\n            this.tenantPictureId = input.tenantPictureId;\n            this.type = input.type;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { BpmUserModel } from '../models/bpm-user.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserRepresentation } from '@alfresco/js-api';\n\n/**\n *\n * BPMUserService retrieve all the information of an Ecm user.\n *\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class BpmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about the current user.\n     * @returns User information object\n     */\n    getCurrentUserInfo(): Observable<BpmUserModel> {\n        return from(this.apiService.getInstance().activiti.profileApi.getProfile())\n            .pipe(\n                map((userRepresentation: UserRepresentation) => {\n                    return new BpmUserModel(userRepresentation);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the current user's profile image as a URL.\n     * @returns URL string\n     */\n    getCurrentUserProfileImage(): string {\n        return this.apiService.getInstance().activiti.profileApi.getProfilePictureUrl();\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Person } from '@alfresco/js-api';\nimport { EcmCompanyModel } from '../../models/ecm-company.model';\n\nexport class EcmUserModel implements Person {\n    id: string;\n    firstName: string;\n    lastName: string;\n    description: string;\n    avatarId: string;\n    email: string;\n    skypeId: string;\n    googleId: string;\n    instantMessageId: string;\n    jobTitle: string;\n    location: string;\n    company: EcmCompanyModel;\n    mobile: string;\n    telephone: string;\n    statusUpdatedAt: Date;\n    userStatus: string;\n    enabled: boolean;\n    emailNotificationsEnabled: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.firstName = obj && obj.firstName;\n        this.lastName = obj && obj.lastName;\n        this.description = obj && obj.description || null;\n        this.avatarId = obj && obj.avatarId || null;\n        this.email = obj && obj.email || null;\n        this.skypeId = obj && obj.skypeId;\n        this.googleId = obj && obj.googleId;\n        this.instantMessageId = obj && obj.instantMessageId;\n        this.jobTitle = obj && obj.jobTitle || null;\n        this.location = obj && obj.location || null;\n        this.company = obj && obj.company;\n        this.mobile = obj && obj.mobile;\n        this.telephone = obj && obj.telephone;\n        this.statusUpdatedAt = obj && obj.statusUpdatedAt;\n        this.userStatus = obj && obj.userStatus;\n        this.enabled = obj && obj.enabled;\n        this.emailNotificationsEnabled = obj && obj.emailNotificationsEnabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ContentService } from '../../services/content.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { EcmUserModel } from '../models/ecm-user.model';\nimport { PersonEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private contentService: ContentService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param userName Target username\n     * @returns User information\n     */\n    getUserInfo(userName: string): Observable<EcmUserModel> {\n        return from(this.apiService.getInstance().core.peopleApi.getPerson(userName))\n            .pipe(\n                map((personEntry: PersonEntry) => {\n                    return new EcmUserModel(personEntry.entry);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets information about the user who is currently logged-in.\n     * @returns User information as for getUserInfo\n     */\n    getCurrentUserInfo() {\n        return this.getUserInfo('-me-');\n    }\n\n    /**\n     * Returns a profile image as a URL.\n     * @param avatarId Target avatar\n     * @returns Image URL\n     */\n    getUserProfileImage(avatarId: string): string {\n        if (avatarId) {\n            return this.contentService.getContentUrl(avatarId);\n        }\n        return null;\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from '@alfresco/js-api';\n\nexport class IdentityUserModel {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    username: string;\n    createdTimestamp?: any;\n    emailVerified?: boolean;\n    enabled?: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.firstName = obj.firstName || null;\n            this.lastName = obj.lastName || null;\n            this.email = obj.email || null;\n            this.username = obj.username || null;\n            this.createdTimestamp = obj.createdTimestamp || null;\n            this.emailVerified = obj.emailVerified || null;\n            this.enabled = obj.enabled || null;\n        }\n    }\n}\n\nexport class IdentityUserPasswordModel {\n\n    type: string;\n    value: string;\n    temporary: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type;\n            this.value = obj.value;\n            this.temporary = obj.temporary;\n        }\n    }\n}\n\nexport interface IdentityUserQueryResponse {\n\n    entries: IdentityUserModel[];\n    pagination: Pagination;\n}\n\nexport class IdentityUserQueryCloudRequestModel {\n\n    first: number;\n    max: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.first = obj.first;\n            this.max = obj.max;\n        }\n    }\n}\n\nexport class IdentityJoinGroupRequestModel {\n\n    realm: string;\n    userId: string;\n    groupId: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.realm = obj.realm;\n            this.userId = obj.userId;\n            this.groupId = obj.groupId;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of, from, throwError } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport {\n    IdentityUserModel,\n    IdentityUserQueryResponse,\n    IdentityUserQueryCloudRequestModel,\n    IdentityUserPasswordModel,\n    IdentityJoinGroupRequestModel\n} from '../models/identity-user.model';\nimport { JwtHelperService } from '../../services/jwt-helper.service';\nimport { LogService } from '../../services/log.service';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { IdentityRoleModel } from '../models/identity-role.model';\nimport { IdentityGroupModel } from '../models/identity-group.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class IdentityUserService {\n\n    constructor(\n        private jwtHelperService: JwtHelperService,\n        private alfrescoApiService: AlfrescoApiService,\n        private appConfigService: AppConfigService,\n        private logService: LogService) { }\n\n    /**\n     * Gets the name and other basic details of the current user.\n     * @returns The user's details\n     */\n    getCurrentUserInfo(): IdentityUserModel {\n        const familyName = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.FAMILY_NAME);\n        const givenName = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.GIVEN_NAME);\n        const email = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.USER_EMAIL);\n        const username = this.jwtHelperService.getValueFromLocalAccessToken<string>(JwtHelperService.USER_PREFERRED_USERNAME);\n        const user = { firstName: givenName, lastName: familyName, email: email, username: username };\n        return new IdentityUserModel(user);\n    }\n\n    /**\n     * Find users based on search input.\n     * @param search Search query string\n     * @returns List of users\n     */\n    findUsersByName(search: string): Observable<any> {\n        if (search === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { search: search }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on username input.\n     * @param username Search query string\n     * @returns List of users\n     */\n    findUserByUsername(username: string): Observable<any> {\n        if (username === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { username: username }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on email input.\n     * @param email Search query string\n     * @returns List of users\n     */\n    findUserByEmail(email: string): Observable<any> {\n        if (email === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { email: email }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on id input.\n     * @param id Search query string\n     * @returns users object\n     */\n    findUserById(id: string): Observable<any> {\n        if (id === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl() + '/' + id;\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Get client roles of a user for a particular client.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns List of client roles\n     */\n    getClientRoles(userId: string, clientId: string): Observable<any[]> {\n        const url = this.buildUserClientRoleMapping(userId, clientId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        );\n    }\n\n    /**\n     * Checks whether user has access to a client app.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasClientApp(userId: string, clientId: string): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                if (clientRoles.length > 0) {\n                    return true;\n                }\n                return false;\n            })\n        );\n    }\n\n    /**\n     * Checks whether a user has any of the client app roles.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyClientAppRole(userId: string, clientId: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                let hasRole = false;\n                if (clientRoles.length > 0) {\n                    roleNames.forEach((roleName) => {\n                        const role = clientRoles.find((availableRole) => {\n                            return availableRole.name === roleName;\n                        });\n\n                        if (role) {\n                            hasRole = true;\n                            return;\n                        }\n                    });\n                }\n                return hasRole;\n            })\n        );\n    }\n\n    /**\n     * Gets the client ID for an application.\n     * @param applicationName Name of the application\n     * @returns Client ID string\n     */\n    getClientIdByApplicationName(applicationName: string): Observable<string> {\n        const url = this.buildGetClientsUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { clientId: applicationName }, bodyParam = {}, headerParams = {}, formParams = {},\n            contentTypes = ['application/json'], accepts = ['application/json'];\n        return from(this.alfrescoApiService.getInstance()\n            .oauth2Auth.callCustomApi(url, httpMethod, pathParams, queryParams, headerParams,\n                formParams, bodyParam, contentTypes,\n                accepts, Object, null, null)\n        ).pipe(\n            map((response: any[]) => {\n                const clientId = response && response.length > 0 ? response[0].id : '';\n                return clientId;\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has access to an application.\n     * @param userId ID of the user\n     * @param applicationName Name of the application\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasApplicationAccess(userId: string, applicationName: string): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasClientApp(userId, clientId);\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has any application role.\n     * @param userId ID of the target user\n     * @param applicationName Name of the application\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyApplicationRole(userId: string, applicationName: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasAnyClientAppRole(userId, clientId, roleNames);\n            })\n        );\n    }\n\n    /**\n     * Gets details for all users.\n     * @returns Array of user info objects\n     */\n    getUsers(): Observable<IdentityUserModel[]> {\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, authNames = [], contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam, authNames,\n            contentTypes, accepts, null, null)\n        ).pipe(\n            map((response: IdentityUserModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets a list of roles for a user.\n     * @param userId ID of the user\n     * @returns Array of role info objects\n     */\n    getUserRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildRolesUrl(userId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ).pipe(\n            map((response: IdentityRoleModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets an array of users (including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const users = await this.getUsers().toPromise();\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    /**\n     * Gets an array of users (not including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithoutCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const currentUser = this.getCurrentUserInfo();\n            let users = await this.getUsers().toPromise();\n\n            users = users.filter((user) => { return user.username !== currentUser.username; });\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    private async userHasAnyRole(userId: string, roleNames: string[]): Promise<boolean> {\n        const userRoles = await this.getUserRoles(userId).toPromise();\n        const hasAnyRole = roleNames.some((roleName) => {\n            const filteredRoles = userRoles.filter((userRole) => {\n                return userRole.name.toLocaleLowerCase() === roleName.toLocaleLowerCase();\n            });\n\n            return filteredRoles.length > 0;\n        });\n\n        return hasAnyRole;\n    }\n\n    /**\n     * Checks if a user has one of the roles from a list.\n     * @param userId ID of the target user\n     * @param roleNames Array of roles to check for\n     * @returns True if the user has one of the roles, false otherwise\n     */\n    checkUserHasRole(userId: string, roleNames: string[]): Observable<boolean> {\n        return this.getUserRoles(userId).pipe(map((userRoles: IdentityRoleModel[]) => {\n            let hasRole = false;\n            if (userRoles && userRoles.length > 0) {\n                roleNames.forEach((roleName: string) => {\n                    const role = userRoles.find((userRole) => {\n                        return roleName === userRole.name;\n                    });\n                    if (role) {\n                        hasRole = true;\n                        return;\n                    }\n                });\n            }\n            return hasRole;\n        }));\n    }\n\n    /**\n     * Gets details for all users.\n     * @returns Array of user information objects.\n     */\n    queryUsers(requestQuery: IdentityUserQueryCloudRequestModel): Observable<IdentityUserQueryResponse> {\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {},\n        queryParams = { first: requestQuery.first, max: requestQuery.max }, bodyParam = {}, headerParams = {},\n        formParams = {}, authNames = [], contentTypes = ['application/json'];\n\n        return this.getTotalUsersCount().pipe(\n                switchMap((totalCount: any) =>\n                from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam, authNames,\n                    contentTypes, null, null, null)\n                ).pipe(\n                    map((response: IdentityUserModel[]) => {\n                        return <IdentityUserQueryResponse> {\n                            entries: response,\n                            pagination: {\n                              skipCount: requestQuery.first,\n                              maxItems: requestQuery.max,\n                              count: totalCount,\n                              hasMoreItems: false,\n                              totalItems: totalCount\n                            }\n                          };\n                    }),\n                    catchError((error) => this.handleError(error))\n                    ))\n        );\n    }\n\n    /**\n     * Gets users total count.\n     * @returns Number of users count.\n     */\n    getTotalUsersCount(): Observable<number> {\n        const url = this.buildUserUrl() + `/count`;\n        const contentTypes = ['application/json'], accepts = ['application/json'];\n        return from(this.alfrescoApiService.getInstance()\n            .oauth2Auth.callCustomApi(url, 'GET',\n              null, null, null,\n              null, null, contentTypes,\n              accepts, null, null, null\n              )).pipe(\n                catchError((error) => this.handleError(error))\n            );\n    }\n\n    /**\n     * Creates new user.\n     * @param newUser Object containing the new user details.\n     * @returns Empty response when the user created.\n     */\n    createUser(newUser: IdentityUserModel): Observable<any> {\n        const url = this.buildUserUrl();\n        const request = JSON.stringify(newUser);\n        const httpMethod = 'POST', pathParams = {}, queryParams = {}, bodyParam = request, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    /**\n     * Updates user details.\n     * @param userId Id of the user.\n     * @param updatedUser Object containing the user details.\n     * @returns Empty response when the user updated.\n     */\n    updateUser(userId: string, updatedUser: IdentityUserModel): Observable<any> {\n        const url = this.buildUserUrl() + '/' + userId;\n        const request = JSON.stringify(updatedUser);\n        const httpMethod = 'PUT', pathParams = {} , queryParams = {}, bodyParam = request, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    /**\n     * Deletes User.\n     * @param userId Id of the  user.\n     * @returns Empty response when the user deleted.\n     */\n    deleteUser(userId: string): Observable<any> {\n        const url = this.buildUserUrl() + '/' + userId;\n        const httpMethod = 'DELETE', pathParams = {} , queryParams = {}, bodyParam = {}, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    /**\n     * Changes user password.\n     * @param userId Id of the user.\n     * @param credentials Details of user Credentials.\n     * @returns Empty response when the password changed.\n     */\n    changePassword(userId: string, newPassword: IdentityUserPasswordModel): Observable<any> {\n        const url = this.buildUserUrl() + '/' + userId + '/reset-password';\n        const request = JSON.stringify(newPassword);\n        const httpMethod = 'PUT', pathParams = {} , queryParams = {}, bodyParam = request, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    /**\n     * Gets involved groups.\n     * @param userId Id of the user.\n     * @returns Array of involved groups information objects.\n     */\n    getInvolvedGroups(userId: string): Observable<IdentityGroupModel[]> {\n        const url = this.buildUserUrl() + '/' + userId + '/groups/';\n        const httpMethod = 'GET', pathParams = { id: userId},\n        queryParams = {}, bodyParam = {}, headerParams = {},\n        formParams = {}, authNames = [], contentTypes = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam, authNames,\n                    contentTypes, null, null, null\n                    )).pipe(\n                        catchError((error) => this.handleError(error))\n                    );\n    }\n\n    /**\n     * Joins group.\n     * @param joinGroupRequest Details of join group request (IdentityJoinGroupRequestModel).\n     * @returns Empty response when the user joined the group.\n     */\n    joinGroup(joinGroupRequest: IdentityJoinGroupRequestModel): Observable<any> {\n        const url = this.buildUserUrl() + '/' + joinGroupRequest.userId + '/groups/' + joinGroupRequest.groupId;\n        const request = JSON.stringify(joinGroupRequest);\n        const httpMethod = 'PUT', pathParams = {} , queryParams = {}, bodyParam = request, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    /**\n     * Leaves group.\n     * @param userId Id of the user.\n     * @param groupId Id of the  group.\n     * @returns Empty response when the user left the group.\n     */\n    leaveGroup(userId: any, groupId: string): Observable<any> {\n        const url = this.buildUserUrl() + '/' + userId + '/groups/' + groupId;\n        const httpMethod = 'DELETE', pathParams = {} , queryParams = {}, bodyParam = {}, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    /**\n     * Gets available roles\n     * @param userId Id of the user.\n     * @returns Array of available roles information objects\n     */\n    getAvailableRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildUserUrl() + '/' + userId + '/role-mappings/realm/available';\n        const httpMethod = 'GET', pathParams = {},\n        queryParams = {}, bodyParam = {}, headerParams = {},\n        formParams = {}, authNames = [], contentTypes = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam, authNames,\n                    contentTypes, null, null, null\n                    )).pipe(\n                        catchError((error) => this.handleError(error))\n                    );\n    }\n\n    /**\n     * Gets assigned roles.\n     * @param userId Id of the user.\n     * @returns Array of assigned roles information objects\n     */\n    getAssignedRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildUserUrl() + '/' + userId + '/role-mappings/realm';\n        const httpMethod = 'GET', pathParams = { id: userId},\n        queryParams = {}, bodyParam = {}, headerParams = {},\n        formParams = {}, authNames = [], contentTypes = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam, authNames,\n                    contentTypes, null, null, null\n                    )).pipe(\n                        catchError((error) => this.handleError(error))\n                    );\n    }\n\n    /**\n     * Gets effective roles.\n     * @param userId Id of the user.\n     * @returns Array of composite roles information objects\n     */\n    getEffectiveRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildUserUrl() + '/' + userId + '/role-mappings/realm/composite';\n        const httpMethod = 'GET', pathParams = { id: userId},\n        queryParams = {}, bodyParam = {}, headerParams = {},\n        formParams = {}, authNames = [], contentTypes = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n                    url, httpMethod, pathParams, queryParams,\n                    headerParams, formParams, bodyParam, authNames,\n                    contentTypes, null, null, null\n                    )).pipe(\n                        catchError((error) => this.handleError(error))\n                    );\n    }\n\n    /**\n     * Assigns roles to the user.\n     * @param userId Id of the user.\n     * @param roles Array of roles.\n     * @returns Empty response when the role assigned.\n     */\n    assignRoles(userId: string, roles: IdentityRoleModel[]): Observable<any> {\n        const url = this.buildUserUrl() + '/' + userId + '/role-mappings/realm';\n        const request = JSON.stringify(roles);\n        const httpMethod = 'POST', pathParams = {} , queryParams = {}, bodyParam = request, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    /**\n     * Removes assigned roles.\n     * @param userId Id of the user.\n     * @param roles Array of roles.\n     * @returns Empty response when the role removed.\n     */\n    removeRoles(userId: string, removedRoles: IdentityRoleModel[]): Observable<any> {\n        const url = this.buildUserUrl() + '/' + userId + '/role-mappings/realm';\n        const request = JSON.stringify(removedRoles);\n        const httpMethod = 'DELETE', pathParams = {} , queryParams = {}, bodyParam = request, headerParams = {},\n        formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.alfrescoApiService.getInstance().oauth2Auth.callCustomApi(\n        url, httpMethod, pathParams, queryParams,\n        headerParams, formParams, bodyParam,\n        contentTypes, accepts, null, null, null\n        )).pipe(\n            catchError((error) => this.handleError(error))\n        );\n    }\n\n    private buildUserUrl(): any {\n        return `${this.appConfigService.get('identityHost')}/users`;\n    }\n\n    private buildUserClientRoleMapping(userId: string, clientId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/clients/${clientId}`;\n    }\n\n    private buildRolesUrl(userId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/realm/composite`;\n    }\n\n    private buildGetClientsUrl() {\n        return `${this.appConfigService.get('identityHost')}/clients`;\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { BpmUserModel } from './../models/bpm-user.model';\nimport { EcmUserModel } from './../models/ecm-user.model';\nimport { IdentityUserModel } from './../models/identity-user.model';\nimport { BpmUserService } from './../services/bpm-user.service';\nimport { EcmUserService } from './../services/ecm-user.service';\nimport { IdentityUserService } from '../services/identity-user.service';\nimport { of, Observable } from 'rxjs';\nimport { MatMenuTrigger } from '@angular/material';\n\n@Component({\n    selector: 'adf-userinfo',\n    styleUrls: ['./user-info.component.scss'],\n    templateUrl: './user-info.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class UserInfoComponent implements OnInit {\n\n    @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\n\n    /** Custom path for the background banner image for ACS users. */\n    @Input()\n    ecmBackgroundImage: string = './assets/images/ecm-background.png';\n\n    /** Custom path for the background banner image for APS users. */\n    @Input()\n    bpmBackgroundImage: string = './assets/images/bpm-background.png';\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    /** Shows/hides the username next to the user info button. */\n    @Input()\n    showName: boolean = true;\n\n    /** When the username is shown, this defines its position relative to the user info button.\n     * Can be `right` or `left`.\n     */\n    @Input()\n    namePosition: string = 'right';\n\n    ecmUser$: Observable<EcmUserModel>;\n    bpmUser$: Observable<BpmUserModel>;\n    identityUser$: Observable<IdentityUserModel>;\n    selectedIndex: number;\n\n    constructor(private ecmUserService: EcmUserService,\n                private bpmUserService: BpmUserService,\n                private identityUserService: IdentityUserService,\n                private authService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.getUserInfo();\n    }\n\n    getUserInfo() {\n        if (this.authService.isOauth()) {\n            this.loadIdentityUserInfo();\n        } else if (this.authService.isEcmLoggedIn() && this.authService.isBpmLoggedIn()) {\n            this.loadEcmUserInfo();\n            this.loadBpmUserInfo();\n        } else if (this.authService.isEcmLoggedIn()) {\n            this.loadEcmUserInfo();\n        } else if (this.authService.isBpmLoggedIn()) {\n            this.loadBpmUserInfo();\n        }\n    }\n\n    onKeyPress(event: KeyboardEvent) {\n        this.closeUserModal(event);\n    }\n\n    private closeUserModal($event: KeyboardEvent) {\n        if ($event.keyCode === 27 ) {\n            this.trigger.closeMenu();\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isLoggedIn();\n    }\n\n    loadEcmUserInfo(): void {\n        this.ecmUser$ = this.ecmUserService.getCurrentUserInfo();\n    }\n\n    loadBpmUserInfo() {\n        this.bpmUser$ = this.bpmUserService.getCurrentUserInfo();\n    }\n\n    loadIdentityUserInfo() {\n        this.identityUser$ = of(this.identityUserService.getCurrentUserInfo());\n    }\n\n    stopClosing(event) {\n        event.stopPropagation();\n    }\n\n    getEcmAvatar(avatarId: any ): string {\n        return this.ecmUserService.getUserProfileImage(avatarId);\n    }\n\n    getBpmUserImage(): string {\n        return this.bpmUserService.getCurrentUserProfileImage();\n    }\n\n    showOnRight(): boolean {\n        return this.namePosition === 'right';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class IdentityRoleModel {\n    id: string;\n    name: string;\n    description?: string;\n    clientRole?: boolean;\n    composite?: boolean;\n    containerId?: string;\n    scopeParamRequired?: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.description = obj.description || null;\n            this.clientRole = obj.clientRole || null;\n            this.composite = obj.composite || null;\n            this.containerId = obj.containerId || null;\n            this.scopeParamRequired = obj.scopeParamRequired || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class IdentityGroupModel {\n\n    id: string;\n    name: string;\n    path: string;\n    realmRoles: string[];\n    clientRoles: any;\n    access: any;\n    attributes: any;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.path = obj.path || null;\n            this.realmRoles = obj.realmRoles || null;\n            this.clientRoles = obj.clientRoles || null;\n            this.access = obj.access || null;\n            this.attributes = obj.attributes || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { UserInfoComponent } from './components/user-info.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        UserInfoComponent\n    ],\n    exports: [\n        UserInfoComponent\n    ]\n})\nexport class UserInfoModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl, FormControl } from '@angular/forms';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\nimport { ENTER } from '@angular/cdk/keycodes';\n\n@Component({\n    selector: 'adf-host-settings',\n    templateUrl: 'host-settings.component.html',\n    host: {\n        'class': 'adf-host-settings'\n    },\n    styleUrls: ['host-settings.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HostSettingsComponent implements OnInit {\n\n    HOST_REGEX: string = '^(http|https):\\/\\/.*[^/]$';\n\n    /**\n     * Tells the component which provider options are available. Possible valid values\n     * are \"ECM\" (Content), \"BPM\" (Process) , \"ALL\" (Content and Process), 'OAUTH2' SSO.\n     */\n    @Input()\n    providers: string[] = ['BPM', 'ECM', 'ALL'];\n\n    showSelectProviders = true;\n\n    form: FormGroup;\n\n    /** Emitted when the URL is invalid. */\n    @Output()\n    error = new EventEmitter<string>();\n\n    /** Emitted when the user cancels the changes. */\n    @Output()\n    cancel = new EventEmitter<boolean>();\n\n    /** Emitted when the changes are successfully applied. */\n    @Output()\n    success = new EventEmitter<boolean>();\n\n    constructor(private formBuilder: FormBuilder,\n                private storageService: StorageService,\n                private alfrescoApiService: AlfrescoApiService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        if (this.providers.length === 1) {\n            this.showSelectProviders = false;\n        }\n\n        const providerSelected = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n        const authType = this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC');\n\n        this.form = this.formBuilder.group({\n            providersControl: [providerSelected, Validators.required],\n            authType: authType\n        });\n\n        this.addFormGroups();\n\n        if (authType === 'OAUTH') {\n            this.addOAuthFormGroup();\n            this.addIdentityHostFormControl();\n        }\n\n        this.form.get('authType').valueChanges.subscribe((value) => {\n            if (value === 'BASIC') {\n                this.form.removeControl('oauthConfig');\n                this.form.removeControl('identityHost');\n            } else {\n                this.addOAuthFormGroup();\n                this.addIdentityHostFormControl();\n            }\n        });\n\n        this.providersControl.valueChanges.subscribe(() => {\n            this.removeFormGroups();\n            this.addFormGroups();\n        });\n    }\n\n    private removeFormGroups() {\n        this.form.removeControl('bpmHost');\n        this.form.removeControl('ecmHost');\n    }\n\n    private addFormGroups() {\n        this.addBPMFormControl();\n        this.addECMFormControl();\n    }\n\n    private addOAuthFormGroup() {\n        const oauthFormGroup = this.createOAuthFormGroup();\n        this.form.addControl('oauthConfig', oauthFormGroup);\n    }\n\n    private addBPMFormControl() {\n        if ((this.isBPM() || this.isALL() || this.isOAUTH()) && !this.bpmHost) {\n            const bpmFormControl = this.createBPMFormControl();\n            this.form.addControl('bpmHost', bpmFormControl);\n        }\n    }\n\n    private addIdentityHostFormControl() {\n        const identityHostFormControl = this.createIdentityFormControl();\n        this.form.addControl('identityHost', identityHostFormControl);\n    }\n\n    private addECMFormControl() {\n        if ((this.isECM() || this.isALL()) && !this.ecmHost) {\n            const ecmFormControl = this.createECMFormControl();\n            this.form.addControl('ecmHost', ecmFormControl);\n        }\n    }\n\n    private createOAuthFormGroup(): AbstractControl {\n        const oauth = <OauthConfigModel> this.appConfig.get(AppConfigValues.OAUTHCONFIG, {});\n\n        return this.formBuilder.group({\n            host: [oauth.host, [Validators.required, Validators.pattern(this.HOST_REGEX)]],\n            clientId: [oauth.clientId, Validators.required],\n            redirectUri: [oauth.redirectUri, Validators.required],\n            redirectUriLogout: [oauth.redirectUriLogout],\n            scope: [oauth.scope, Validators.required],\n            secret: oauth.secret,\n            silentLogin: oauth.silentLogin,\n            implicitFlow: oauth.implicitFlow\n        });\n    }\n\n    private createBPMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.BPMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createIdentityFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.IDENTITY_HOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createECMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.ECMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    onCancel() {\n        this.cancel.emit(true);\n    }\n\n    onSubmit(values: any) {\n        this.storageService.setItem(AppConfigValues.PROVIDERS, values.providersControl);\n\n        if (this.isBPM()) {\n            this.saveBPMValues(values);\n        } else if (this.isECM()) {\n            this.saveECMValues(values);\n        } else if (this.isALL()) {\n            this.saveECMValues(values);\n            this.saveBPMValues(values);\n        }\n\n        if (this.isOAUTH()) {\n            this.saveOAuthValues(values);\n        }\n\n        this.storageService.setItem(AppConfigValues.AUTHTYPE, values.authType);\n\n        this.alfrescoApiService.reset();\n        this.alfrescoApiService.getInstance().invalidateSession();\n        this.success.emit(true);\n    }\n\n    keyDownFunction(event: any) {\n        if (event.keyCode === ENTER && this.form.valid) {\n            this.onSubmit(this.form.value);\n        }\n    }\n\n    private saveOAuthValues(values: any) {\n        this.storageService.setItem(AppConfigValues.OAUTHCONFIG, JSON.stringify(values.oauthConfig));\n        this.storageService.setItem(AppConfigValues.IDENTITY_HOST, values.identityHost);\n    }\n\n    private saveBPMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.BPMHOST, values.bpmHost);\n    }\n\n    private saveECMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.ECMHOST, values.ecmHost);\n    }\n\n    isBPM(): boolean {\n        return this.providersControl.value === 'BPM';\n    }\n\n    isECM(): boolean {\n        return this.providersControl.value === 'ECM';\n    }\n\n    isALL(): boolean {\n        return this.providersControl.value === 'ALL';\n    }\n\n    isOAUTH(): boolean {\n        return this.form.get('authType').value === 'OAUTH';\n    }\n\n    get providersControl(): AbstractControl {\n        return this.form.get('providersControl');\n    }\n\n    get bpmHost(): AbstractControl {\n        return this.form.get('bpmHost');\n    }\n\n    get ecmHost(): AbstractControl {\n        return this.form.get('ecmHost');\n    }\n\n    get host(): AbstractControl {\n        return this.oauthConfig.get('host');\n    }\n\n    get identityHost(): AbstractControl {\n        return this.form.get('identityHost');\n    }\n\n    get clientId(): AbstractControl {\n        return this.oauthConfig.get('clientId');\n    }\n\n    get scope(): AbstractControl {\n        return this.oauthConfig.get('scope');\n    }\n\n    get secretId(): AbstractControl {\n        return this.oauthConfig.get('secretId');\n    }\n\n    get implicitFlow(): AbstractControl {\n        return this.oauthConfig.get('implicitFlow');\n    }\n\n    get silentLogin(): AbstractControl {\n        return this.oauthConfig.get('silentLogin');\n    }\n\n    get redirectUri(): AbstractControl {\n        return this.oauthConfig.get('redirectUri');\n    }\n\n    get redirectUriLogout(): AbstractControl {\n        return this.oauthConfig.get('redirectUriLogout');\n    }\n\n    get oauthConfig(): AbstractControl {\n        return this.form.get('oauthConfig');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HostSettingsComponent } from './host-settings.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HostSettingsComponent\n    ],\n    exports: [\n        HostSettingsComponent\n    ]\n})\nexport class HostSettingsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation,\n    ChangeDetectorRef, OnDestroy, HostBinding\n} from '@angular/core';\n\nimport { Pagination } from '@alfresco/js-api';\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { Subject } from 'rxjs';\nimport { PaginationModel } from '../models/pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-pagination',\n    host: { 'class': 'adf-pagination' },\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    static ACTIONS = {\n        NEXT_PAGE: 'NEXT_PAGE',\n        PREV_PAGE: 'PREV_PAGE',\n        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',\n        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'\n    };\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    target: PaginatedComponent;\n\n    /** An array of page sizes. */\n    @Input()\n    supportedPageSizes: number[];\n\n    /** Pagination object. */\n    @Input()\n    pagination: PaginationModel = PaginationComponent.DEFAULT_PAGINATION;\n\n    /** Emitted when pagination changes in any way. */\n    @Output()\n    change: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page number changes. */\n    @Output()\n    changePageNumber: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page size changes. */\n    @Output()\n    changePageSize: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the next page is requested. */\n    @Output()\n    nextPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the previous page is requested. */\n    @Output()\n    prevPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.PaginationSize)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(pagSize => this.pagination.maxItems = pagSize);\n\n        if (!this.supportedPageSizes) {\n            this.supportedPageSizes = this.userPreferencesService.supportedPageSizes;\n        }\n\n        if (this.target) {\n            this.target.pagination\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe(pagination => {\n                    if (pagination.count === 0 && !this.isFirstPage) {\n                        this.goPrevious();\n                    }\n\n                    this.pagination = pagination;\n                    this.cdr.detectChanges();\n                });\n        }\n\n        if (!this.pagination) {\n            this.pagination = PaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    get lastPage(): number {\n        const { maxItems, totalItems } = this.pagination;\n\n        return (totalItems && maxItems)\n            ? Math.ceil(totalItems / maxItems)\n            : 1;\n    }\n\n    get current(): number {\n        const { maxItems, skipCount } = this.pagination;\n\n        return (skipCount && maxItems)\n            ? Math.floor(skipCount / maxItems) + 1\n            : 1;\n    }\n\n    get isLastPage(): boolean {\n        return this.current === this.lastPage;\n    }\n\n    get isFirstPage(): boolean {\n        return this.current === 1;\n    }\n\n    get next(): number {\n        return this.isLastPage ? this.current : this.current + 1;\n    }\n\n    get previous(): number {\n        return this.isFirstPage ? 1 : this.current - 1;\n    }\n\n    get hasItems(): boolean {\n        return this.pagination && this.pagination.count > 0;\n    }\n\n    @HostBinding('class.adf-pagination__empty')\n    get isEmpty(): boolean {\n        return !this.hasItems;\n    }\n\n    get range(): number[] {\n        const { skipCount, maxItems, totalItems } = this.pagination;\n        const { isLastPage } = this;\n\n        const start = totalItems ? skipCount + 1 : 0;\n        const end = isLastPage ? totalItems : skipCount + maxItems;\n\n        return [start, end];\n    }\n\n    get pages(): number[] {\n        return Array(this.lastPage)\n            .fill('n')\n            .map((item, index) => (index + 1));\n    }\n\n    goNext() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.next - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    goPrevious() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.previous - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageNumber(pageNumber: number) {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (pageNumber - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageSize(maxItems: number) {\n        this.pagination.skipCount = 0;\n        this.userPreferencesService.paginationSize = maxItems;\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {\n            skipCount: 0,\n            maxItems\n        });\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    handlePaginationEvent(action: string, params: PaginationModel) {\n        const {\n            NEXT_PAGE,\n            PREV_PAGE,\n            CHANGE_PAGE_NUMBER,\n            CHANGE_PAGE_SIZE\n        } = PaginationComponent.ACTIONS;\n\n        const {\n            change,\n            changePageNumber,\n            changePageSize,\n            nextPage,\n            prevPage,\n            pagination\n        } = this;\n\n        const paginationModel: PaginationModel = Object.assign({}, pagination, params);\n\n        if (action === NEXT_PAGE) {\n            nextPage.emit(paginationModel);\n        }\n\n        if (action === PREV_PAGE) {\n            prevPage.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_NUMBER) {\n            changePageNumber.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_SIZE) {\n            changePageSize.emit(paginationModel);\n        }\n\n        change.emit(params);\n\n        if (this.target) {\n            this.target.updatePagination(params);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n    Input, OnInit, Output, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { Subject } from 'rxjs';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { PaginationModel } from '../models/pagination.model';\nimport { RequestPaginationModel } from '../models/request-pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { Pagination } from '@alfresco/js-api';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-infinite-pagination',\n    host: { 'class': 'infinite-adf-pagination' },\n    templateUrl: './infinite-pagination.component.html',\n    styleUrls: ['./infinite-pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InfinitePaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    _target: PaginatedComponent;\n    private onDestroy$ = new Subject<boolean>();\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    set target(target: PaginatedComponent) {\n        if (target) {\n            this._target = target;\n            target.pagination\n                .pipe(takeUntil(this.onDestroy$))\n                .subscribe(pagination => {\n                    this.isLoading = false;\n                    this.pagination = pagination;\n\n                    if (!this.pagination.hasMoreItems) {\n                        this.pagination.hasMoreItems = false;\n                    }\n\n                    this.cdr.detectChanges();\n                });\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    /** Number of items that are added with each \"load more\" event. */\n    @Input()\n    pageSize: number;\n\n    /** Is a new page loading? */\n    @Input('loading')\n    isLoading: boolean = false;\n\n    /** Emitted when the \"Load More\" button is clicked. */\n    @Output()\n    loadMore: EventEmitter<RequestPaginationModel> = new EventEmitter<RequestPaginationModel>();\n\n    pagination: PaginationModel = InfinitePaginationComponent.DEFAULT_PAGINATION;\n\n    requestPaginationModel: RequestPaginationModel = {\n        skipCount: 0,\n        merge: true\n    };\n\n    constructor(private cdr: ChangeDetectorRef,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.PaginationSize)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((pageSize: number) => {\n                this.pageSize = this.pageSize || pageSize;\n                this.requestPaginationModel.maxItems = this.pageSize;\n            });\n    }\n\n    onLoadMore() {\n        this.requestPaginationModel.skipCount = 0;\n        this.requestPaginationModel.merge = false;\n\n        this.requestPaginationModel.maxItems += this.pageSize;\n\n        this.loadMore.next(this.requestPaginationModel);\n\n        if (this._target) {\n            this.isLoading = true;\n            this._target.updatePagination(<RequestPaginationModel> this.requestPaginationModel);\n        }\n    }\n\n    reset() {\n        this.pagination.skipCount = 0;\n        this.pagination.maxItems = this.pageSize;\n\n        if (this._target) {\n            this._target.updatePagination(this.pagination);\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { InfinitePaginationComponent } from './infinite-pagination.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ],\n    exports: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ]\n})\nexport class PaginationModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginErrorEvent {\n    constructor(public err: any) {}\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSubmitEvent {\n\n    private _values: any;\n    private _defaultPrevented: boolean = false;\n\n    get values(): any {\n        return this._values;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(_values: any) {\n        this._values = _values;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSuccessEvent {\n    constructor(\n        public token: any,\n        public username: string,\n        public password: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter,\n    Input, OnInit, Output, TemplateRef, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { LogService } from '../../services/log.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\nimport { LoginErrorEvent } from '../models/login-error.event';\nimport { LoginSubmitEvent } from '../models/login-submit.event';\nimport { LoginSuccessEvent } from '../models/login-success.event';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../../app-config/app-config.service';\nimport { OauthConfigModel } from '../../models/oauth-config.model';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nenum LoginSteps {\n    Landing = 0,\n    Checking = 1,\n    Welcome = 2\n}\n\ninterface ValidationMessage {\n    value: string;\n    params?: any;\n}\n\n@Component({\n    selector: 'adf-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-login'\n    }\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n    isPasswordShow: boolean = false;\n\n    /**\n     * Should the `Remember me` checkbox be shown? When selected, this\n     * option will remember the logged-in user after the browser is closed\n     * to avoid logging in repeatedly.\n     */\n    @Input()\n    showRememberMe: boolean = true;\n\n    /** Should the extra actions (`Need Help`, `Register`, etc) be shown? */\n    @Input()\n    showLoginActions: boolean = true;\n\n    /** Sets the URL of the NEED HELP link in the footer. */\n    @Input()\n    needHelpLink: string = '';\n\n    /** Sets the URL of the REGISTER link in the footer. */\n    @Input()\n    registerLink: string = '';\n\n    /** Path to a custom logo image. */\n    @Input()\n    logoImageUrl: string = './assets/images/alfresco-logo.svg';\n\n    /** Path to a custom background image. */\n    @Input()\n    backgroundImageUrl: string = './assets/images/background.svg';\n\n    /** The copyright text below the login box. */\n    @Input()\n    copyrightText: string = '\\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';\n\n    /** Custom validation rules for the login form. */\n    @Input()\n    fieldsValidation: any;\n\n    /** Route to redirect to on successful login. */\n    @Input()\n    successRoute: string = null;\n\n    /** Emitted when the login is successful. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    /** Emitted when the login fails. */\n    @Output()\n    error = new EventEmitter<LoginErrorEvent>();\n\n    /** Emitted when the login form is submitted. */\n    @Output()\n    executeSubmit = new EventEmitter<LoginSubmitEvent>();\n\n    implicitFlow: boolean = false;\n\n    form: FormGroup;\n    isError: boolean = false;\n    errorMsg: string;\n    actualLoginStep: any = LoginSteps.Landing;\n    LoginSteps: any = LoginSteps;\n    rememberMe: boolean = true;\n    formError: { [id: string]: string };\n    minLength: number = 2;\n    footerTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    data: any;\n\n    private _message: { [id: string]: { [id: string]: ValidationMessage } };\n    private onDestroy$ = new Subject<boolean>();\n\n    /**\n     * Constructor\n     * @param _fb\n     * @param authService\n     * @param translate\n     */\n    constructor(\n        private _fb: FormBuilder,\n        private authService: AuthenticationService,\n        private translateService: TranslationService,\n        private logService: LogService,\n        private router: Router,\n        private appConfig: AppConfigService,\n        private userPreferences: UserPreferencesService,\n        private location: Location,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer\n    ) {\n        this.initFormError();\n        this.initFormFieldsMessages();\n    }\n\n    ngOnInit() {\n        if (this.authService.isOauth()) {\n            const oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n            if (oauth && oauth.implicitFlow) {\n                this.implicitFlow = true;\n            }\n        }\n\n        if (this.authService.isEcmLoggedIn() || this.authService.isBpmLoggedIn()) {\n            this.location.forward();\n        } else {\n            this.route.queryParams.subscribe((params: Params) => {\n                const url = params['redirectUrl'];\n                const provider = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n                this.authService.setRedirect({ provider, url });\n              });\n        }\n\n        if (this.hasCustomFieldsValidation()) {\n            this.form = this._fb.group(this.fieldsValidation);\n        } else {\n            this.initFormFieldsDefault();\n            this.initFormFieldsMessagesDefault();\n        }\n        this.form.valueChanges\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(data => this.onValueChanged(data));\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    submit() {\n        this.onSubmit(this.form.value);\n    }\n\n    /**\n     * Method called on submit form\n     * @param values\n     * @param event\n     */\n    onSubmit(values: any) {\n        this.disableError();\n\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            const args = new LoginSubmitEvent({\n                controls: { username: this.form.controls.username }\n            });\n            this.executeSubmit.emit(args);\n\n            if (args.defaultPrevented) {\n                return false;\n            } else {\n                this.performLogin(values);\n            }\n        }\n    }\n\n    implicitLogin() {\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            this.authService.ssoImplicitLogin();\n        }\n    }\n\n    /**\n     * The method check the error in the form and push the error in the formError object\n     * @param data\n     */\n    onValueChanged(data: any) {\n        this.disableError();\n        for (const field in this.formError) {\n            if (field) {\n                this.formError[field] = '';\n                const hasError =\n                    (this.form.controls[field].errors && data[field] !== '') ||\n                    (this.form.controls[field].dirty &&\n                        !this.form.controls[field].valid);\n                if (hasError) {\n                    for (const key in this.form.controls[field].errors) {\n                        if (key) {\n                            const message = this._message[field][key];\n                            if (message && message.value) {\n                                const translated = this.translateService.instant(message.value, message.params);\n                                this.formError[field] += translated;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private performLogin(values: any) {\n        this.actualLoginStep = LoginSteps.Checking;\n        this.authService\n            .login(values.username, values.password, this.rememberMe)\n            .subscribe(\n                (token: any) => {\n                    const redirectUrl = this.authService.getRedirect();\n\n                    this.actualLoginStep = LoginSteps.Welcome;\n                    this.userPreferences.setStoragePrefix(values.username);\n                    values.password = null;\n                    this.success.emit(\n                        new LoginSuccessEvent(token, values.username, null)\n                    );\n\n                    if (redirectUrl) {\n                        this.authService.setRedirect(null);\n                        this.router.navigateByUrl(redirectUrl);\n                    } else if (this.successRoute) {\n                        this.router.navigate([this.successRoute]);\n                    }\n                },\n                (err: any) => {\n                    this.actualLoginStep = LoginSteps.Landing;\n                    this.displayErrorMessage(err);\n                    this.isError = true;\n                    this.error.emit(new LoginErrorEvent(err));\n                },\n                () => this.logService.info('Login done')\n            );\n    }\n\n    /**\n     * Check and display the right error message in the UI\n     */\n    private displayErrorMessage(err: any): void {\n        if (\n            err.error &&\n            err.error.crossDomain &&\n            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1\n        ) {\n            this.errorMsg = err.error.message;\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('Invalid CSRF-token') !== -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('The system is currently in read-only mode') !==\n            -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';\n        } else {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';\n        }\n    }\n\n    /**\n     * Add a custom form error for a field\n     * @param field\n     * @param msg\n     */\n    public addCustomFormError(field: string, msg: string) {\n        this.formError[field] += msg;\n    }\n\n    /**\n     * Add a custom validation rule error for a field\n     * @param field\n     * @param ruleId - i.e. required | minlength | maxlength\n     * @param msg\n     */\n    addCustomValidationError(\n        field: string,\n        ruleId: string,\n        msg: string,\n        params?: any\n    ) {\n        this._message[field][ruleId] = {\n            value: msg,\n            params\n        };\n    }\n\n    /**\n     * Display and hide the password value.\n     */\n    toggleShowPassword() {\n        this.isPasswordShow = !this.isPasswordShow;\n    }\n\n    /**\n     * The method return if a field is valid or not\n     * @param field\n     */\n    isErrorStyle(field: AbstractControl) {\n        return !field.valid && field.dirty && !field.pristine;\n    }\n\n    /**\n     * Trim username\n     */\n    trimUsername(event: any) {\n        event.target.value = event.target.value.trim();\n    }\n\n    getBackgroundUrlImageUrl() {\n        return  this.sanitizer.bypassSecurityTrustStyle(`url(${this.backgroundImageUrl})`);\n    }\n\n    /**\n     * Default formError values\n     */\n    private initFormError() {\n        this.formError = {\n            username: '',\n            password: ''\n        };\n    }\n\n    /**\n     * Init form fields messages\n     */\n    private initFormFieldsMessages() {\n        this._message = {\n            username: {},\n            password: {}\n        };\n    }\n\n    /**\n     * Default form fields messages\n     */\n    private initFormFieldsMessagesDefault() {\n        this._message = {\n            username: {\n                required: {\n                    value: 'LOGIN.MESSAGES.USERNAME-REQUIRED'\n                },\n                minLength: {\n                    value: 'LOGIN.MESSAGES.USERNAME-MIN',\n                    params: {\n                        get minLength() {\n                            return this.minLength;\n                        }\n                    }\n                }\n\n            },\n            password: {\n                required: {\n                    value: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'\n                }\n            }\n        };\n    }\n\n    private initFormFieldsDefault() {\n        this.form = this._fb.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Disable the error flag\n     */\n    private disableError() {\n        this.isError = false;\n        this.initFormError();\n    }\n\n    private hasCustomFieldsValidation(): boolean {\n        return this.fieldsValidation !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-header, login-header'\n})\nexport class LoginHeaderDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.headerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-footer, login-footer'\n})\nexport class LoginFooterDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.footerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginDialogComponentData } from './login-dialog-component-data.interface';\nimport { LoginDialogPanelComponent } from './login-dialog-panel.component';\n@Component({\n    selector: 'adf-login-dialog',\n    templateUrl: './login-dialog.component.html',\n    styleUrls: ['./login-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    buttonActionName = '';\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: LoginDialogComponentData) {\n        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';\n    }\n\n    close() {\n        this.data.logged.complete();\n    }\n\n    submitForm(): void {\n        this.loginPanel.submitForm();\n    }\n\n    onLoginSuccess(event: any) {\n        this.data.logged.next(event);\n        this.close();\n    }\n\n    isFormValid() {\n        return this.loginPanel ? this.loginPanel.isValid() : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { LoginSuccessEvent } from '../models/login-success.event';\n\n@Component({\n    selector: 'adf-login-dialog-panel',\n    templateUrl: './login-dialog-panel.component.html',\n    styleUrls: ['./login-dialog-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogPanelComponent {\n    /** Emitted when the login succeeds. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    @ViewChild('adfLogin')\n    login: LoginComponent;\n\n    submitForm(): void {\n        this.login.submit();\n    }\n\n    onLoginSuccess(event: LoginSuccessEvent) {\n        this.success.emit(event);\n    }\n\n    isValid() {\n        return this.login && this.login.form ? this.login.form.valid : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LoginComponent } from './components/login.component';\nimport { LoginFooterDirective } from './directives/login-footer.directive';\nimport { LoginHeaderDirective } from './directives/login-header.directive';\nimport { LoginDialogComponent } from './components/login-dialog.component';\nimport { LoginDialogPanelComponent } from './components/login-dialog-panel.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ],\n    entryComponents: [LoginDialogComponent, LoginDialogPanelComponent],\n    exports: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ]\n})\nexport class LoginModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserPreferencesService } from '../services/user-preferences.service';\nimport { LanguageItem } from './language.interface';\n\n@Component({\n    selector: 'adf-language-menu',\n    templateUrl: 'language-menu.component.html'\n})\nexport class LanguageMenuComponent implements OnInit {\n\n    languages: Array<LanguageItem> = [\n        { key: 'en', label: 'English'}\n    ];\n\n    constructor(\n        private appConfig: AppConfigService,\n        private userPreference: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        const languagesConfigApp = this.appConfig.get<Array<LanguageItem>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY);\n        if (languagesConfigApp) {\n            this.languages = languagesConfigApp;\n        }\n    }\n\n    changeLanguage(language: LanguageItem) {\n        this.userPreference.locale = language.key;\n        this.userPreference.set('textOrientation', language.direction || 'ltr');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LanguageMenuComponent } from './language-menu.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        LanguageMenuComponent\n    ],\n    exports: [\n        LanguageMenuComponent\n    ]\n})\nexport class LanguageMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-info-drawer-layout',\n    templateUrl: './info-drawer-layout.component.html',\n    styleUrls: ['./info-drawer-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer-layout' }\n})\nexport class InfoDrawerLayoutComponent {}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-info-drawer-title], [info-drawer-title]' }) export class InfoDrawerTitleDirective {}\n@Directive({ selector: '[adf-info-drawer-buttons], [info-drawer-buttons]' }) export class InfoDrawerButtonsDirective {}\n@Directive({ selector: '[adf-info-drawer-content], [info-drawer-content]' }) export class InfoDrawerContentDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material';\n@Component({\n    selector: 'adf-info-drawer-tab',\n    template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class InfoDrawerTabComponent {\n    /** The title of the tab (string or translation key). */\n    @Input()\n    label: string = '';\n\n    /** Icon to render for the tab. */\n    @Input()\n    icon: string = null;\n\n    @ViewChild(TemplateRef)\n    content: TemplateRef<any>;\n}\n\n@Component({\n    selector: 'adf-info-drawer',\n    templateUrl: './info-drawer.component.html',\n    styleUrls: ['./info-drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer' }\n})\nexport class InfoDrawerComponent {\n    /** The title of the info drawer (string or translation key). */\n    @Input()\n    title: string|null = null;\n\n    /** The selected index tab. */\n    @Input()\n    selectedIndex: number = 0;\n\n    /** Emitted when the currently active tab changes. */\n    @Output()\n    currentTab: EventEmitter<number> = new EventEmitter<number>();\n\n    @ContentChildren(InfoDrawerTabComponent)\n    contentBlocks: QueryList<InfoDrawerTabComponent>;\n\n    showTabLayout(): boolean {\n        return this.contentBlocks.length > 0;\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        this.currentTab.emit(event.index);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { InfoDrawerLayoutComponent, InfoDrawerTitleDirective, InfoDrawerButtonsDirective, InfoDrawerContentDirective } from './info-drawer-layout.component';\nimport { InfoDrawerComponent, InfoDrawerTabComponent } from './info-drawer.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\nexport function declarations() {\n    return [\n        InfoDrawerLayoutComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective\n    ];\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: declarations(),\n    exports: declarations()\n})\nexport class InfoDrawerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Input } from '@angular/core';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { DataColumnListComponent } from '../../data-column/data-column-list.component';\nimport { DataColumn } from './data-column.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\n\nexport abstract class DataTableSchema {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    /** Custom preset column schema in JSON format. */\n    @Input()\n    presetColumn: string;\n\n    columns: any;\n\n    private layoutPresets = {};\n\n    constructor(private appConfigService: AppConfigService,\n                protected presetKey: string,\n                protected presetsModel: any) { }\n\n    public createDatatableSchema(): void {\n        this.loadLayoutPresets();\n        if (!this.columns || this.columns.length === 0) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    public loadLayoutPresets(): void {\n        const externalSettings = this.appConfigService.get(this.presetKey, null);\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, this.presetsModel, externalSettings);\n        } else {\n            this.layoutPresets = this.presetsModel;\n        }\n    }\n\n    public mergeJsonAndHtmlSchema(): any {\n        let customSchemaColumns = this.getSchemaFromConfig(this.presetColumn).concat(this.getSchemaFromHtml(this.columnList));\n        if (customSchemaColumns.length === 0) {\n            customSchemaColumns = this.getDefaultLayoutPreset();\n        }\n        return customSchemaColumns;\n    }\n\n    public getSchemaFromHtml(columnList: DataColumnListComponent): any {\n        let schema = [];\n        if (columnList && columnList.columns && columnList.columns.length > 0) {\n            schema = columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n   public getSchemaFromConfig(presetColumn: string): DataColumn[] {\n        return presetColumn ? (this.layoutPresets[presetColumn]).map((col) => new ObjectDataColumn(col)) : [];\n    }\n\n    private getDefaultLayoutPreset(): DataColumn[] {\n        return (this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\n\n@Component({\n    selector: 'adf-card-view',\n    templateUrl: './card-view.component.html',\n    styleUrls: ['./card-view.component.scss']\n})\nexport class CardViewComponent {\n    /** (**required**) Items to show in the card view. */\n    @Input()\n    properties: CardViewItem [];\n\n    /** Toggles whether or not the items can be edited. */\n    @Input()\n    editable: boolean;\n\n    /** Toggles whether or not to show empty items in non-editable mode. */\n    @Input()\n    displayEmpty: boolean = true;\n\n    /** Toggles whether or not to display none option. */\n    @Input()\n    displayNoneOption: boolean = true;\n\n    /** Toggles whether or not to display clear action. */\n    @Input()\n    displayClearAction: boolean = true;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CardViewBaseItemModel } from '../models/card-view-baseitem.model';\n\nexport interface UpdateNotification {\n    target: any;\n    changed: any;\n}\n\nexport interface ClickNotification {\n    target: any;\n}\n\nexport function transformKeyToObject(key: string, value): Object {\n    const objectLevels: string[] = key.split('.').reverse();\n\n    return objectLevels.reduce<{}>((previousValue, currentValue) => {\n        return { [currentValue]: previousValue};\n    }, value);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardViewUpdateService {\n\n    itemUpdated$ = new Subject<UpdateNotification>();\n    itemClicked$ = new Subject<ClickNotification>();\n\n    update(property: CardViewBaseItemModel, newValue: any) {\n        this.itemUpdated$.next({\n            target: property,\n            changed: transformKeyToObject(property.key, newValue)\n        });\n    }\n\n    clicked(property: CardViewBaseItemModel) {\n        this.itemClicked$.next({\n            target: property\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { CardViewBoolItemModel } from '../../models/card-view-boolitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-boolitem.component.html',\n    styleUrls: ['./card-view-boolitem.component.scss']\n})\n\nexport class CardViewBoolItemComponent {\n\n    @Input()\n    property: CardViewBoolItemModel;\n\n    @Input()\n    editable: boolean;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    changed(change: MatCheckboxChange) {\n        this.cardViewUpdateService.update(this.property, change.checked );\n        this.property.value = change.checked;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MatDatetimepicker, DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { CardViewDateItemModel } from '../../models/card-view-dateitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../utils/moment-date-formats.model';\nimport { AppConfigService } from '../../../app-config/app-config.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'adf-card-view-dateitem',\n    templateUrl: './card-view-dateitem.component.html',\n    styleUrls: ['./card-view-dateitem.component.scss']\n})\nexport class CardViewDateItemComponent implements OnInit, OnDestroy {\n\n    @Input()\n    property: CardViewDateItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @Input()\n    displayClearAction: boolean = true;\n\n    @ViewChild('datetimePicker')\n    public datepicker: MatDatetimepicker<any>;\n\n    valueDate: Moment;\n    dateFormat: string;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService,\n                private appConfig: AppConfigService) {\n        this.dateFormat = this.appConfig.get('dateValues.defaultDateFormat');\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => {\n                this.dateAdapter.setLocale(locale);\n                this.property.locale = locale;\n            });\n\n        (<MomentDateAdapter> this.dateAdapter).overrideDisplayFormat = 'MMM DD';\n\n        if (this.property.value) {\n            this.valueDate = moment(this.property.value, this.dateFormat);\n        }\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    showProperty(): boolean {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    showClearAction(): boolean {\n        return this.displayClearAction && (!this.property.isEmpty() || !!this.property.default);\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    showDatePicker() {\n        this.datepicker.open();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue) {\n            const momentDate = moment(newDateValue.value, this.dateFormat, true);\n            if (momentDate.isValid()) {\n                this.valueDate = momentDate;\n                this.cardViewUpdateService.update(this.property, momentDate.toDate());\n                this.property.value = momentDate.toDate();\n            }\n        }\n    }\n\n    onDateClear() {\n        this.valueDate = null;\n        this.cardViewUpdateService.update(this.property, null);\n        this.property.value = null;\n        this.property.default = null;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewMapItemModel } from '../../models/card-view-mapitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-mapitem',\n    templateUrl: './card-view-mapitem.component.html',\n    styleUrls: ['./card-view-mapitem.component.scss']\n})\n\nexport class CardViewMapItemComponent {\n    @Input()\n    property: CardViewMapItemModel;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { AppConfigService } from '../../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-card-view-textitem',\n    templateUrl: './card-view-textitem.component.html',\n    styleUrls: ['./card-view-textitem.component.scss']\n})\nexport class CardViewTextItemComponent implements OnChanges {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    @Input()\n    property: CardViewTextItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('editorInput')\n    private editorInput: any;\n\n    inEdit: boolean = false;\n    editedValue: string;\n    errorMessages: string[];\n    valueSeparator: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private appConfig: AppConfigService) {\n        this.valueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator') || CardViewTextItemComponent.DEFAULT_SEPARATOR;\n    }\n\n    ngOnChanges(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n    }\n\n    showProperty(): boolean {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    isClickable(): boolean {\n        return !!this.property.clickable;\n    }\n\n    hasIcon(): boolean {\n        return !!this.property.icon;\n    }\n\n    hasErrors(): boolean {\n        return this.errorMessages && this.errorMessages.length > 0;\n    }\n\n    setEditMode(editStatus: boolean): void {\n        this.inEdit = editStatus;\n        setTimeout(() => {\n            if (this.editorInput) {\n                this.editorInput.nativeElement.click();\n            }\n        }, 0);\n    }\n\n    reset(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n        this.setEditMode(false);\n        this.resetErrorMessages();\n    }\n\n    private resetErrorMessages() {\n        this.errorMessages = [];\n    }\n\n    update(): void {\n        if (this.property.isValid(this.editedValue)) {\n            const updatedValue = this.prepareValueForUpload(this.property, this.editedValue);\n            this.cardViewUpdateService.update(this.property, updatedValue);\n            this.property.value = updatedValue;\n            this.setEditMode(false);\n            this.resetErrorMessages();\n        } else {\n            this.errorMessages = this.property.getValidationErrors(this.editedValue);\n        }\n    }\n\n    prepareValueForUpload(property: CardViewTextItemModel, value: string): string | string [] {\n        if (property.multivalued) {\n            const listOfValues = value.split(this.valueSeparator.trim()).map((item) => item.trim());\n            return listOfValues;\n        }\n        return value;\n    }\n\n    onTextAreaInputChange() {\n        this.errorMessages = this.property.getValidationErrors(this.editedValue);\n    }\n\n    clicked(): void {\n        if (typeof this.property.clickCallBack === 'function') {\n            this.property.clickCallBack();\n        } else {\n            this.cardViewUpdateService.clicked(this.property);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { Observable } from 'rxjs';\nimport { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-selectitem',\n    templateUrl: './card-view-selectitem.component.html',\n    styleUrls: ['./card-view-selectitem.component.scss']\n})\nexport class CardViewSelectItemComponent implements OnChanges {\n    @Input() property: CardViewSelectItemModel<string>;\n\n    @Input() editable: boolean = false;\n\n    @Input() options$: Observable<CardViewSelectItemOption<string>[]>;\n\n    @Input()\n    displayNoneOption: boolean = true;\n\n    value: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges(): void {\n        this.value = this.property.value;\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    getOptions(): Observable<CardViewSelectItemOption<string>[]> {\n        return this.options$ || this.property.options$;\n    }\n\n    onChange(event: MatSelectChange): void {\n        const selectedOption = event.value !== undefined ? event.value : null;\n        this.cardViewUpdateService.update(this.property, selectedOption);\n        this.property.value = selectedOption;\n    }\n\n    showNoneOption() {\n        return this.displayNoneOption;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { CardViewKeyValuePairsItemModel } from '../../models/card-view.models';\nimport { CardViewKeyValuePairsItemType } from '../../interfaces/card-view.interfaces';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-keyvaluepairsitem.component.html',\n    styleUrls: ['./card-view-keyvaluepairsitem.component.scss']\n})\n\nexport class CardViewKeyValuePairsItemComponent implements OnChanges {\n\n    @Input()\n    property: CardViewKeyValuePairsItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    values: CardViewKeyValuePairsItemType[];\n    matTableValues: MatTableDataSource<CardViewKeyValuePairsItemType>;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges() {\n        this.values = this.property.value || [];\n        this.matTableValues = new MatTableDataSource(this.values);\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    add(): void {\n        this.values.push({ name: '', value: '' });\n    }\n\n    remove(index: number): void {\n        this.values.splice(index, 1);\n        this.save(true);\n    }\n\n    onBlur(value): void {\n        if (value.length) {\n            this.save();\n        }\n    }\n\n    save(remove?: boolean): void {\n        const validValues = this.values.filter((i) => i.name.length && i.value.length);\n\n        if (remove || validValues.length) {\n            this.cardViewUpdateService.update(this.property, validValues);\n            this.property.value = validValues;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getType(type: any): any {\n    return () => type;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Type } from '@angular/core';\nimport { getType } from './get-type';\n\nexport interface DynamicComponentModel { type: string; }\nexport type DynamicComponentResolveFunction = (model: DynamicComponentModel) => Type<{}>;\nexport class DynamicComponentResolver {\n    static fromType(type: Type<{}>): DynamicComponentResolveFunction {\n        return getType(type);\n    }\n}\n\nexport abstract class DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = undefined;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {};\n\n    /**\n     * Gets the currently active DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want\n     * @param defaultValue Default type returned for types that are not yet mapped\n     * @returns Resolver function\n     */\n    getComponentTypeResolver(type: string, defaultValue: Type<{}> = this.defaultValue): DynamicComponentResolveFunction {\n        if (type) {\n            return this.types[type] || DynamicComponentResolver.fromType(defaultValue);\n        }\n        return DynamicComponentResolver.fromType(defaultValue);\n    }\n\n    /**\n     * Sets or optionally replaces a DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want to set\n     * @param resolver The new resolver function\n     * @param override The new resolver will only replace an existing one if this parameter is true\n     */\n    setComponentTypeResolver(type: string, resolver: DynamicComponentResolveFunction, override: boolean = true) {\n        if (!type) {\n            throw new Error(`type is null or not defined`);\n        }\n\n        if (!resolver) {\n            throw new Error(`resolver is null or not defined`);\n        }\n\n        const existing = this.types[type];\n        if (existing && !override) {\n            throw new Error(`already mapped, use override option if you intend replacing existing mapping.`);\n        }\n\n        this.types[type] = resolver;\n    }\n\n    /**\n     * Finds the component type that is needed to render a form field.\n     * @param model Form field model for the field to render\n     * @param defaultValue Default type returned for field types that are not yet mapped.\n     * @returns Component type\n     */\n    resolveComponentType(model: DynamicComponentModel, defaultValue: Type<{}> = this.defaultValue): Type<{}> {\n        if (model) {\n            const resolver = this.getComponentTypeResolver(model.type, defaultValue);\n            return resolver(model);\n        }\n        return defaultValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { CardViewDateItemComponent } from '../components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewMapItemComponent } from '../components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from '../components/card-view-textitem/card-view-textitem.component';\nimport { CardViewSelectItemComponent } from '../components/card-view-selectitem/card-view-selectitem.component';\nimport { CardViewBoolItemComponent } from '../components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewKeyValuePairsItemComponent } from '../components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardItemTypeService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = CardViewTextItemComponent;\n\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'select': DynamicComponentResolver.fromType(CardViewSelectItemComponent),\n        'int': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'float': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'date': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'datetime': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'bool': DynamicComponentResolver.fromType(CardViewBoolItemComponent),\n        'map': DynamicComponentResolver.fromType(CardViewMapItemComponent),\n        'keyvaluepairs': DynamicComponentResolver.fromType(CardViewKeyValuePairsItemComponent)\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-card-view-content-proxy]'\n})\nexport class CardViewContentProxyDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    OnChanges,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\nimport { CardItemTypeService } from '../../services/card-item-types.service';\nimport { CardViewContentProxyDirective } from '../../directives/card-view-content-proxy.directive';\n\n@Component({\n    selector: 'adf-card-view-item-dispatcher',\n    template: '<ng-template adf-card-view-content-proxy></ng-template>'\n})\nexport class CardViewItemDispatcherComponent implements OnChanges {\n    @Input()\n    property: CardViewItem;\n\n    @Input()\n    editable: boolean;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @Input()\n    displayNoneOption: boolean = true;\n\n    @Input()\n    displayClearAction: boolean = true;\n\n    @ViewChild(CardViewContentProxyDirective)\n    private content: CardViewContentProxyDirective;\n\n    private loaded: boolean = false;\n    private componentReference: any = null;\n\n    public ngOnInit;\n    public ngDoCheck;\n\n    constructor(private cardItemTypeService: CardItemTypeService,\n                private resolver: ComponentFactoryResolver) {\n        const dynamicLifeCycleMethods = [\n            'ngOnInit',\n            'ngDoCheck',\n            'ngAfterContentInit',\n            'ngAfterContentChecked',\n            'ngAfterViewInit',\n            'ngAfterViewChecked',\n            'ngOnDestroy'\n        ];\n\n        dynamicLifeCycleMethods.forEach((method) => {\n            this[method] = this.proxy.bind(this, method);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        Object.keys(changes)\n            .map((changeName) => [changeName, changes[changeName]])\n            .forEach(([inputParamName, simpleChange]: [string, SimpleChange]) => {\n                this.componentReference.instance[inputParamName] = simpleChange.currentValue;\n            });\n\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const factoryClass = this.cardItemTypeService.resolveComponentType(this.property);\n\n        const factory = this.resolver.resolveComponentFactory(factoryClass);\n        this.componentReference = this.content.viewContainerRef.createComponent(factory);\n\n        this.componentReference.instance.editable = this.editable;\n        this.componentReference.instance.property = this.property;\n        this.componentReference.instance.displayEmpty = this.displayEmpty;\n        this.componentReference.instance.displayNoneOption = this.displayNoneOption;\n        this.componentReference.instance.displayClearAction = this.displayClearAction;\n    }\n\n    private proxy(methodName, ...args) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName].apply(this.componentReference.instance, args);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemIntValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.INT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(value) && (function(x) { return (x | 0) === x; })(parseFloat(value));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemFloatValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.FLOAT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemProperties, CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport abstract class CardViewBaseItemModel {\n    label: string;\n    value: any;\n    key: any;\n    default: any;\n    editable: boolean;\n    clickable: boolean;\n    icon?: string;\n    validators?: CardViewItemValidator[];\n    data?: any;\n\n    constructor(cardViewItemProperties: CardViewItemProperties) {\n        this.label = cardViewItemProperties.label || '';\n        this.value = cardViewItemProperties.value && cardViewItemProperties.value.displayName || cardViewItemProperties.value;\n        this.key = cardViewItemProperties.key;\n        this.default = cardViewItemProperties.default;\n        this.editable = !!cardViewItemProperties.editable;\n        this.clickable = !!cardViewItemProperties.clickable;\n        this.icon = cardViewItemProperties.icon || '';\n        this.validators = cardViewItemProperties.validators || [];\n        this.data = cardViewItemProperties.data || null;\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value === '';\n    }\n\n    isValid(newValue: any): boolean {\n        if (!this.validators.length) {\n            return true;\n        }\n\n        return this.validators\n            .map((validator) => validator.isValid(newValue))\n            .reduce((isValidUntilNow, isValid) => isValidUntilNow && isValid, true);\n    }\n\n    getValidationErrors(value): string[] {\n        if (!this.validators.length) {\n            return [];\n        }\n\n        return this.validators.filter((validator) => !validator.isValid(value)).map((validator) => validator.message);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewBoolItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewBoolItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'bool';\n    value: boolean = false;\n    default: boolean;\n\n    constructor(cardViewBoolItemProperties: CardViewBoolItemProperties) {\n        super(cardViewBoolItemProperties);\n\n        if (cardViewBoolItemProperties.value !== undefined) {\n            this.value = !!JSON.parse(cardViewBoolItemProperties.value);\n        }\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.value;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewDateItemProperties } from '../interfaces/card-view.interfaces';\nimport { LocalizedDatePipe } from '../../pipes/localized-date.pipe';\n\nexport class CardViewDateItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'date';\n    format: string;\n    locale: string;\n\n    localizedDatePipe: LocalizedDatePipe;\n\n    constructor(cardViewDateItemProperties: CardViewDateItemProperties) {\n        super(cardViewDateItemProperties);\n\n        if (cardViewDateItemProperties.format) {\n            this.format = cardViewDateItemProperties.format;\n        }\n\n        if (cardViewDateItemProperties.locale) {\n            this.locale = cardViewDateItemProperties.locale;\n        }\n\n    }\n\n    get displayValue() {\n        if (!this.value) {\n            return this.default;\n        } else {\n            this.localizedDatePipe = new LocalizedDatePipe();\n            return this.localizedDatePipe.transform(this.value, this.format, this.locale);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewDateItemModel } from './card-view-dateitem.model';\n\nexport class CardViewDatetimeItemModel extends CardViewDateItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'datetime';\n    format: string = 'MMM d, y, H:mm';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewTextItemPipeProperty, CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewTextItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'text';\n    multiline?: boolean;\n    multivalued?: boolean;\n    pipes?: CardViewTextItemPipeProperty[];\n    clickCallBack?: any;\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n        this.multiline = !!cardViewTextItemProperties.multiline;\n        this.multivalued = !!cardViewTextItemProperties.multivalued;\n        this.pipes = cardViewTextItemProperties.pipes || [];\n        this.clickCallBack = cardViewTextItemProperties.clickCallBack ? cardViewTextItemProperties.clickCallBack : null;\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.applyPipes(this.value);\n        }\n    }\n\n    private applyPipes(displayValue) {\n        if (this.pipes.length) {\n            displayValue = this.pipes.reduce((accumulator, { pipe, params = [] }) => {\n                return pipe.transform(accumulator, ...params);\n            }, displayValue);\n        }\n\n        return displayValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemFloatValidator } from '../validators/card-view.validators';\n\nexport class CardViewFloatItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'float';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemFloatValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseFloat(cardViewTextItemProperties.value);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemIntValidator } from '../validators/card-view.validators';\n\nexport class CardViewIntItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'int';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemIntValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseInt(cardViewTextItemProperties.value, 10);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\n\nexport class CardViewMapItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'map';\n    value: Map<string, string>;\n\n    get displayValue() {\n        if (this.value && this.value.size > 0) {\n            return this.value.values().next().value;\n        } else {\n            return this.default;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewKeyValuePairsItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewKeyValuePairsItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'keyvaluepairs';\n\n    constructor(cardViewKeyValuePairsItemProperties: CardViewKeyValuePairsItemProperties) {\n        super(cardViewKeyValuePairsItemProperties);\n    }\n\n    get displayValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewSelectItemProperties, CardViewSelectItemOption } from '../interfaces/card-view.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport class CardViewSelectItemModel<T> extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'select';\n    options$: Observable<CardViewSelectItemOption<T>[]>;\n\n    constructor(cardViewSelectItemProperties: CardViewSelectItemProperties<T>) {\n        super(cardViewSelectItemProperties);\n\n        this.options$ = cardViewSelectItemProperties.options$;\n    }\n\n    get displayValue() {\n        return this.options$.pipe(\n            switchMap((options) => {\n                const option = options.find((o) => o.key === this.value);\n                return of(option ? option.label : '');\n            })\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatNativeDateModule,\n    MatSelectModule\n} from '@angular/material';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CardViewContentProxyDirective } from './directives/card-view-content-proxy.directive';\nimport { CardViewComponent } from './components/card-view/card-view.component';\nimport { CardViewBoolItemComponent } from './components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewDateItemComponent } from './components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewItemDispatcherComponent } from './components/card-view-item-dispatcher/card-view-item-dispatcher.component';\nimport { CardViewMapItemComponent } from './components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from './components/card-view-textitem/card-view-textitem.component';\nimport { CardViewKeyValuePairsItemComponent } from './components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { CardViewSelectItemComponent } from './components/card-view-selectitem/card-view-selectitem.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        TranslateModule.forChild(),\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewKeyValuePairsItemComponent,\n        CardViewSelectItemComponent,\n        CardViewItemDispatcherComponent,\n        CardViewContentProxyDirective\n    ],\n    entryComponents: [\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ],\n    exports: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ]\n})\nexport class CardViewModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from '../services/storage.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable()\nexport class DebugAppConfigService extends AppConfigService {\n    constructor(private storage: StorageService, http: HttpClient) {\n        super(http);\n    }\n\n    /** @override */\n    get<T>(key: string, defaultValue?: T): T {\n        if (key === AppConfigValues.OAUTHCONFIG) {\n            return <T> (JSON.parse(this.storage.getItem(key)) || super.get<T>(key, defaultValue));\n        } else if (key === AppConfigValues.APPLICATION) {\n            return undefined;\n        } else {\n            return <T> (<any> this.storage.getItem(key) || super.get<T>(key, defaultValue));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from './app-config.service';\n\n@Pipe({\n    name: 'adfAppConfig'\n})\nexport class AppConfigPipe implements PipeTransform {\n    constructor(private config: AppConfigService) {}\n\n    transform(value: string, fallback: any): any {\n        return this.config.get(value, fallback);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppConfigPipe } from './app-config.pipe';\n\n@NgModule({\n    imports: [\n        HttpClientModule\n    ],\n    declarations: [\n        AppConfigPipe\n    ],\n    exports: [\n        AppConfigPipe\n    ]\n})\nexport class AppConfigModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormSaveRepresentation } from '@alfresco/js-api';\n\nexport class FormDefinitionModel extends FormSaveRepresentation {\n    reusable: boolean = false;\n    newVersion: boolean = false;\n    formRepresentation: any;\n    formImageBase64: string = '';\n\n    constructor(id: string, name: any, lastUpdatedByFullName: string, lastUpdated: string, metadata: any) {\n        super();\n        this.formRepresentation = {\n            id: id,\n            name: name,\n            description: '',\n            version: 1,\n            lastUpdatedBy: 1,\n            lastUpdatedByFullName: lastUpdatedByFullName,\n            lastUpdated: lastUpdated,\n            stencilSetId: 0,\n            referenceId: null,\n            formDefinition: {\n                fields: [{\n                    name: 'Label',\n                    type: 'container',\n                    fieldType: 'ContainerRepresentation',\n                    numberOfColumns: 2,\n                    required: false,\n                    readOnly: false,\n                    sizeX: 2,\n                    sizeY: 1,\n                    row: -1,\n                    col: -1,\n                    fields: {'1': this.metadataToFields(metadata)}\n                }],\n                gridsterForm: false,\n                javascriptEvents: [],\n                metadata: {},\n                outcomes: [],\n                className: '',\n                style: '',\n                tabs: [],\n                variables: []\n            }\n        };\n    }\n\n    private metadataToFields(metadata: any): any[] {\n        const fields = [];\n        if (metadata) {\n            metadata.forEach(function(property) {\n                if (property) {\n                    const field = {\n                        type: 'text',\n                        id: property.name,\n                        name: property.name,\n                        required: false,\n                        readOnly: false,\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        colspan: 1,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        layout: {\n                            colspan: 1,\n                            row: -1,\n                            column: -1\n                        }\n                    };\n                    fields.push(field);\n                }\n            });\n        }\n\n        return fields;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nexport class FormFieldTypes {\n    static CONTAINER: string = 'container';\n    static GROUP: string = 'group';\n    static DYNAMIC_TABLE: string = 'dynamic-table';\n    static TEXT: string = 'text';\n    static MULTILINE_TEXT: string = 'multi-line-text';\n    static DROPDOWN: string = 'dropdown';\n    static HYPERLINK: string = 'hyperlink';\n    static RADIO_BUTTONS: string = 'radio-buttons';\n    static DISPLAY_VALUE: string = 'readonly';\n    static READONLY_TEXT: string = 'readonly-text';\n    static UPLOAD: string = 'upload';\n    static TYPEAHEAD: string = 'typeahead';\n    static FUNCTIONAL_GROUP: string = 'functional-group';\n    static PEOPLE: string = 'people';\n    static BOOLEAN: string = 'boolean';\n    static NUMBER: string = 'integer';\n    static DATE: string = 'date';\n    static AMOUNT: string = 'amount';\n    static DOCUMENT: string = 'document';\n    static DATETIME: string = 'datetime';\n    static ATTACH_FOLDER: string = 'select-folder';\n\n    static READONLY_TYPES: string[] = [\n        FormFieldTypes.HYPERLINK,\n        FormFieldTypes.DISPLAY_VALUE,\n        FormFieldTypes.READONLY_TEXT,\n        FormFieldTypes.GROUP\n    ];\n\n    static isReadOnlyType(type: string) {\n        return FormFieldTypes.READONLY_TYPES.includes(type);\n    }\n\n    static isContainerType(type: string) {\n        return type === FormFieldTypes.CONTAINER || type === FormFieldTypes.GROUP;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormModel } from './form.model';\n\nexport abstract class FormWidgetModel {\n\n    readonly fieldType: string;\n    readonly id: string;\n    readonly name: string;\n    readonly type: string;\n    readonly tab: string;\n\n    readonly form: any;\n    readonly json: any;\n\n    constructor(form: FormModel, json: any) {\n        this.form = form;\n        this.json = json;\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this.tab = json.tab;\n        }\n    }\n}\n\nexport interface FormWidgetModelCache<T extends FormWidgetModel> {\n    [key: string]: T;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class WidgetVisibilityModel {\n        rightRestResponseId?: string;\n        rightFormFieldId?: string;\n        leftRestResponseId?: string;\n        leftFormFieldId?: string;\n        operator: string;\n        nextCondition: WidgetVisibilityModel;\n        nextConditionOperator: string;\n\n        constructor(private json?: any) {\n                if (json) {\n                        this.operator = json.operator;\n                        this.nextCondition = new WidgetVisibilityModel(json.nextCondition);\n                        this.nextConditionOperator = json.nextConditionOperator;\n                        this.rightRestResponseId = json.rightRestResponseId;\n                        this.rightFormFieldId = json.rightFormFieldId;\n                        this.leftFormFieldId = json.leftFormFieldId;\n                        this.leftRestResponseId = json.leftRestResponseId;\n                } else {\n                        this.json = {};\n                }\n        }\n\n        set leftType(leftType: string) {\n                this.json.leftType = leftType;\n        }\n\n        set rightType(rightType: string) {\n                this.json.rightType = rightType;\n        }\n\n        set leftValue(leftValue: string) {\n                this.json.leftValue = leftValue;\n        }\n\n        set rightValue(rightValue: string) {\n                this.json.rightValue = rightValue;\n        }\n\n        get leftType() {\n                if (this.leftFormFieldId) {\n                        return WidgetTypeEnum.field;\n                } else if (this.leftRestResponseId) {\n                        return WidgetTypeEnum.variable;\n                } else if ( !!this.json.leftType) {\n                        return this.json.leftType;\n                }\n        }\n\n        get leftValue() {\n                if ( this.json.leftValue ) {\n                        return this.json.leftValue;\n                } else if (this.leftFormFieldId) {\n                        return this.leftFormFieldId;\n                } else {\n                        return this.leftRestResponseId;\n                }\n        }\n\n        get rightType() {\n                if ( !!this.json.rightType ) {\n                        return this.json.rightType;\n                } else if (this.json.rightValue) {\n                        return WidgetTypeEnum.value;\n                } else if (this.rightRestResponseId) {\n                        return WidgetTypeEnum.variable;\n                } else if (this.rightFormFieldId) {\n                        return WidgetTypeEnum.field;\n                }\n        }\n\n        get rightValue() {\n                if (this.json.rightValue) {\n                        return this.json.rightValue;\n                } else if (this.rightFormFieldId) {\n                        return this.rightFormFieldId;\n                } else {\n                        return this.rightRestResponseId;\n                }\n        }\n\n}\n\nexport enum WidgetTypeEnum {\n        field = 'field',\n        variable = 'variable',\n        value = 'value'\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\n\nexport class ContainerColumnModel {\n\n    size: number = 12;\n    fields: FormFieldModel[] = [];\n    colspan: number = 1;\n    rowspan: number = 1;\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nexport class ErrorMessageModel {\n\n    message: string = '';\n    attributes: Map<string, string> = null;\n\n    constructor(obj?: any) {\n        this.message = obj && obj.message ? obj.message : '';\n        this.attributes = new Map();\n    }\n\n    isActive() {\n        return this.message ? true : false;\n    }\n\n    getAttributesAsJsonObj() {\n        let result = {};\n        if (this.attributes.size > 0) {\n            const obj = Object.create(null);\n            this.attributes.forEach((value, key) => {\n                obj[key] = value;\n            });\n            result = JSON.stringify(obj);\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\n\nexport interface FormFieldValidator {\n\n    isSupported(field: FormFieldModel): boolean;\n\n    validate(field: FormFieldModel): boolean;\n\n}\n\nexport class RequiredFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT,\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.BOOLEAN,\n        FormFieldTypes.TYPEAHEAD,\n        FormFieldTypes.DROPDOWN,\n        FormFieldTypes.PEOPLE,\n        FormFieldTypes.FUNCTIONAL_GROUP,\n        FormFieldTypes.RADIO_BUTTONS,\n        FormFieldTypes.UPLOAD,\n        FormFieldTypes.AMOUNT,\n        FormFieldTypes.DYNAMIC_TABLE,\n        FormFieldTypes.DATE,\n        FormFieldTypes.DATETIME,\n        FormFieldTypes.ATTACH_FOLDER\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.required;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n\n            if (field.type === FormFieldTypes.DROPDOWN) {\n                if (field.hasEmptyValue && field.emptyOption) {\n                    if (field.value === field.emptyOption.id) {\n                        return false;\n                    }\n                }\n            }\n\n            if (field.type === FormFieldTypes.RADIO_BUTTONS) {\n                const option = field.options.find((opt) => opt.id === field.value);\n                return !!option;\n            }\n\n            if (field.type === FormFieldTypes.UPLOAD) {\n                return field.value && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.DYNAMIC_TABLE) {\n                return field.value && field.value instanceof Array && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.BOOLEAN) {\n                return field.value ? true : false;\n            }\n\n            if (field.value === null || field.value === undefined || field.value === '') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nexport class NumberFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    static isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (field.value === null ||\n                field.value === undefined ||\n                field.value === '') {\n                return true;\n            }\n            const valueStr = '' + field.value;\n            let pattern = new RegExp(/^-?\\d+$/);\n            if (field.enableFractions) {\n                pattern = new RegExp(/^-?[0-9]+(\\.[0-9]{1,2})?$/);\n            }\n            if (valueStr.match(pattern)) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_NUMBER';\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class DateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    // Validates that the input string is a valid date formatted as <dateFormat> (default D-M-YYYY)\n    static isValidDate(inputDate: string, dateFormat: string = 'D-M-YYYY'): boolean {\n        if (inputDate) {\n            const d = moment(inputDate, dateFormat, true);\n            return d.isValid();\n        }\n\n        return false;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (DateFieldValidator.isValidDate(field.value, field.dateDisplayFormat)) {\n                return true;\n            }\n            field.validationSummary.message = field.dateDisplayFormat;\n            return false;\n        }\n        return true;\n    }\n}\n\nexport abstract class BoundaryDateFieldValidator implements FormFieldValidator {\n\n    DATE_FORMAT_CLOUD = 'YYYY-MM-DD';\n    DATE_FORMAT = 'DD-MM-YYYY';\n\n    supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDate(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    extractDateFormat(date: string): string {\n        const brokenDownDate = date.split('-');\n        return brokenDownDate[0].length === 4 ? this.DATE_FORMAT_CLOUD : this.DATE_FORMAT;\n    }\n\n    abstract checkDate(field: FormFieldModel, dateFormat: string);\n    abstract isSupported(field: FormFieldModel);\n\n}\n\nexport class MinDateFieldValidator extends BoundaryDateFieldValidator {\n\n    checkDate(field: FormFieldModel, dateFormat: string): boolean {\n\n        let isValid = true;\n        // remove time and timezone info\n        let fieldValueData;\n        if (typeof field.value === 'string') {\n            fieldValueData = moment(field.value.split('T')[0], dateFormat);\n        } else {\n            fieldValueData = field.value;\n        }\n\n        const minValueDateFormat = this.extractDateFormat(field.minValue);\n        const min = moment(field.minValue, minValueDateFormat);\n\n        if (fieldValueData.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).toLocaleUpperCase());\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n}\n\nexport class MaxDateFieldValidator extends BoundaryDateFieldValidator {\n\n    checkDate(field: FormFieldModel, dateFormat: string): boolean {\n\n        let isValid = true;\n        // remove time and timezone info\n        let fieldValueData;\n        if (typeof field.value === 'string') {\n            fieldValueData = moment(field.value.split('T')[0], dateFormat);\n        } else {\n            fieldValueData = field.value;\n        }\n\n        const maxValueDateFormat = this.extractDateFormat(field.maxValue);\n        const max = moment(field.maxValue, maxValueDateFormat);\n\n        if (fieldValueData.isAfter(max)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).toLocaleUpperCase());\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n}\n\nexport class MinDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MIN_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const min = moment(field.minValue, this.MIN_DATETIME_FORMAT);\n\n        if (fieldValueDate.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MAX_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const max = moment(field.maxValue, this.MAX_DATETIME_FORMAT);\n\n        if (fieldValueDate.isAfter(max)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MinLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.minLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length >= field.minLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.AT_LEAST_LONG`;\n            field.validationSummary.attributes.set('minLength', field.minLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MaxLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.maxLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length <= field.maxLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NO_LONGER_THAN`;\n            field.validationSummary.attributes.set('maxLength', field.maxLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.minValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const minValue: number = +field.minValue;\n\n            if (value >= minValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', field.minValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class MaxValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.maxValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const maxValue: number = +field.maxValue;\n\n            if (value <= maxValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', field.maxValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class RegExFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.regexPattern;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length > 0 && field.value.match(new RegExp('^' + field.regexPattern + '$'))) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            return false;\n        }\n        return true;\n    }\n\n}\n\nexport class FixedValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TYPEAHEAD\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    hasValidNameOrValidId(field: FormFieldModel): boolean {\n        return this.hasValidName(field) || this.hasValidId(field);\n    }\n\n    hasValidName(field: FormFieldModel) {\n        return field.options.find((item) => item.name && item.name.toLocaleLowerCase() === field.value.toLocaleLowerCase()) ? true : false;\n    }\n\n    hasValidId(field: FormFieldModel): boolean {\n        return field.options.find((item) => item.id === field.value) ? true : false;\n    }\n\n    hasStringValue(field: FormFieldModel) {\n        return field.value && typeof field.value === 'string';\n    }\n\n    hasOptions(field: FormFieldModel) {\n        return field.options && field.options.length > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (this.hasStringValue(field) && this.hasOptions(field) && !this.hasValidNameOrValidId(field)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport const FORM_FIELD_VALIDATORS = [\n    new RequiredFieldValidator(),\n    new NumberFieldValidator(),\n    new MinLengthFieldValidator(),\n    new MaxLengthFieldValidator(),\n    new MinValueFieldValidator(),\n    new MaxValueFieldValidator(),\n    new RegExFieldValidator(),\n    new DateFieldValidator(),\n    new MinDateFieldValidator(),\n    new MaxDateFieldValidator(),\n    new FixedValueFieldValidator(),\n    new MinDateTimeFieldValidator(),\n    new MaxDateTimeFieldValidator()\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\nimport moment from 'moment-es6';\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { ContainerColumnModel } from './container-column.model';\nimport { ErrorMessageModel } from './error-message.model';\nimport { FormFieldMetadata } from './form-field-metadata';\nimport { FormFieldOption } from './form-field-option';\nimport { FormFieldTypes } from './form-field-types';\nimport { NumberFieldValidator } from './form-field-validator';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\n// Maps to FormFieldRepresentation\nexport class FormFieldModel extends FormWidgetModel {\n\n    private _value: string;\n    private _readOnly: boolean = false;\n    private _isValid: boolean = true;\n    private _required: boolean = false;\n\n    readonly defaultDateFormat: string = 'D-M-YYYY';\n    readonly defaultDateTimeFormat: string = 'D-M-YYYY hh:mm A';\n\n    // model members\n    fieldType: string;\n    id: string;\n    name: string;\n    type: string;\n    overrideId: boolean;\n    tab: string;\n    rowspan: number = 1;\n    colspan: number = 1;\n    placeholder: string = null;\n    minLength: number = 0;\n    maxLength: number = 0;\n    minValue: string;\n    maxValue: string;\n    regexPattern: string;\n    options: FormFieldOption[] = [];\n    restUrl: string;\n    restResponsePath: string;\n    restIdProperty: string;\n    restLabelProperty: string;\n    hasEmptyValue: boolean;\n    className: string;\n    optionType: string;\n    params: FormFieldMetadata = {};\n    hyperlinkUrl: string;\n    displayText: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel = null;\n    enableFractions: boolean = false;\n    currency: string = null;\n    dateDisplayFormat: string = this.defaultDateFormat;\n\n    // container model members\n    numberOfColumns: number = 1;\n    fields: FormFieldModel[] = [];\n    columns: ContainerColumnModel[] = [];\n\n    // util members\n    emptyOption: FormFieldOption;\n    validationSummary: ErrorMessageModel;\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(v: any) {\n        this._value = v;\n        this.updateForm();\n    }\n\n    get readOnly(): boolean {\n        if (this.form && this.form.readOnly) {\n            return true;\n        }\n        return this._readOnly;\n    }\n\n    set readOnly(readOnly: boolean) {\n        this._readOnly = readOnly;\n        this.updateForm();\n    }\n\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = value;\n        this.updateForm();\n    }\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    validate(): boolean {\n        this.validationSummary = new ErrorMessageModel();\n\n        if (!this.readOnly) {\n            const validators = this.form.fieldValidators || [];\n            for (const validator of validators) {\n                if (!validator.validate(this)) {\n                    this._isValid = false;\n                    return this._isValid;\n                }\n            }\n        }\n\n        this._isValid = true;\n        return this._isValid;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this._required = <boolean> json.required;\n            this._readOnly = <boolean> json.readOnly || json.type === 'readonly';\n            this.overrideId = <boolean> json.overrideId;\n            this.tab = json.tab;\n            this.restUrl = json.restUrl;\n            this.restResponsePath = json.restResponsePath;\n            this.restIdProperty = json.restIdProperty;\n            this.restLabelProperty = json.restLabelProperty;\n            this.colspan = <number> json.colspan;\n            this.minLength = <number> json.minLength || 0;\n            this.maxLength = <number> json.maxLength || 0;\n            this.minValue = json.minValue;\n            this.maxValue = json.maxValue;\n            this.regexPattern = json.regexPattern;\n            this.options = <FormFieldOption[]> json.options || [];\n            this.hasEmptyValue = <boolean> json.hasEmptyValue;\n            this.className = json.className;\n            this.optionType = json.optionType;\n            this.params = <FormFieldMetadata> json.params || {};\n            this.hyperlinkUrl = json.hyperlinkUrl;\n            this.displayText = json.displayText;\n            this.visibilityCondition = json.visibilityCondition ? new WidgetVisibilityModel(json.visibilityCondition) : undefined;\n            this.enableFractions = <boolean> json.enableFractions;\n            this.currency = json.currency;\n            this.dateDisplayFormat = json.dateDisplayFormat || this.getDefaultDateFormat(json);\n            this._value = this.parseValue(json);\n            this.validationSummary = new ErrorMessageModel();\n\n            if (json.placeholder && json.placeholder !== '' && json.placeholder !== 'null') {\n                this.placeholder = json.placeholder;\n            }\n\n            if (FormFieldTypes.isReadOnlyType(json.type)) {\n                if (json.params && json.params.field) {\n                    if (form.processVariables) {\n                        const processVariable = this.getProcessVariableValue(json.params.field, form);\n                        if (processVariable) {\n                            this.value = processVariable;\n                        }\n                    } else if (json.params.responseVariable && form.json.variables) {\n                        const formVariable = this.getVariablesValue(json.params.field.name, form);\n                        if (formVariable) {\n                            this.value = formVariable;\n                        }\n                    }\n                }\n            }\n\n            if (FormFieldTypes.isContainerType(json.type)) {\n                this.containerFactory(json, form);\n            }\n        }\n\n        if (this.hasEmptyValue && this.options && this.options.length > 0) {\n            this.emptyOption = this.options[0];\n        }\n\n        this.updateForm();\n    }\n\n    private getDefaultDateFormat(jsonField: any): string {\n        let originalType = jsonField.type;\n        if (FormFieldTypes.isReadOnlyType(jsonField.type) &&\n            jsonField.params &&\n            jsonField.params.field) {\n            originalType = jsonField.params.field.type;\n        }\n        return originalType === FormFieldTypes.DATETIME ? this.defaultDateTimeFormat : this.defaultDateFormat;\n    }\n\n    private isTypeaheadFieldType(type: string): boolean {\n        return type === 'typeahead' ? true : false;\n    }\n\n    private getFieldNameWithLabel(name: string): string {\n        return name += '_LABEL';\n    }\n\n    private getProcessVariableValue(field: any, form: FormModel) {\n        let fieldName = field.name;\n        if (this.isTypeaheadFieldType(field.type)) {\n            fieldName = this.getFieldNameWithLabel(field.id);\n        }\n        return this.findProcessVariableValue(fieldName, form);\n    }\n\n    private getVariablesValue(variableName: string, form: FormModel) {\n        const variable = form.json.variables.find((currentVariable) => {\n            return currentVariable.name === variableName;\n        });\n\n        if (variable) {\n            if (variable.type === 'boolean') {\n                return JSON.parse(variable.value);\n            }\n\n            return variable.value;\n        }\n\n        return null;\n    }\n\n    private findProcessVariableValue(variableName: string, form: FormModel) {\n        if (form.processVariables) {\n            const variable = form.processVariables.find((currentVariable) => {\n                return currentVariable.name === variableName;\n            });\n\n            if (variable) {\n                return variable.type === 'boolean' ? JSON.parse(variable.value) : variable.value;\n            }\n        }\n\n        return undefined;\n    }\n\n    private containerFactory(json: any, form: FormModel): void {\n        this.numberOfColumns = <number> json.numberOfColumns || 1;\n\n        this.fields = json.fields;\n\n        this.rowspan = 1;\n        this.colspan = 1;\n\n        if (json.fields) {\n            for (const currentField in json.fields) {\n                if (json.fields.hasOwnProperty(currentField)) {\n                    const col = new ContainerColumnModel();\n\n                    const fields: FormFieldModel[] = (json.fields[currentField] || []).map((f) => new FormFieldModel(form, f));\n                    col.fields = fields;\n                    col.rowspan = json.fields[currentField].length;\n\n                    col.fields.forEach((colFields: any) => {\n                        this.colspan = colFields.colspan > this.colspan ? colFields.colspan : this.colspan;\n                    });\n\n                    this.rowspan = this.rowspan < col.rowspan ? col.rowspan : this.rowspan;\n                    this.columns.push(col);\n                }\n            }\n        }\n    }\n\n    parseValue(json: any): any {\n        let value = json.hasOwnProperty('value') ? json.value : null;\n\n        /*\n         This is needed due to Activiti issue related to reading dropdown values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.DROPDOWN) {\n            if (json.hasEmptyValue && json.options) {\n                const options = <FormFieldOption[]> json.options || [];\n                if (options.length > 0) {\n                    const emptyOption = json.options[0];\n                    if (value === '' || value === emptyOption.id || value === emptyOption.name) {\n                        value = emptyOption.id;\n                    } else if (value.id && value.name) {\n                        value = value.id;\n                    }\n                }\n            }\n        }\n\n        /*\n         This is needed due to Activiti issue related to reading radio button values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.RADIO_BUTTONS) {\n            // Activiti has a bug with default radio button value where initial selection passed as `name` value\n            // so try resolving current one with a fallback to first entry via name or id\n            // TODO: needs to be reported and fixed at Activiti side\n            const entry: FormFieldOption[] = this.options.filter((opt) =>\n                opt.id === value || opt.name === value || (value && (opt.id === value.id || opt.name === value.name)));\n            if (entry.length > 0) {\n                value = entry[0].id;\n            }\n        }\n\n        /*\n         This is needed due to Activiti displaying/editing dates in d-M-YYYY format\n         but storing on server in ISO8601 format (i.e. 2013-02-04T22:44:30.652Z)\n         */\n        if (this.isDateField(json) || this.isDateTimeField(json)) {\n            if (value) {\n                let dateValue;\n                if (NumberFieldValidator.isNumber(value)) {\n                    dateValue = moment(value);\n                } else {\n                    dateValue = this.isDateTimeField(json) ? moment(value, 'YYYY-MM-DD hh:mm A') : moment(value.split('T')[0], 'YYYY-M-D');\n                }\n                if (dateValue && dateValue.isValid()) {\n                    value = dateValue.format(this.dateDisplayFormat);\n                }\n            }\n        }\n\n        return value;\n    }\n\n    updateForm() {\n        if (!this.form) {\n            return;\n        }\n\n        switch (this.type) {\n            case FormFieldTypes.DROPDOWN:\n                /*\n                 This is needed due to Activiti reading dropdown values as string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                if (this.value === 'empty' || this.value === '') {\n                    this.form.values[this.id] = {};\n                } else {\n                    const entry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                    if (entry.length > 0) {\n                        this.form.values[this.id] = entry[0];\n                    }\n                }\n                break;\n            case FormFieldTypes.RADIO_BUTTONS:\n                /*\n                 This is needed due to Activiti issue related to reading radio button values as value string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                const rbEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                if (rbEntry.length > 0) {\n                    this.form.values[this.id] = rbEntry[0];\n                }\n                break;\n            case FormFieldTypes.UPLOAD:\n                this.form.hasUpload = true;\n                if (this.value && this.value.length > 0) {\n                    this.form.values[this.id] = Array.isArray(this.value) ? this.value.map((elem) => elem.id).join(',') : [this.value];\n                } else {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.TYPEAHEAD:\n                const taEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value || opt.name === this.value);\n                if (taEntry.length > 0) {\n                    this.form.values[this.id] = taEntry[0];\n                } else if (this.options.length > 0) {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.DATE:\n                const dateValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateValue && dateValue.isValid()) {\n                    this.form.values[this.id] = `${dateValue.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.DATETIME:\n                const dateTimeValue = moment(this.value, this.dateDisplayFormat, true).utc();\n                if (dateTimeValue && dateTimeValue.isValid()) {\n                    /* cspell:disable-next-line */\n                    this.form.values[this.id] = dateTimeValue.format('YYYY-MM-DDTHH:mm:ssZ');\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.NUMBER:\n                this.form.values[this.id] = parseInt(this.value, 10);\n                break;\n            case FormFieldTypes.AMOUNT:\n                this.form.values[this.id] = this.enableFractions ? parseFloat(this.value) : parseInt(this.value, 10);\n                break;\n            case FormFieldTypes.BOOLEAN:\n                this.form.values[this.id] = (this.value !== null && this.value !== undefined) ? this.value : false;\n                break;\n            default:\n                if (!FormFieldTypes.isReadOnlyType(this.type) && !this.isInvalidFieldType(this.type)) {\n                    this.form.values[this.id] = this.value;\n                }\n        }\n\n        this.form.onFormFieldChanged(this);\n    }\n\n    /**\n     * Skip the invalid field type\n     * @param type\n     */\n    isInvalidFieldType(type: string) {\n        if (type === 'container') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getOptionName(): string {\n        const option: FormFieldOption = this.options.find((opt) => opt.id === this.value);\n        return option ? option.name : null;\n    }\n\n    hasOptions() {\n        return this.options && this.options.length > 0;\n    }\n\n    private isDateField(json: any) {\n        return (json.params &&\n            json.params.field &&\n            json.params.field.type === FormFieldTypes.DATE) ||\n            json.type === FormFieldTypes.DATE;\n    }\n\n    private isDateTimeField(json: any): boolean {\n        return (json.params &&\n            json.params.field &&\n            json.params.field.type === FormFieldTypes.DATETIME) ||\n            json.type === FormFieldTypes.DATETIME;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\n\nexport class FormEvent {\n\n    private isDefaultPrevented: boolean = false;\n\n    readonly form: FormModel;\n\n    constructor(form: FormModel) {\n        this.form = form;\n    }\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormFieldEvent extends FormEvent {\n\n    readonly field: FormFieldModel;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form);\n        this.field = field;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateFormFieldEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\nimport { FormFieldModel } from '../components/widgets/core/form-field.model';\n\nexport class ValidateFormEvent extends FormEvent {\n\n    isValid = true;\n    errorsField: FormFieldModel[] = [];\n\n    constructor(form: FormModel) {\n        super(form);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\nimport { FormWidgetModel } from './form-widget.model';\n\nexport class ContainerModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n\n    get isVisible(): boolean {\n        return this.field.isVisible;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field.form, field.json);\n\n        if (field) {\n            this.field = field;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class FormOutcomeModel extends FormWidgetModel {\n\n    static SAVE_ACTION: string = 'SAVE';            // Activiti 'Save' action name\n    static COMPLETE_ACTION: string = 'COMPLETE';    // Activiti 'Complete' action name\n    static START_PROCESS_ACTION: string = 'START PROCESS';    // Activiti 'Start Process' action name\n\n    isSystem: boolean = false;\n    isSelected: boolean = false;\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.isSystem = json.isSystem ? true : false;\n            this.isSelected = form && json.name === form.selectedOutcome ? true : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class TabModel extends FormWidgetModel {\n\n    title: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel;\n\n    fields: FormWidgetModel[] = [];\n\n    hasContent(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.title = json.title;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormValues } from './widgets/core/form-values';\nimport { TabModel } from './widgets/core/tab.model';\nimport { FormWidgetModel } from './widgets/core/form-widget.model';\nimport { FormOutcomeModel } from './widgets/core/form-outcome.model';\nimport { FormFieldModel } from './widgets/core/form-field.model';\nimport { ContainerModel } from './widgets/core/container.model';\n\nexport abstract class FormBaseModel {\n\n    static UNSET_TASK_NAME: string = 'Nameless task';\n    static SAVE_OUTCOME: string = '$save';\n    static COMPLETE_OUTCOME: string = '$complete';\n    static START_PROCESS_OUTCOME: string = '$startProcess';\n\n    json: any;\n\n    values: FormValues = {};\n    tabs: TabModel[] = [];\n    fields: FormWidgetModel[] = [];\n    outcomes: FormOutcomeModel[] = [];\n\n    className: string;\n    readOnly: boolean = false;\n    taskName;\n\n    isValid: boolean = true;\n\n    hasTabs(): boolean {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    hasOutcomes(): boolean {\n        return this.outcomes && this.outcomes.length > 0;\n    }\n\n    getFieldById(fieldId: string): FormFieldModel {\n        return this.getFormFields().find((field) => field.id === fieldId);\n    }\n\n    // TODO: consider evaluating and caching once the form is loaded\n    getFormFields(): FormFieldModel[] {\n        const formFieldModel: FormFieldModel[] = [];\n\n        for (let i = 0; i < this.fields.length; i++) {\n            const field = this.fields[i];\n\n            if (field instanceof ContainerModel) {\n                const container = <ContainerModel> field;\n                formFieldModel.push(container.field);\n\n                container.field.columns.forEach((column) => {\n                    formFieldModel.push(...column.fields);\n                });\n            }\n        }\n\n        return formFieldModel;\n    }\n\n    markAsInvalid() {\n        this.isValid = false;\n    }\n\n    abstract validateForm();\n    abstract validateField(field: FormFieldModel);\n    abstract onFormFieldChanged(field: FormFieldModel);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldEvent } from './../../../events/form-field.event';\nimport { ValidateFormFieldEvent } from './../../../events/validate-form-field.event';\nimport { ValidateFormEvent } from './../../../events/validate-form.event';\nimport { FormService } from './../../../services/form.service';\nimport { ContainerModel } from './container.model';\nimport { FormFieldTemplates } from './form-field-templates';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\nimport { FormOutcomeModel } from './form-outcome.model';\nimport { FormValues } from './form-values';\nimport { FormWidgetModel, FormWidgetModelCache } from './form-widget.model';\nimport { TabModel } from './tab.model';\n\nimport {\n    FORM_FIELD_VALIDATORS,\n    FormFieldValidator\n} from './form-field-validator';\nimport { FormBaseModel } from '../../form-base.model';\n\nexport class FormModel extends FormBaseModel {\n\n    readonly id: number;\n    readonly name: string;\n    readonly taskId: string;\n    readonly taskName: string = FormModel.UNSET_TASK_NAME;\n    processDefinitionId: string;\n\n    customFieldTemplates: FormFieldTemplates = {};\n    fieldValidators: FormFieldValidator[] = [...FORM_FIELD_VALIDATORS];\n    readonly selectedOutcome: string;\n\n    processVariables: any;\n\n    constructor(formRepresentationJSON?: any, formValues?: FormValues, readOnly: boolean = false, protected formService?: FormService) {\n        super();\n        this.readOnly = readOnly;\n\n        if (formRepresentationJSON) {\n            this.json = formRepresentationJSON;\n\n            this.id = formRepresentationJSON.id;\n            this.name = formRepresentationJSON.name;\n            this.taskId = formRepresentationJSON.taskId;\n            this.taskName = formRepresentationJSON.taskName || formRepresentationJSON.name || FormModel.UNSET_TASK_NAME;\n            this.processDefinitionId = formRepresentationJSON.processDefinitionId;\n            this.customFieldTemplates = formRepresentationJSON.customFieldTemplates || {};\n            this.selectedOutcome = formRepresentationJSON.selectedOutcome || {};\n            this.className = formRepresentationJSON.className || '';\n\n            const tabCache: FormWidgetModelCache<TabModel> = {};\n\n            this.processVariables = formRepresentationJSON.processVariables;\n\n            this.tabs = (formRepresentationJSON.tabs || []).map((t) => {\n                const model = new TabModel(this, t);\n                tabCache[model.id] = model;\n                return model;\n            });\n\n            this.fields = this.parseRootFields(formRepresentationJSON);\n\n            if (formValues) {\n                this.loadData(formValues);\n            }\n\n            for (let i = 0; i < this.fields.length; i++) {\n                const field = this.fields[i];\n                if (field.tab) {\n                    const tab = tabCache[field.tab];\n                    if (tab) {\n                        tab.fields.push(field);\n                    }\n                }\n            }\n\n            if (formRepresentationJSON.fields) {\n                const saveOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.SAVE_OUTCOME,\n                    name: 'SAVE',\n                    isSystem: true\n                });\n                const completeOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.COMPLETE_OUTCOME,\n                    name: 'COMPLETE',\n                    isSystem: true\n                });\n                const startProcessOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.START_PROCESS_OUTCOME,\n                    name: 'START PROCESS',\n                    isSystem: true\n                });\n\n                const customOutcomes = (formRepresentationJSON.outcomes || []).map((obj) => new FormOutcomeModel(this, obj));\n\n                this.outcomes = [saveOutcome].concat(\n                    customOutcomes.length > 0 ? customOutcomes : [completeOutcome, startProcessOutcome]\n                );\n            }\n        }\n\n        this.validateForm();\n    }\n\n    onFormFieldChanged(field: FormFieldModel) {\n        this.validateField(field);\n        if (this.formService) {\n            this.formService.formFieldValueChanged.next(new FormFieldEvent(this, field));\n        }\n    }\n\n    /**\n     * Validates entire form and all form fields.\n     *\n     * @memberof FormModel\n     */\n    validateForm(): void {\n        const validateFormEvent: any = new ValidateFormEvent(this);\n\n        const errorsField: FormFieldModel[] = [];\n\n        const fields = this.getFormFields();\n        for (let i = 0; i < fields.length; i++) {\n            if (!fields[i].validate()) {\n                errorsField.push(fields[i]);\n            }\n        }\n\n        this.isValid = errorsField.length > 0 ? false : true;\n\n        if (this.formService) {\n            validateFormEvent.isValid = this.isValid;\n            validateFormEvent.errorsField = errorsField;\n            this.formService.validateForm.next(validateFormEvent);\n        }\n\n    }\n\n    /**\n     * Validates a specific form field, triggers form validation.\n     *\n     * @param field Form field to validate.\n     * @memberof FormModel\n     */\n    validateField(field: FormFieldModel): void {\n        if (!field) {\n            return;\n        }\n\n        const validateFieldEvent = new ValidateFormFieldEvent(this, field);\n\n        if (this.formService) {\n            this.formService.validateFormField.next(validateFieldEvent);\n        }\n\n        if (!validateFieldEvent.isValid) {\n            this.markAsInvalid();\n            return;\n        }\n\n        if (validateFieldEvent.defaultPrevented) {\n            return;\n        }\n\n        if (!field.validate()) {\n            this.markAsInvalid();\n        }\n\n        this.validateForm();\n    }\n\n    // Activiti supports 3 types of root fields: container|group|dynamic-table\n    private parseRootFields(json: any): FormWidgetModel[] {\n        let fields = [];\n\n        if (json.fields) {\n            fields = json.fields;\n        } else if (json.formDefinition && json.formDefinition.fields) {\n            fields = json.formDefinition.fields;\n        }\n\n        const formWidgetModel: FormWidgetModel[] = [];\n\n        for (const field of fields) {\n            if (field.type === FormFieldTypes.DISPLAY_VALUE) {\n                // workaround for dynamic table on a completed/readonly form\n                if (field.params) {\n                    const originalField = field.params['field'];\n                    if (originalField.type === FormFieldTypes.DYNAMIC_TABLE) {\n                        formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n                    }\n                }\n            } else {\n                formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n            }\n        }\n\n        return formWidgetModel;\n    }\n\n    // Loads external data and overrides field values\n    // Typically used when form definition and form data coming from different sources\n    private loadData(formValues: FormValues) {\n        for (const field of this.getFormFields()) {\n            if (formValues[field.id]) {\n                field.json.value = formValues[field.id];\n                field.value = field.parseValue(field.json);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormOutcomeModel } from './form-outcome.model';\n\nexport class FormOutcomeEvent {\n\n    private _outcome: FormOutcomeModel;\n    private _defaultPrevented: boolean = false;\n\n    get outcome(): FormOutcomeModel {\n        return this._outcome;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(outcome: FormOutcomeModel) {\n        this._outcome = outcome;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n import { RelatedContentRepresentation } from '@alfresco/js-api';\n\n export class ContentLinkModel implements RelatedContentRepresentation {\n\n    contentAvailable: boolean;\n    created: Date;\n    createdBy: any;\n    id: number;\n    link: boolean;\n    mimeType: string;\n    name: string;\n    previewStatus: string;\n    relatedContent: boolean;\n    simpleType: string;\n    thumbnailUrl: string;\n    contentRawUrl: string;\n    contentBlob: Blob;\n    thumbnailStatus: string;\n\n    constructor(obj?: any) {\n        this.contentAvailable = obj && obj.contentAvailable;\n        this.created = obj && obj.created;\n        this.createdBy = obj && obj.createdBy || {};\n        this.id = obj && obj.id;\n        this.link = obj && obj.link;\n        this.mimeType = obj && obj.mimeType;\n        this.name = obj && obj.name;\n        this.previewStatus = obj && obj.previewStatus;\n        this.relatedContent = obj && obj.relatedContent;\n        this.simpleType = obj && obj.simpleType;\n        this.thumbnailStatus = obj && obj.thumbnailStatus;\n    }\n\n    hasPreviewStatus(): boolean {\n        return this.previewStatus === 'supported' ? true : false;\n    }\n\n    isTypeImage(): boolean {\n        return this.simpleType === 'image' ? true : false;\n    }\n\n    isTypePdf(): boolean {\n        return this.simpleType === 'pdf' ? true : false;\n    }\n\n    isTypeDoc(): boolean {\n        return this.simpleType === 'word' || this.simpleType === 'content' ? true : false;\n    }\n\n    isThumbnailReady(): boolean {\n        return this.thumbnailStatus === 'created';\n    }\n\n    isThumbnailSupported(): boolean {\n        return this.isTypeImage() || ((this.isTypePdf() || this.isTypeDoc()) && this.isThumbnailReady());\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '../../services/log.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormModel } from '../components/widgets/core/form.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmModelService {\n\n    public static MODEL_NAMESPACE: string = 'activitiForms';\n    public static MODEL_NAME: string = 'activitiFormsModel';\n    public static TYPE_MODEL: string = 'cm:folder';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public createEcmTypeForActivitiForm(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchActivitiEcmModel().subscribe(\n                (model) => {\n                    if (!model) {\n                        this.createActivitiEcmModel(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    } else {\n                        this.saveFomType(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n\n    }\n\n    searchActivitiEcmModel() {\n        return this.getEcmModels().pipe(map(function (ecmModels: any) {\n            return ecmModels.list.entries.find((model) => model.entry.name === EcmModelService.MODEL_NAME);\n        }));\n    }\n\n    createActivitiEcmModel(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmModel(EcmModelService.MODEL_NAME, EcmModelService.MODEL_NAMESPACE).subscribe(\n                (model) => {\n                    this.logService.info('model created', model);\n                    this.activeEcmModel(EcmModelService.MODEL_NAME).subscribe(\n                        (modelActive) => {\n                            this.logService.info('model active', modelActive);\n                            this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                                observer.next(typeCreated);\n                                observer.complete();\n                            });\n                        },\n                        (err) => this.handleError(err)\n                    );\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    saveFomType(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                (ecmType) => {\n                    this.logService.info('custom types', ecmType);\n                    if (!ecmType) {\n                        this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                            observer.next(typeCreated);\n                            observer.complete();\n                        });\n                    } else {\n                        observer.next(ecmType);\n                        observer.complete();\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    public createEcmTypeWithProperties(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmType(formName, EcmModelService.MODEL_NAME, EcmModelService.TYPE_MODEL).subscribe(\n                (typeCreated) => {\n                    this.logService.info('type Created', typeCreated);\n                    this.addPropertyToAType(EcmModelService.MODEL_NAME, formName, form).subscribe(\n                        (propertyAdded) => {\n                            this.logService.info('property Added', propertyAdded);\n                            observer.next(typeCreated);\n                            observer.complete();\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    public searchEcmType(typeName: string, modelName: string): Observable<any> {\n        return this.getEcmType(modelName).pipe(map(function (customTypes: any) {\n            return customTypes.list.entries.find((type) => type.entry.prefixedName === typeName || type.entry.title === typeName);\n        }));\n    }\n\n    public activeEcmModel(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.activateCustomModel(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmModel(modelName: string, nameSpace: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.createCustomModel('DRAFT', '', modelName, modelName, nameSpace))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmModels(): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomModel())\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmType(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomType(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmType(typeName: string, modelName: string, parentType: string): Observable<any> {\n        const name = this.cleanNameType(typeName);\n\n        return from(this.apiService.getInstance().core.customModelApi.createCustomType(modelName, name, parentType, typeName, ''))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public addPropertyToAType(modelName: string, typeName: string, formFields: any) {\n        const name = this.cleanNameType(typeName);\n\n        const properties = [];\n        if (formFields && formFields.values) {\n            for (const key in formFields.values) {\n                if (key) {\n                    properties.push({\n                        name: key,\n                        title: key,\n                        description: key,\n                        dataType: 'd:text',\n                        multiValued: false,\n                        mandatory: false,\n                        mandatoryEnforced: false\n                    });\n                }\n            }\n        }\n\n        return from(this.apiService.getInstance().core.customModelApi.addPropertyToType(modelName, name, properties))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n\n    }\n\n    cleanNameType(name: string): string {\n        let cleanName = name;\n        if (name.indexOf(':') !== -1) {\n            cleanName = name.split(':')[1];\n        }\n        return cleanName.replace(/[^a-zA-Z ]/g, '');\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    handleError(err: any): any {\n        this.logService.error(err);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { UserProcessModel } from '../../models';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, of, throwError } from 'rxjs';\nimport { FormDefinitionModel } from '../models/form-definition.model';\nimport { ContentLinkModel } from './../components/widgets/core/content-link.model';\nimport { GroupModel } from './../components/widgets/core/group.model';\nimport { FormModel, FormOutcomeEvent, FormOutcomeModel, FormValues } from './../components/widgets/core/index';\nimport {\n    FormErrorEvent, FormEvent, FormFieldEvent,\n    ValidateDynamicTableRowEvent, ValidateFormEvent, ValidateFormFieldEvent\n} from './../events/index';\nimport { EcmModelService } from './ecm-model.service';\nimport { map, catchError, switchMap, combineAll, defaultIfEmpty } from 'rxjs/operators';\nimport {\n    Activiti,\n    CompleteFormRepresentation,\n    SaveFormRepresentation\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    formLoaded = new Subject<FormEvent>();\n    formDataRefreshed = new Subject<FormEvent>();\n    formFieldValueChanged = new Subject<FormFieldEvent>();\n    formEvents = new Subject<Event>();\n    taskCompleted = new Subject<FormEvent>();\n    taskCompletedError = new Subject<FormErrorEvent>();\n    taskSaved = new Subject<FormEvent>();\n    taskSavedError = new Subject<FormErrorEvent>();\n    formContentClicked = new Subject<ContentLinkModel>();\n\n    validateForm = new Subject<ValidateFormEvent>();\n    validateFormField = new Subject<ValidateFormFieldEvent>();\n    validateDynamicTableRow = new Subject<ValidateDynamicTableRowEvent>();\n\n    executeOutcome = new Subject<FormOutcomeEvent>();\n\n    constructor(private ecmModelService: EcmModelService,\n                private apiService: AlfrescoApiService,\n                protected logService: LogService) {\n    }\n\n    private get taskApi(): Activiti.TaskApi {\n        return this.apiService.getInstance().activiti.taskApi;\n    }\n\n    private get modelsApi(): Activiti.ModelsApi {\n        return this.apiService.getInstance().activiti.modelsApi;\n    }\n\n    private get editorApi(): Activiti.EditorApi {\n        return this.apiService.getInstance().activiti.editorApi;\n    }\n\n    private get processApi(): Activiti.ProcessApi {\n        return this.apiService.getInstance().activiti.processApi;\n    }\n\n    private get processInstanceVariablesApi(): Activiti.ProcessInstanceVariablesApi {\n        return this.apiService.getInstance().activiti.processInstanceVariablesApi;\n    }\n\n    private get usersWorkflowApi(): Activiti.UsersWorkflowApi {\n        return this.apiService.getInstance().activiti.usersWorkflowApi;\n    }\n\n    private get groupsApi(): Activiti.GroupsApi {\n        return this.apiService.getInstance().activiti.groupsApi;\n    }\n\n    /**\n     * Parses JSON data to create a corresponding Form model.\n     * @param json JSON to create the form\n     * @param data Values for the form fields\n     * @param readOnly Should the form fields be read-only?\n     * @returns Form model created from input data\n     */\n    parseForm(json: any, data?: FormValues, readOnly: boolean = false): FormModel {\n        if (json) {\n            const form = new FormModel(json, data, readOnly, this);\n            if (!json.fields) {\n                form.outcomes = [\n                    new FormOutcomeModel(form, {\n                        id: '$save',\n                        name: FormOutcomeModel.SAVE_ACTION,\n                        isSystem: true\n                    })\n                ];\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Creates a Form with a field for each metadata property.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createFormFromANode(formName: string): Observable<any> {\n        return new Observable((observer) => {\n            this.createForm(formName).subscribe(\n                (form) => {\n                    this.ecmModelService.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                        (customType) => {\n                            const formDefinitionModel = new FormDefinitionModel(form.id, form.name, form.lastUpdatedByFullName, form.lastUpdated, customType.entry.properties);\n                            from(\n                                this.editorApi.saveForm(form.id, formDefinitionModel)\n                            ).subscribe((formData) => {\n                                observer.next(formData);\n                                observer.complete();\n                            }, (err) => this.handleError(err));\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    /**\n     * Create a Form.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createForm(formName: string): Observable<any> {\n        const dataModel = {\n            name: formName,\n            description: '',\n            modelType: 2,\n            stencilSet: 0\n        };\n\n        return from(\n            this.modelsApi.createModel(dataModel)\n        );\n    }\n\n    /**\n     * Saves a form.\n     * @param formId ID of the form to save\n     * @param formModel Model data for the form\n     * @returns Data for the saved form\n     */\n    saveForm(formId: number, formModel: FormDefinitionModel): Observable<any> {\n        return from(\n            this.editorApi.saveForm(formId, formModel)\n        );\n    }\n\n    /**\n     * Searches for a form by name.\n     * @param name The form name to search for\n     * @returns Form model(s) matching the search name\n     */\n    searchFrom(name: string): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(\n            this.modelsApi.getModels(opts)\n        )\n            .pipe(\n                map(function (forms: any) {\n                    return forms.data.find((formData) => formData.name === name);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the forms.\n     * @returns List of form models\n     */\n    getForms(): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions.\n     * @returns List of process definitions\n     */\n    getProcessDefinitions(): Observable<any> {\n        return from(this.processApi.getProcessDefinitions({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets instance variables for a process.\n     * @param processInstanceId ID of the target process\n     * @returns List of instance variable information\n     */\n    getProcessVariablesById(processInstanceId: string): Observable<any[]> {\n        return from(this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks.\n     * @returns List of tasks\n     */\n    getTasks(): Observable<any> {\n        return from(this.taskApi.listTasks({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task.\n     * @param taskId Task Id\n     * @returns Task info\n     */\n    getTask(taskId: string): Observable<any> {\n        return from(this.taskApi.getTask(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Saves a task form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @returns Null response when the operation is complete\n     */\n    saveTaskForm(taskId: string, formValues: FormValues): Observable<any> {\n        const saveFormRepresentation = <SaveFormRepresentation> { values: formValues };\n\n        return from(this.taskApi.saveTaskForm(taskId, saveFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Completes a Task Form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @param outcome Form Outcome\n     * @returns Null response when the operation is complete\n     */\n    completeTaskForm(taskId: string, formValues: FormValues, outcome?: string): Observable<any> {\n        const completeFormRepresentation: any = <CompleteFormRepresentation> { values: formValues };\n        if (outcome) {\n            completeFormRepresentation.outcome = outcome;\n        }\n\n        return from(this.taskApi.completeTaskForm(taskId, completeFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form related to a task.\n     * @param taskId ID of the target task\n     * @returns Form definition\n     */\n    getTaskForm(taskId: string): Observable<any> {\n        return from(this.taskApi.getTaskForm(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form definition.\n     * @param formId ID of the target form\n     * @returns Form definition\n     */\n    getFormDefinitionById(formId: number): Observable<any> {\n        return from(this.editorApi.getForm(formId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the form definition with a given name.\n     * @param name The form name\n     * @returns Form definition\n     */\n    getFormDefinitionByName(name: string): Observable<any> {\n        const opts = {\n            'filter': 'myReusableForms',\n            'filterText': name,\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.getFormId),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form instance for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstanceStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a process instance.\n     * @param processId ID of the process to get\n     * @returns Process instance\n     */\n    getProcessInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstance(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form definition for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormDefinition(processId: string): Observable<any> {\n        return from(this.processApi.getProcessDefinitionStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValues(taskId: string, field: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValues(taskId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValuesByProcessId(processDefinitionId: string, field: string): Observable<any> {\n        return from(this.processApi.getRestFieldValues(processDefinitionId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumnByProcessId(processDefinitionId: string, field: string, column?: string): Observable<any> {\n        return from(this.processApi.getRestTableFieldValues(processDefinitionId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumn(taskId: string, field: string, column?: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValuesColumn(taskId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a URL for the profile picture of a user.\n     * @param userId ID of the target user\n     * @returns URL string\n     */\n    getUserProfileImageApi(userId: number): string {\n        return this.apiService.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Gets a list of workflow users.\n     * @param filter Filter to select specific users\n     * @param groupId Group ID for the search\n     * @returns Array of users\n     */\n    getWorkflowUsers(filter: string, groupId?: string): Observable<UserProcessModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.usersWorkflowApi.getUsers(option))\n            .pipe(\n                switchMap((response: any) => <UserProcessModel[]> response.data || []),\n                map((user: any) => {\n                    user.userImage = this.getUserProfileImageApi(user.id);\n                    return of(user);\n                }),\n                combineAll(),\n                defaultIfEmpty([]),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of groups in a workflow.\n     * @param filter Filter to select specific groups\n     * @param groupId Group ID for the search\n     * @returns Array of groups\n     */\n    getWorkflowGroups(filter: string, groupId?: string): Observable<GroupModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.groupsApi.getGroups(option))\n            .pipe(\n                map((response: any) => <GroupModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the ID of a form.\n     * @param form Object representing a form\n     * @returns ID string\n     */\n    getFormId(form: any): string {\n        let result = null;\n\n        if (form && form.data && form.data.length > 0) {\n            result = form.data[0].id;\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates a JSON representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Error message\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = FormService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : FormService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../services/form.service';\nimport { FormFieldModel } from './core/index';\n\nexport const baseHost = {\n    '(click)': 'event($event)',\n    '(blur)': 'event($event)',\n    '(change)': 'event($event)',\n    '(focus)': 'event($event)',\n    '(focusin)': 'event($event)',\n    '(focusout)': 'event($event)',\n    '(input)': 'event($event)',\n    '(invalid)': 'event($event)',\n    '(select)': 'event($event)'\n};\n\n/**\n * Base widget component.\n */\n@Component({\n    selector: 'base-widget',\n    template: '',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class WidgetComponent implements AfterViewInit {\n\n    static DEFAULT_HYPERLINK_URL: string = '#';\n    static DEFAULT_HYPERLINK_SCHEME: string = 'http://';\n\n    /** Does the widget show a read-only value? (ie, can't be edited) */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Data to be displayed in the field */\n    @Input()\n    field: FormFieldModel;\n\n    /**\n     * Emitted when a field value changes.\n     */\n    @Output()\n    fieldChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    constructor(public formService?: FormService) {\n    }\n\n    hasField() {\n        return this.field ? true : false;\n    }\n\n    // Note for developers:\n    // returns <any> object to be able binding it to the <element required=\"required\"> attribute\n    isRequired(): any {\n        if (this.field && this.field.required) {\n            return true;\n        }\n        return null;\n    }\n\n    isValid(): boolean {\n        return this.field.validationSummary ? true : false;\n    }\n\n    hasValue(): boolean {\n        return this.field &&\n            this.field.value !== null &&\n            this.field.value !== undefined;\n    }\n\n    isInvalidFieldRequired() {\n        return !this.field.isValid && !this.field.validationSummary && this.isRequired();\n    }\n\n    ngAfterViewInit() {\n        this.fieldChanged.emit(this.field);\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    onFieldChanged(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    protected getHyperlinkUrl(field: FormFieldModel) {\n        let url = WidgetComponent.DEFAULT_HYPERLINK_URL;\n        if (field && field.hyperlinkUrl) {\n            url = field.hyperlinkUrl;\n            if (!/^https?:\\/\\//i.test(url)) {\n                url = `${WidgetComponent.DEFAULT_HYPERLINK_SCHEME}${url}`;\n            }\n        }\n        return url;\n    }\n\n    protected getHyperlinkText(field: FormFieldModel) {\n        if (field) {\n            return field.displayText || field.hyperlinkUrl;\n        }\n        return null;\n    }\n\n    event(event: Event): void {\n        this.formService.formEvents.next(event);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ContainerColumnModel } from './../core/container-column.model';\nimport { ContainerModel } from './../core/container.model';\nimport { FormFieldTypes } from './../core/form-field-types';\nimport { FormFieldModel } from './../core/form-field.model';\n\nexport class ContainerWidgetComponentModel extends ContainerModel {\n\n    columns: ContainerColumnModel[] = [];\n    isExpanded: boolean = true;\n    rowspan: number = 1;\n    colspan: number = 1;\n\n    isGroup(): boolean {\n        return this.type === FormFieldTypes.GROUP;\n    }\n\n    isCollapsible(): boolean {\n        let allowCollapse = false;\n\n        if (this.isGroup() && this.field.params['allowCollapse']) {\n            allowCollapse = <boolean> this.field.params['allowCollapse'];\n        }\n\n        return allowCollapse;\n    }\n\n    isCollapsedByDefault(): boolean {\n        let collapseByDefault = false;\n\n        if (this.isCollapsible() && this.field.params['collapseByDefault']) {\n            collapseByDefault = <boolean> this.field.params['collapseByDefault'];\n        }\n\n        return collapseByDefault;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field);\n\n        if (this.field) {\n            this.columns = this.field.columns || [];\n            this.isExpanded = !this.isCollapsedByDefault();\n            this.colspan = field.colspan;\n            this.rowspan = field.rowspan;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\nimport { ContainerWidgetComponentModel } from './container.widget.model';\n\n@Component({\n    selector: 'container-widget',\n    templateUrl: './container.widget.html',\n    styleUrls: ['./container.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContainerWidgetComponent extends WidgetComponent implements OnInit, AfterViewInit {\n\n    content: ContainerWidgetComponentModel;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    onExpanderClicked() {\n        if (this.content && this.content.isCollapsible()) {\n            this.content.isExpanded = !this.content.isExpanded;\n        }\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new ContainerWidgetComponentModel(this.field);\n        }\n    }\n\n    /**\n     * Serializes column fields\n     */\n    get fields(): FormFieldModel[] {\n        const fields = [];\n\n        let rowContainsElement = true,\n            rowIndex = 0;\n\n        while (rowContainsElement) {\n            rowContainsElement = false;\n            for (let i = 0; i < this.content.columns.length; i++ ) {\n                const field = this.content.columns[i].fields[rowIndex];\n                if (field) {\n                    rowContainsElement = true;\n                }\n\n                fields.push(field);\n            }\n            rowIndex++;\n        }\n\n        return fields;\n    }\n\n    /**\n     * Calculate the column width based on the numberOfColumns and current field's colspan property\n     *\n     * @param field\n     */\n    getColumnWith(field: FormFieldModel): string {\n        const colspan = field ? field.colspan : 1;\n        return (100 / this.content.json.numberOfColumns) * colspan + '%';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentChecked, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormFieldModel, TabModel } from './../core/index';\n\n@Component({\n    selector: 'tabs-widget',\n    templateUrl: './tabs.widget.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabsWidgetComponent implements AfterContentChecked {\n\n    @Input()\n    tabs: TabModel[] = [];\n\n    @Output()\n    formTabChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    visibleTabs: TabModel[] = [];\n\n    hasTabs() {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    ngAfterContentChecked() {\n        this.filterVisibleTabs();\n    }\n\n    filterVisibleTabs() {\n        this.visibleTabs = this.tabs.filter((tab) => {\n            return tab.isVisible;\n        });\n    }\n\n    tabChanged(field: FormFieldModel) {\n        this.formTabChanged.emit(field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'unknown-widget',\n    template: `\n            <mat-list class=\"adf-unknown-widget\">\n                <mat-list-item>\n                     <mat-icon class=\"mat-24\">error_outline</mat-icon>\n                     <span class=\"adf-unknown-text\">Unknown type: {{field.type}}</span>\n                </mat-list-item>\n            </mat-list>\n\n    `,\n    styleUrls: ['./unknown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UnknownWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'amount-widget',\n    templateUrl: './amount.widget.html',\n    styleUrls: ['./amount.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class AmountWidgetComponent extends WidgetComponent implements OnInit {\n\n    static DEFAULT_CURRENCY: string = '$';\n\n    currency: string = AmountWidgetComponent.DEFAULT_CURRENCY;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.currency) {\n            this.currency = this.field.currency;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'checkbox-widget',\n    templateUrl: './checkbox.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'date-widget',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    templateUrl: './date.widget.html',\n    styleUrls: ['./date.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateWidgetComponent extends WidgetComponent implements OnInit, OnDestroy {\n\n    DATE_FORMAT = 'DD-MM-YYYY';\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, this.DATE_FORMAT);\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, this.DATE_FORMAT);\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'display-text-widget',\n    templateUrl: './display-text.widget.html',\n    styleUrls: ['./display-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DisplayTextWidgetComponentComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'adf-form-document-widget',\n    templateUrl: 'document.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentWidgetComponent extends WidgetComponent implements OnInit {\n\n    fileId: string = null;\n    hasFile: boolean = false;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const file = this.field.value;\n\n            if (file) {\n                this.fileId = file.id;\n                this.hasFile = true;\n            } else {\n                this.fileId = null;\n                this.hasFile = false;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'dropdown-widget',\n    templateUrl: './dropdown.widget.html',\n    styleUrls: ['./dropdown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DropdownWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getValuesByTaskId();\n            } else {\n                this.getValuesByProcessDefinitionId();\n            }\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionValue(option: FormFieldOption, fieldValue: string): string {\n        let optionValue: string = '';\n        if (option.id === 'empty' || option.name !== fieldValue) {\n            optionValue = option.id;\n        } else {\n            optionValue = option.name;\n        }\n        return optionValue;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport moment from 'moment-es6';\nimport { Observable, from, throwError } from 'rxjs';\nimport { FormFieldModel, FormModel, TabModel } from '../components/widgets/core/index';\nimport { TaskProcessVariableModel } from '../models/task-process-variable.model';\nimport { WidgetVisibilityModel, WidgetTypeEnum } from '../models/widget-visibility.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetVisibilityService {\n\n    private processVarList: TaskProcessVariableModel[];\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public refreshVisibility(form: FormModel) {\n        if (form && form.tabs && form.tabs.length > 0) {\n            form.tabs.map((tabModel) => this.refreshEntityVisibility(tabModel));\n        }\n\n        if (form) {\n            form.getFormFields().map((field) => this.refreshEntityVisibility(field));\n        }\n    }\n\n    refreshEntityVisibility(element: FormFieldModel | TabModel) {\n        const visible = this.evaluateVisibility(element.form, element.visibilityCondition);\n        element.isVisible = visible;\n    }\n\n    evaluateVisibility(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        const isLeftFieldPresent = visibilityObj && (visibilityObj.leftType || visibilityObj.leftValue);\n        if (!isLeftFieldPresent || isLeftFieldPresent === 'null') {\n            return true;\n        } else {\n            return this.isFieldVisible(form, visibilityObj);\n        }\n    }\n\n    isFieldVisible(form: FormModel, visibilityObj: WidgetVisibilityModel, accumulator: any[] = [], result: boolean = false): boolean {\n        const leftValue = this.getLeftValue(form, visibilityObj);\n        const rightValue = this.getRightValue(form, visibilityObj);\n        const actualResult = this.evaluateCondition(leftValue, rightValue, visibilityObj.operator);\n\n        if (this.isValidOperator(visibilityObj.nextConditionOperator)) {\n            accumulator.push({ value: actualResult, operator: visibilityObj.nextConditionOperator });\n        }\n\n        if (this.isValidCondition(visibilityObj.nextCondition)) {\n            result = this.isFieldVisible(form, visibilityObj.nextCondition, accumulator);\n        } else if (accumulator[0] !== undefined) {\n            result = accumulator[0].value;\n            for (let i = 1; i < accumulator.length; i++) {\n                if (accumulator[i] !== undefined) {\n                    result = this.evaluateLogicalOperation(\n                        accumulator[i - 1].operator,\n                        result,\n                        accumulator[i].value\n                    );\n                }\n            }\n        } else {\n            result = actualResult;\n        }\n        return !!result;\n\n    }\n\n    getLeftValue(form: FormModel, visibilityObj: WidgetVisibilityModel): string {\n        let leftValue = '';\n        if (visibilityObj.leftType && visibilityObj.leftType === WidgetTypeEnum.variable) {\n            leftValue = this.getVariableValue(form, visibilityObj.leftValue, this.processVarList);\n        } else if (visibilityObj.leftType && visibilityObj.leftType === WidgetTypeEnum.field) {\n            leftValue = this.getFormValue(form, visibilityObj.leftValue);\n            if (leftValue === undefined || leftValue === '') {\n                const variableValue = this.getVariableValue(form, visibilityObj.leftValue, this.processVarList);\n                leftValue = !this.isInvalidValue(variableValue) ? variableValue : leftValue;\n            }\n        }\n        return leftValue;\n    }\n\n    getRightValue(form: FormModel, visibilityObj: WidgetVisibilityModel): string {\n        let valueFound = '';\n        if (visibilityObj.rightType === WidgetTypeEnum.variable) {\n            valueFound = this.getVariableValue(form, visibilityObj.rightValue, this.processVarList);\n        } else if (visibilityObj.rightType === WidgetTypeEnum.field) {\n            valueFound = this.getFormValue(form, visibilityObj.rightValue);\n        } else {\n            if (moment(visibilityObj.rightValue, 'YYYY-MM-DD', true).isValid()) {\n                valueFound = visibilityObj.rightValue + 'T00:00:00.000Z';\n            } else {\n                valueFound = visibilityObj.rightValue;\n            }\n        }\n        return valueFound;\n    }\n\n    getFormValue(form: FormModel, fieldId: string): any {\n        let value = this.getFieldValue(form.values, fieldId);\n\n        if (this.isInvalidValue(value)) {\n            value = this.searchValueInForm(form, fieldId);\n        }\n        return value;\n    }\n\n    getFieldValue(valueList: any, fieldId: string): any {\n        let dropDownFilterByName, valueFound;\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            dropDownFilterByName = fieldId.substring(0, fieldId.length - 6);\n            if (valueList[dropDownFilterByName]) {\n                valueFound = valueList[dropDownFilterByName].name;\n            }\n        } else if (valueList[fieldId] && valueList[fieldId].id) {\n            valueFound = valueList[fieldId].id;\n        } else {\n            valueFound = valueList[fieldId];\n        }\n        return valueFound;\n    }\n\n    private isInvalidValue(value: any): boolean {\n        return value === undefined || value === null;\n    }\n\n    searchValueInForm(form: FormModel, fieldId: string): string {\n        let fieldValue = '';\n        form.getFormFields().forEach((formField: FormFieldModel) => {\n            if (this.isSearchedField(formField, fieldId)) {\n                fieldValue = this.getObjectValue(formField, fieldId);\n                if (!fieldValue) {\n                    if (formField.value && formField.value.id) {\n                        fieldValue = formField.value.id;\n                    } else if (!this.isInvalidValue(formField.value)) {\n                        fieldValue = formField.value;\n                    }\n                }\n            }\n        });\n        return fieldValue;\n    }\n\n    private getObjectValue(field: FormFieldModel, fieldId: string): string {\n        let value = '';\n        if (field.value && field.value.name) {\n            value = field.value.name;\n        } else if (field.options) {\n            const option = field.options.find((opt) => opt.id === field.value);\n            if (option) {\n                value = this.getValueFromOption(fieldId, option);\n            }\n        }\n        return value;\n    }\n\n    private getValueFromOption(fieldId: string, option): string {\n        let optionValue = '';\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            optionValue = option.name;\n        } else {\n            optionValue = option.id;\n        }\n        return optionValue;\n    }\n\n    private isSearchedField(field: FormFieldModel, fieldToFind: string): boolean {\n        return (field.id && fieldToFind) ? field.id.toUpperCase() === fieldToFind.toUpperCase() : false;\n    }\n\n    getVariableValue(form: FormModel, name: string, processVarList: TaskProcessVariableModel[]): string {\n        const processVariableValue = this.getProcessVariableValue(name, processVarList);\n        const variableDefaultValue = this.getFormVariableDefaultValue(form, name);\n        return (processVariableValue === undefined) ? variableDefaultValue : processVariableValue;\n    }\n\n    private getFormVariableDefaultValue(form: FormModel, identifier: string): string {\n        const variables = this.getFormVariables(form);\n        if (variables) {\n            const formVariable = variables.find((formVar) => {\n                return formVar.name === identifier || formVar.id === identifier;\n            });\n\n            let value;\n            if (formVariable) {\n                value = formVariable.value;\n                if (formVariable.type === 'date') {\n                    value += 'T00:00:00.000Z';\n                }\n            }\n            return value;\n        }\n    }\n\n    private getFormVariables(form: FormModel): any[] {\n        return  form.json.variables;\n    }\n\n    private getProcessVariableValue(name: string, processVarList: TaskProcessVariableModel[]): string {\n        if (processVarList) {\n            const processVariable = processVarList.find((variable) => variable.id === name);\n            if (processVariable) {\n                return processVariable.value;\n            }\n        }\n\n    }\n\n    evaluateLogicalOperation(logicOp, previousValue, newValue): boolean {\n        switch (logicOp) {\n            case 'and':\n                return previousValue && newValue;\n            case 'or' :\n                return previousValue || newValue;\n            case 'and-not':\n                return previousValue && !newValue;\n            case 'or-not':\n                return previousValue || !newValue;\n            default:\n                this.logService.error('NO valid operation! wrong op request : ' + logicOp);\n                break;\n        }\n    }\n\n    evaluateCondition(leftValue, rightValue, operator): boolean {\n        switch (operator) {\n            case '==':\n                return leftValue + '' === rightValue + '';\n            case '<':\n                return leftValue < rightValue;\n            case '!=':\n                return leftValue + '' !== rightValue + '';\n            case '>':\n                return leftValue > rightValue;\n            case '>=':\n                return leftValue >= rightValue;\n            case '<=':\n                return leftValue <= rightValue;\n            case 'empty':\n                return leftValue ? leftValue === '' : true;\n            case '!empty':\n                return leftValue ? leftValue !== '' : false;\n            default:\n                this.logService.error('NO valid operation!');\n                break;\n        }\n        return;\n    }\n\n    cleanProcessVariable() {\n        this.processVarList = [];\n    }\n\n    getTaskProcessVariable(taskId: string): Observable<TaskProcessVariableModel[]> {\n        return from(this.apiService.getInstance().activiti.taskFormsApi.getTaskFormVariables(taskId))\n            .pipe(\n                map((res) => {\n                    const jsonRes = this.toJson(res);\n                    this.processVarList = <TaskProcessVariableModel[]> jsonRes;\n                    return jsonRes;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    toJson(res: any): any {\n        return res || {};\n    }\n\n    private isValidOperator(operator: string): boolean {\n        return operator !== undefined;\n    }\n\n    private isValidCondition(condition: WidgetVisibilityModel): boolean {\n        return !!(condition && condition.operator);\n    }\n\n    private handleError(err) {\n        this.logService.error('Error while performing a call');\n        return throwError('Error while performing a call - Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicRowValidationSummary } from '../components/widgets/dynamic-table/dynamic-row-validation-summary.model';\nimport { DynamicTableRow } from '../components/widgets/dynamic-table/dynamic-table-row.model';\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateDynamicTableRowEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel,\n                field: FormFieldModel,\n                public row: DynamicTableRow,\n                public summary: DynamicRowValidationSummary) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class DateCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Date'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.editable && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n\n            if (!value && !column.required) {\n                return true;\n            }\n\n            const dateValue = moment(value, 'YYYY-MM-DDTHH:mm:ss.SSSSZ', true);\n            if (!dateValue.isValid()) {\n                if (summary) {\n                    summary.isValid = false;\n                    summary.message = `Invalid '${column.name}' format.`;\n                }\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ErrorMessageModel } from '../core/index';\n\nexport class DynamicRowValidationSummary extends ErrorMessageModel {\n\n    isValid: boolean;\n\n    constructor(json?: any) {\n        super(json);\n        this.isValid = json.isValid;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class NumberCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Number',\n        'Amount'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (value === null ||\n                value === undefined ||\n                value === '' ||\n                this.isNumber(value)) {\n                return true;\n            }\n\n            if (summary) {\n                summary.isValid = false;\n                summary.message = `Field '${column.name}' must be a number.`;\n            }\n            return false;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class RequiredCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'String',\n        'Number',\n        'Amount',\n        'Date',\n        'Dropdown'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (column.required) {\n                if (value === null || value === undefined || value === '') {\n                    if (summary) {\n                        summary.isValid = false;\n                        summary.message = `Field '${column.name}' is required.`;\n                    }\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { ValidateDynamicTableRowEvent } from '../../../events/validate-dynamic-table-row.event';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { FormWidgetModel } from './../core/form-widget.model';\nimport { CellValidator } from './cell-validator.model';\nimport { DateCellValidator } from './date-cell-validator-model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { NumberCellValidator } from './number-cell-validator.model';\nimport { RequiredCellValidator } from './required-cell-validator.model';\n\nexport class DynamicTableModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n    columns: DynamicTableColumn[] = [];\n    visibleColumns: DynamicTableColumn[] = [];\n    rows: DynamicTableRow[] = [];\n\n    private _selectedRow: DynamicTableRow;\n    private _validators: CellValidator[] = [];\n\n    get selectedRow(): DynamicTableRow {\n        return this._selectedRow;\n    }\n\n    set selectedRow(value: DynamicTableRow) {\n        if (this._selectedRow && this._selectedRow === value) {\n            this._selectedRow.selected = false;\n            this._selectedRow = null;\n            return;\n        }\n\n        this.rows.forEach((row) => row.selected = false);\n\n        this._selectedRow = value;\n\n        if (value) {\n            this._selectedRow.selected = true;\n        }\n    }\n\n    constructor(field: FormFieldModel, private formService: FormService) {\n        super(field.form, field.json);\n        this.field = field;\n\n        if (field.json) {\n            const columns = this.getColumns(field);\n            if (columns) {\n                this.columns = columns;\n                this.visibleColumns = this.columns.filter((col) => col.visible);\n            }\n\n            if (field.json.value) {\n                this.rows = field.json.value.map((obj) => <DynamicTableRow> {selected: false, value: obj});\n            }\n        }\n\n        this._validators = [\n            new RequiredCellValidator(),\n            new DateCellValidator(),\n            new NumberCellValidator()\n        ];\n    }\n\n    private getColumns(field: FormFieldModel): DynamicTableColumn[] {\n        if (field && field.json) {\n            let definitions = field.json.columnDefinitions;\n            if (!definitions && field.json.params && field.json.params.field) {\n                definitions = field.json.params.field.columnDefinitions;\n            }\n\n            if (definitions) {\n                return definitions.map((obj) => <DynamicTableColumn> obj);\n            }\n        }\n        return null;\n    }\n\n    flushValue() {\n        if (this.field) {\n            this.field.value = this.rows.map((r) => r.value);\n            this.field.updateForm();\n        }\n    }\n\n    moveRow(row: DynamicTableRow, offset: number) {\n        const oldIndex = this.rows.indexOf(row);\n        if (oldIndex > -1) {\n            let newIndex = (oldIndex + offset);\n\n            if (newIndex < 0) {\n                newIndex = 0;\n            } else if (newIndex >= this.rows.length) {\n                newIndex = this.rows.length;\n            }\n\n            const arr = this.rows.slice();\n            arr.splice(oldIndex, 1);\n            arr.splice(newIndex, 0, row);\n            this.rows = arr;\n\n            this.flushValue();\n        }\n    }\n\n    deleteRow(row: DynamicTableRow) {\n        if (row) {\n            if (this.selectedRow === row) {\n                this.selectedRow = null;\n            }\n            const idx = this.rows.indexOf(row);\n            if (idx > -1) {\n                this.rows.splice(idx, 1);\n                this.flushValue();\n            }\n        }\n    }\n\n    addRow(row: DynamicTableRow) {\n        if (row) {\n            this.rows.push(row);\n            // this.selectedRow = row;\n        }\n    }\n\n    validateRow(row: DynamicTableRow): DynamicRowValidationSummary {\n        const summary = new DynamicRowValidationSummary( {\n            isValid: true,\n            message: null\n        });\n\n        const event = new ValidateDynamicTableRowEvent(this.form, this.field, row, summary);\n        this.formService.validateDynamicTableRow.next(event);\n\n        if (event.defaultPrevented || !summary.isValid) {\n            return summary;\n        }\n\n        if (row) {\n            for (const col of this.columns) {\n                for (const validator of this._validators) {\n                    if (!validator.validate(row, col, summary)) {\n                        return summary;\n                    }\n                }\n            }\n        }\n\n        return summary;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        const rowValue = row.value[column.id];\n\n        if (column.type === 'Dropdown') {\n            if (rowValue) {\n                return rowValue.name;\n            }\n        }\n\n        if (column.type === 'Boolean') {\n            return rowValue ? true : false;\n        }\n\n        if (column.type === 'Date') {\n            if (rowValue) {\n                return moment(rowValue.split('T')[0], 'YYYY-MM-DD').format('DD-MM-YYYY');\n            }\n        }\n\n        return rowValue || '';\n    }\n\n    getDisplayText(column: DynamicTableColumn): string {\n        let columnName = column.name;\n        if (column.type === 'Amount') {\n            const currency = column.amountCurrency || '$';\n            columnName = `${column.name} (${currency})`;\n        }\n        return columnName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetVisibilityService } from '../../../services/widget-visibility.service';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { DynamicTableModel } from './dynamic-table.widget.model';\n\n@Component({\n    selector: 'dynamic-table-widget',\n    templateUrl: './dynamic-table.widget.html',\n    styleUrls: ['./dynamic-table.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DynamicTableWidgetComponent extends WidgetComponent implements OnInit {\n\n    ERROR_MODEL_NOT_FOUND = 'Table model not found';\n\n    content: DynamicTableModel;\n\n    editMode: boolean = false;\n    editRow: DynamicTableRow = null;\n\n    private selectArrayCode = [32, 0, 13];\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef,\n                private visibilityService: WidgetVisibilityService,\n                private logService: LogService,\n                private cd: ChangeDetectorRef) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new DynamicTableModel(this.field, this.formService);\n            this.visibilityService.refreshVisibility(this.field.form);\n        }\n    }\n\n    forceFocusOnAddButton() {\n        if (this.content) {\n            this.cd.detectChanges();\n            const buttonAddRow = <HTMLButtonElement> this.elementRef.nativeElement.querySelector('#' + this.content.id + '-add-row');\n            if (this.isDynamicTableReady(buttonAddRow)) {\n                buttonAddRow.focus();\n            }\n        }\n    }\n\n    private isDynamicTableReady(buttonAddRow) {\n        return this.field && !this.editMode && buttonAddRow;\n    }\n\n    isValid() {\n        let valid = true;\n\n        if (this.content && this.content.field) {\n            valid = this.content.field.isValid;\n        }\n\n        return valid;\n    }\n\n    onRowClicked(row: DynamicTableRow) {\n        if (this.content) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    onKeyPressed($event: KeyboardEvent, row: DynamicTableRow) {\n        if (this.content && this.isEnterOrSpacePressed($event.keyCode)) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    private isEnterOrSpacePressed(keyCode) {\n        return this.selectArrayCode.indexOf(keyCode) !== -1;\n    }\n\n    hasSelection(): boolean {\n        return !!(this.content && this.content.selectedRow);\n    }\n\n    moveSelectionUp(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, -1);\n            return true;\n        }\n        return false;\n    }\n\n    moveSelectionDown(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, 1);\n            return true;\n        }\n        return false;\n    }\n\n    deleteSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.deleteRow(this.content.selectedRow);\n            return true;\n        }\n        return false;\n    }\n\n    addNewRow(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = <DynamicTableRow> {\n                isNew: true,\n                selected: false,\n                value: {}\n            };\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    editSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = this.copyRow(this.content.selectedRow);\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        if (this.content) {\n            const cellValue = this.content.getCellValue(row, column);\n            if (column.type === 'Amount') {\n                return (column.amountCurrency || '$') + ' ' + (cellValue || 0);\n            }\n            return cellValue;\n        }\n        return null;\n    }\n\n    onSaveChanges() {\n        if (this.content) {\n            if (this.editRow.isNew) {\n                const row = this.copyRow(this.editRow);\n                this.content.selectedRow = null;\n                this.content.addRow(row);\n                this.editRow.isNew = false;\n            } else {\n                this.content.selectedRow.value = this.copyObject(this.editRow.value);\n            }\n            this.content.flushValue();\n        } else {\n            this.logService.error(this.ERROR_MODEL_NOT_FOUND);\n        }\n        this.editMode = false;\n        this.forceFocusOnAddButton();\n    }\n\n    onCancelChanges() {\n        this.editMode = false;\n        this.editRow = null;\n        this.forceFocusOnAddButton();\n    }\n\n    copyRow(row: DynamicTableRow): DynamicTableRow {\n        return <DynamicTableRow> {\n            value: this.copyObject(row.value)\n        };\n    }\n\n    private copyObject(obj: any): any {\n        let result = obj;\n\n        if (typeof obj === 'object' && obj !== null && obj !== undefined) {\n            result = Object.assign({}, obj);\n            Object.keys(obj).forEach((key) => {\n                if (typeof obj[key] === 'object') {\n                    result[key] = this.copyObject(obj[key]);\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-boolean-editor',\n    templateUrl: './boolean.editor.html',\n    styleUrls: ['./boolean.editor.scss']\n})\nexport class BooleanEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: boolean = (<HTMLInputElement> event).checked;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\n\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDatepickerInputEvent } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-date-editor',\n    templateUrl: './date.editor.html',\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}],\n    styleUrls: ['./date.editor.scss']\n})\nexport class DateEditorComponent implements OnInit, OnDestroy {\n\n    DATE_FORMAT: string = 'DD-MM-YYYY';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), this.DATE_FORMAT);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onDateChanged(newDateValue: MatDatepickerInputEvent<any> | HTMLInputElement) {\n        if (newDateValue && newDateValue.value) {\n            /* validates the user inputs */\n            const momentDate = moment(newDateValue.value, this.DATE_FORMAT, true);\n\n            if (!momentDate.isValid()) {\n                this.row.value[this.column.id] =  newDateValue.value;\n            } else {\n                this.row.value[this.column.id] = `${momentDate.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                this.table.flushValue();\n            }\n        } else {\n            /* removes the date  */\n            this.row.value[this.column.id] = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-datetime-editor',\n    templateUrl: './datetime.editor.html',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    styleUrls: ['./datetime.editor.scss']\n})\nexport class DateTimeEditorComponent implements OnInit, OnDestroy {\n\n    DATE_TIME_FORMAT: string = 'DD/MM/YYYY HH:mm';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_TIME_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), this.DATE_TIME_FORMAT);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const newValue = moment(newDateValue.value, this.DATE_TIME_FORMAT);\n            this.row.value[this.column.id] = newDateValue.value.format(this.DATE_TIME_FORMAT);\n            this.value = newValue;\n            this.table.flushValue();\n        } else if (newDateValue) {\n            const newValue = moment(newDateValue, this.DATE_TIME_FORMAT);\n            this.value = newValue;\n            this.row.value[this.column.id] = newDateValue;\n            this.table.flushValue();\n        } else {\n            this.row.value[this.column.id] = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../../../services/log.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormService } from './../../../../../services/form.service';\nimport { DynamicTableColumnOption } from './../../dynamic-table-column-option.model';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-dropdown-editor',\n    templateUrl: './dropdown.editor.html',\n    styleUrls: ['./dropdown.editor.scss']\n})\nexport class DropdownEditorComponent implements OnInit {\n\n    value: any = null;\n    options: DynamicTableColumnOption[] = [];\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        const field = this.table.field;\n        if (field) {\n            if (this.column.optionType === 'rest') {\n                if (this.table.form && this.table.form.taskId) {\n                    this.getValuesByTaskId(field);\n                } else {\n                    this.getValuesByProcessDefinitionId(field);\n                }\n            } else {\n                this.options = this.column.options || [];\n                this.value = this.table.getCellValue(this.row, this.column);\n            }\n        }\n    }\n\n    getValuesByTaskId(field) {\n        this.formService\n            .getRestFieldValuesColumn(\n                field.form.taskId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId(field) {\n        this.formService\n            .getRestFieldValuesColumnByProcessId(\n                field.form.processDefinitionId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event).value;\n        value = column.options.find((opt) => opt.name === value);\n        row.value[column.id] = value;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DynamicRowValidationSummary } from './../dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './../dynamic-table-column.model';\nimport { DynamicTableRow } from './../dynamic-table-row.model';\nimport { DynamicTableModel } from './../dynamic-table.widget.model';\n\n@Component({\n    selector: 'row-editor',\n    templateUrl: './row.editor.html',\n    styleUrls: ['./row.editor.css']\n})\nexport class RowEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    @Output()\n    save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    cancel: EventEmitter<any> = new EventEmitter<any>();\n\n    validationSummary: DynamicRowValidationSummary;\n\n    constructor() {\n        this.validationSummary = new DynamicRowValidationSummary({ isValid: true, message: '' });\n    }\n\n    onCancelChanges() {\n        this.cancel.emit({\n            table: this.table,\n            row: this.row,\n            column: this.column\n        });\n    }\n\n    onSaveChanges() {\n        this.validate();\n        if (this.isValid()) {\n            this.save.emit({\n                table: this.table,\n                row: this.row,\n                column: this.column\n            });\n        }\n    }\n\n    private isValid(): boolean {\n        return this.validationSummary && this.validationSummary.isValid;\n    }\n\n    private validate() {\n        this.validationSummary = this.table.validateRow(this.row);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-text-editor',\n    templateUrl: './text.editor.html',\n    styleUrls: ['./text.editor.scss']\n})\nexport class TextEditorComponent implements OnInit {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    displayName: string;\n\n    ngOnInit() {\n        this.displayName = this.table.getDisplayText(this.column);\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: any = (<HTMLInputElement> event.target).value;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ErrorMessageModel } from '../core/index';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'error-widget',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n            transition('void => enter', [\n                style({opacity: 0, transform: 'translateY(-100%)'}),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ErrorWidgetComponent extends WidgetComponent implements OnChanges {\n\n    @Input()\n    error: ErrorMessageModel;\n\n    @Input()\n    required: string;\n\n    translateParameters: any = null;\n\n    _subscriptAnimationState: string = '';\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['required']) {\n            this.required = changes.required.currentValue;\n            this._subscriptAnimationState = 'enter';\n        }\n        if (changes['error'] && changes['error'].currentValue) {\n            if (changes.error.currentValue.isActive()) {\n                this.error = changes.error.currentValue;\n                this.translateParameters = this.error.getAttributesAsJsonObj();\n                this._subscriptAnimationState = 'enter';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from './../core/group.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'functional-group-widget',\n    templateUrl: './functional-group.widget.html',\n    styleUrls: ['./functional-group.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FunctionalGroupWidgetComponent extends WidgetComponent implements OnInit {\n\n    value: string;\n    oldValue: string;\n    groups: GroupModel[] = [];\n    minTermLength: number = 1;\n    groupId: string;\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const group = this.field.value;\n            if (group) {\n                this.value = group.name;\n            }\n\n            const params = this.field.params;\n            if (params && params['restrictWithGroup']) {\n                const restrictWithGroup = <GroupModel> params['restrictWithGroup'];\n                this.groupId = restrictWithGroup.id;\n            }\n\n            // Load auto-completion for previously saved value\n            if (this.value) {\n                this.formService\n                    .getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((groupModel: GroupModel[]) => this.groups = groupModel || []);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.length >= this.minTermLength  && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                this.oldValue = this.value;\n                this.formService.getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((group: GroupModel[]) => {\n                        this.groups = group || [];\n                    });\n            }\n        }\n    }\n\n    flushValue() {\n        const option = this.groups.find((item) => item.name.toLocaleLowerCase() === this.value.toLocaleLowerCase());\n\n        if (option) {\n            this.field.value = option;\n            this.value = option.name;\n        } else {\n            this.field.value = null;\n            this.value = null;\n        }\n\n        this.field.updateForm();\n    }\n\n    onItemClick(item: GroupModel, event: Event) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    onItemSelect(item: GroupModel) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'hyperlink-widget',\n    templateUrl: './hyperlink.widget.html',\n    styleUrls: ['./hyperlink.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class HyperlinkWidgetComponent extends WidgetComponent implements OnInit {\n\n    linkUrl: string = WidgetComponent.DEFAULT_HYPERLINK_URL;\n    linkText: string = null;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.linkUrl = this.getHyperlinkUrl(this.field);\n            this.linkText = this.getHyperlinkText(this.field);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'multiline-text-widget',\n    templateUrl: './multiline-text.widget.html',\n    styleUrls: ['./multiline-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class MultilineTextWidgetComponentComponent extends WidgetComponent  {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename   */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\nimport { DecimalNumberPipe } from '../../../../pipes/decimal-number.pipe';\n\n@Component({\n    selector: 'number-widget',\n    templateUrl: './number.widget.html',\n    styleUrls: ['./number.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidgetComponent extends WidgetComponent implements OnInit {\n\n    displayValue: number;\n\n    constructor(public formService: FormService,\n                private decimalNumberPipe: DecimalNumberPipe) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.readOnly) {\n            this.displayValue = this.decimalNumberPipe.transform(this.field.value);\n        } else {\n            this.displayValue = this.field.value;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleProcessService {\n\n    constructor(private alfrescoJsApi: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about users across all tasks.\n     * @param taskId ID of the task\n     * @param searchWord Filter text to search for\n     * @returns Array of user information objects\n     */\n    getWorkflowUsers(taskId?: string, searchWord?: string): Observable<UserProcessModel[]> {\n        const option = { excludeTaskId: taskId, filter: searchWord };\n        return from(this.getWorkflowUserApi(option))\n            .pipe(\n                map((response: any) => <UserProcessModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the profile picture URL for the specified user.\n     * @param user The target user\n     * @returns Profile picture URL\n     */\n    getUserImage(user: UserProcessModel): string {\n        return this.getUserProfileImageApi(user.id);\n    }\n\n    /**\n     * Sets a user to be involved with a task.\n     * @param taskId ID of the target task\n     * @param idToInvolve ID of the user to involve\n     * @returns Empty response when the update completes\n     */\n    involveUserWithTask(taskId: string, idToInvolve: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToInvolve};\n        return from(this.involveUserToTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Removes a user who is currently involved with a task.\n     * @param taskId ID of the target task\n     * @param idToRemove ID of the user to remove\n     * @returns Empty response when the update completes\n     */\n    removeInvolvedUser(taskId: string, idToRemove: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToRemove};\n        return from(this.removeInvolvedUserFromTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getWorkflowUserApi(options: any) {\n        return this.alfrescoJsApi.getInstance().activiti.usersWorkflowApi.getUsers(options);\n    }\n\n    private involveUserToTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.involveUser(taskId, node);\n    }\n\n    private removeInvolvedUserFromTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.removeInvolvedUser(taskId, node);\n    }\n\n    private getUserProfileImageApi(userId: number) {\n        return this.alfrescoJsApi.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { PeopleProcessService } from '../../../../services/people-process.service';\nimport { UserProcessModel } from '../../../../models';\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from '../core/group.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport {\n    catchError,\n    distinctUntilChanged,\n    map,\n    switchMap,\n    tap\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'people-widget',\n    templateUrl: './people.widget.html',\n    styleUrls: ['./people.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleWidgetComponent extends WidgetComponent implements OnInit {\n\n    @ViewChild('inputValue')\n    input: ElementRef;\n\n    @Output()\n    peopleSelected: EventEmitter<number>;\n\n    groupId: string;\n    value: any;\n\n    searchTerm = new FormControl();\n    errorMsg = '';\n    searchTerms$: Observable<any> = this.searchTerm.valueChanges;\n\n    users$ = this.searchTerms$.pipe(\n        tap(() => {\n            this.errorMsg = '';\n        }),\n        distinctUntilChanged(),\n        switchMap((searchTerm) => {\n            const value = searchTerm.email ? this.getDisplayName(searchTerm) : searchTerm;\n            return this.formService.getWorkflowUsers(value, this.groupId)\n                .pipe(\n                    catchError((err) => {\n                        this.errorMsg = err.message;\n                        return of();\n                    })\n                );\n        }),\n        map((list: UserProcessModel[]) => {\n            const value = this.searchTerm.value.email ? this.getDisplayName(this.searchTerm.value) : this.searchTerm.value;\n            this.checkUserAndValidateForm(list, value);\n            return list;\n        })\n    );\n\n    constructor(public formService: FormService, public peopleProcessService: PeopleProcessService) {\n        super(formService);\n        this.peopleSelected = new EventEmitter();\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            if (this.field.value) {\n                this.searchTerm.setValue(this.field.value);\n            }\n            if (this.field.readOnly) {\n                this.searchTerm.disable();\n            }\n            const params = this.field.params;\n            if (params && params.restrictWithGroup) {\n                const restrictWithGroup = <GroupModel> params.restrictWithGroup;\n                this.groupId = restrictWithGroup.id;\n            }\n        }\n    }\n\n    checkUserAndValidateForm(list, value) {\n        const isValidUser = this.isValidUser(list, value);\n        if (isValidUser || value === '') {\n            this.field.validationSummary.message = '';\n            this.field.validate();\n            this.field.form.validateForm();\n        } else {\n            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            this.field.markAsInvalid();\n            this.field.form.markAsInvalid();\n        }\n    }\n\n    isValidUser(users: UserProcessModel[], name: string) {\n        if (users) {\n            return users.find((user) => {\n                const selectedUser = this.getDisplayName(user).toLocaleLowerCase() === name.toLocaleLowerCase();\n                if (selectedUser) {\n                    this.peopleSelected.emit(user && user.id || undefined);\n                }\n                return selectedUser;\n            });\n        }\n    }\n\n    getDisplayName(model: UserProcessModel) {\n        if (model) {\n            const displayName = `${model.firstName || ''} ${model.lastName || ''}`;\n            return displayName.trim();\n        }\n        return '';\n    }\n\n    onItemSelect(item: UserProcessModel) {\n        if (item) {\n            this.field.value = item;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'radio-buttons-widget',\n    templateUrl: './radio-buttons.widget.html',\n    styleUrls: ['./radio-buttons.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonsWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getOptionsByTaskId();\n            } else {\n                this.getOptionsByProcessDefinitionId();\n            }\n        }\n    }\n\n    getOptionsByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionsByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onOptionClick(optionSelected: any) {\n        this.field.value = optionSelected;\n        this.fieldChanged.emit(this.field);\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable: component-selector no-use-before-declare no-input-rename  */\n\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    OnChanges,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputMaskDirective),\n    multi: true\n};\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-text-mask], [textMask]',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class InputMaskDirective implements OnChanges, ControlValueAccessor {\n\n    /** Object defining mask and \"reversed\" status. */\n    @Input('textMask') inputMask: {\n        mask: '',\n        isReversed: false\n    };\n\n    private translationMask = {\n        '0': { pattern: /\\d/ },\n        '9': { pattern: /\\d/, optional: true },\n        '#': { pattern: /\\d/, recursive: true },\n        'A': { pattern: /[a-zA-Z0-9]/ },\n        'S': { pattern: /[a-zA-Z]/ }\n    };\n\n    private byPassKeys = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91];\n    private value;\n    private invalidCharacters = [];\n\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n\n    _onChange = (_: any) => {\n    }\n\n    _onTouched = () => {\n    }\n\n    @HostListener('input', ['$event'])\n    @HostListener('keyup', ['$event']) onTextInput(event: KeyboardEvent) {\n        if (this.inputMask && this.inputMask.mask) {\n            this.maskValue(this.el.nativeElement.value, this.el.nativeElement.selectionStart,\n                this.inputMask.mask, this.inputMask.isReversed, event.keyCode);\n        } else {\n            this._onChange(this.el.nativeElement.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['inputMask'] && changes['inputMask'].currentValue['mask']) {\n            this.inputMask = changes['inputMask'].currentValue;\n        }\n    }\n\n    writeValue(value: any) {\n        this.el.nativeElement.value = value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    private maskValue(actualValue, startCaret, maskToApply, isMaskReversed, keyCode) {\n        if (this.byPassKeys.indexOf(keyCode) === -1) {\n            const value = this.getMasked(false, actualValue, maskToApply, isMaskReversed);\n            const calculatedCaret = this.calculateCaretPosition(startCaret, actualValue, keyCode);\n            this.render.setAttribute(this.el.nativeElement, 'value', value);\n            this.el.nativeElement.value = value;\n            this.setValue(value);\n            this._onChange(value);\n            this.setCaretPosition(calculatedCaret);\n        }\n    }\n\n    private setCaretPosition(caretPosition) {\n        this.el.nativeElement.moveStart = caretPosition;\n        this.el.nativeElement.moveEnd = caretPosition;\n    }\n\n    calculateCaretPosition(caretPosition, newValue, keyCode) {\n        const newValueLength = newValue.length;\n        const oldValue = this.getValue() || '';\n        const oldValueLength = oldValue.length;\n\n        if (keyCode === 8 && oldValue !== newValue) {\n            caretPosition = caretPosition - (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n        } else if (oldValue !== newValue) {\n            if (caretPosition >= oldValueLength) {\n                caretPosition = newValueLength;\n            } else {\n                caretPosition = caretPosition + (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n            }\n        }\n        return caretPosition;\n    }\n\n    getMasked(skipMaskChars, val, mask, isReversed = false) {\n        const buf = [];\n        const value = val;\n        let maskIndex = 0;\n        const maskLen = mask.length;\n        let valueIndex = 0;\n        const valueLength = value.length;\n        let offset = 1;\n        let addMethod = 'push';\n        let resetPos = -1;\n        let lastMaskChar;\n        let lastUntranslatedMaskChar;\n        let check;\n\n        if (isReversed) {\n            addMethod = 'unshift';\n            offset = -1;\n            lastMaskChar = 0;\n            maskIndex = maskLen - 1;\n            valueIndex = valueLength - 1;\n        } else {\n            lastMaskChar = maskLen - 1;\n        }\n        check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        while (check) {\n            const maskDigit = mask.charAt(maskIndex),\n                valDigit = value.charAt(valueIndex),\n                translation = this.translationMask[maskDigit];\n\n            if (translation) {\n                if (valDigit.match(translation.pattern)) {\n                    buf[addMethod](valDigit);\n                    if (translation.recursive) {\n                        if (resetPos === -1) {\n                            resetPos = maskIndex;\n                        } else if (maskIndex === lastMaskChar) {\n                            maskIndex = resetPos - offset;\n                        }\n                        if (lastMaskChar === resetPos) {\n                            maskIndex -= offset;\n                        }\n                    }\n                    maskIndex += offset;\n                } else if (valDigit === lastUntranslatedMaskChar) {\n                    lastUntranslatedMaskChar = undefined;\n                } else if (translation.optional) {\n                    maskIndex += offset;\n                    valueIndex -= offset;\n                } else {\n                    this.invalidCharacters.push({\n                        index: valueIndex,\n                        digit: valDigit,\n                        translated: translation.pattern\n                    });\n                }\n                valueIndex += offset;\n            } else {\n                if (!skipMaskChars) {\n                    buf[addMethod](maskDigit);\n                }\n                if (valDigit === maskDigit) {\n                    valueIndex += offset;\n                } else {\n                    lastUntranslatedMaskChar = maskDigit;\n                }\n                maskIndex += offset;\n            }\n            check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        }\n\n        const lastMaskCharDigit = mask.charAt(lastMaskChar);\n        if (maskLen === valueLength + 1 && !this.translationMask[lastMaskCharDigit]) {\n            buf.push(lastMaskCharDigit);\n        }\n\n        return buf.join('');\n    }\n\n    private isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength) {\n        let check = false;\n        if (isReversed) {\n            check = (maskIndex > -1) && (valueIndex > -1);\n        } else {\n            check = (maskIndex < maskLen) && (valueIndex < valueLength);\n        }\n        return check;\n    }\n\n    private setValue(value) {\n        this.value = value;\n    }\n\n    private getValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'text-widget',\n    templateUrl: './text.widget.html',\n    styleUrls: ['./text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TextWidgetComponent extends WidgetComponent implements OnInit {\n\n    mask: string;\n    placeholder: string;\n    isMaskReversed: boolean;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.params) {\n            this.mask = this.field.params['inputMask'];\n            this.placeholder = this.field.params['inputMask'] && this.field.params['inputMaskPlaceholder'] ? this.field.params['inputMaskPlaceholder'] : this.field.placeholder;\n            this.isMaskReversed = this.field.params['inputMaskReversed'] ? this.field.params['inputMaskReversed'] : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'typeahead-widget',\n    templateUrl: './typeahead.widget.html',\n    styleUrls: ['./typeahead.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TypeaheadWidgetComponent extends WidgetComponent implements OnInit {\n\n    minTermLength: number = 1;\n    value: string;\n    oldValue: string;\n    options: FormFieldOption[] = [];\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.form.taskId && this.field.restUrl) {\n            this.getValuesByTaskId();\n        } else if (this.field.form.processDefinitionId && this.field.restUrl) {\n            this.getValuesByProcessDefinitionId();\n        }\n        if (this.isReadOnlyType()) {\n            this.value = this.field.value;\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = formFieldOption || [];\n                    this.field.options = options;\n\n                    const fieldValue = this.field.value;\n                    if (fieldValue) {\n                        const toSelect = options.find((item) => item.id === fieldValue || item.name.toLocaleLowerCase() === fieldValue.toLocaleLowerCase());\n                        if (toSelect) {\n                            this.value = toSelect.name;\n                        }\n                    }\n                    this.onFieldChanged(this.field);\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = formFieldOption || [];\n                    this.field.options = options;\n\n                    const fieldValue = this.field.value;\n                    if (fieldValue) {\n                        const toSelect = options.find((item) => item.id === fieldValue);\n                        if (toSelect) {\n                            this.value = toSelect.name;\n                        }\n                    }\n                    this.onFieldChanged(this.field);\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptions(): FormFieldOption[] {\n        const val = this.value.trim().toLocaleLowerCase();\n        return this.field.options.filter((item) => {\n            const name = item.name.toLocaleLowerCase();\n            return name.indexOf(val) > -1;\n        });\n    }\n\n    isValidOptionName(optionName: string): boolean {\n        const option = this.field.options.find((item) => item.name && item.name.toLocaleLowerCase() === optionName.toLocaleLowerCase());\n        return option ? true : false;\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.trim().length >= this.minTermLength && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                if (this.value.length >= this.minTermLength) {\n                    this.options = this.getOptions();\n                    this.oldValue = this.value;\n                    if (this.isValidOptionName(this.value)) {\n                        this.field.value = this.options[0].id;\n                    }\n                }\n            }\n        }\n        if (this.isValueDefined() && this.value.trim().length === 0) {\n            this.oldValue = this.value;\n            this.options = [];\n        }\n    }\n\n    onItemSelect(item: FormFieldOption) {\n        if (item) {\n            this.field.value = item.id;\n            this.value = item.name;\n            this.onFieldChanged(this.field);\n        }\n    }\n\n    validate() {\n        this.field.value = this.value;\n    }\n\n    isValueDefined() {\n        return this.value !== null && this.value !== undefined;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    private get contentApi(): any {\n        return this.apiService.getInstance().activiti.contentApi;\n    }\n\n    /**\n     * Create temporary related content from an uploaded file.\n     * @param file File to use for content\n     * @returns The created content data\n     */\n    createTemporaryRawRelatedContent(file: any): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.createTemporaryRawRelatedContent(file))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the metadata for a related content item.\n     * @param contentId ID of the content item\n     * @returns Metadata for the content\n     */\n    getFileContent(contentId: number): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.getContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets raw binary content data for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the related content\n     */\n    getFileRawContent(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getRawContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the preview for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the content preview\n     */\n    getContentPreview(contentId: number): Observable<Blob> {\n        return new Observable((observer) => {\n            this.contentApi.getContentPreview(contentId).then(\n                (result) => {\n                    observer.next(result);\n                    observer.complete();\n                },\n                () => {\n                    this.contentApi.getRawContent(contentId).then(\n                        (data) => {\n                            observer.next(data);\n                            observer.complete();\n                        },\n                        (err) => {\n                            observer.error(err);\n                            observer.complete();\n                        }\n                    );\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL for direct access to a related content file.\n     * @param contentId ID of the related content\n     * @returns URL to access the content\n     */\n    getFileRawContentUrl(contentId: number): string {\n        return this.contentApi.getRawContentUrl(contentId);\n    }\n\n    /**\n     * Gets the thumbnail for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the thumbnail image\n     */\n    getContentThumbnail(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getContentThumbnail(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a task instance.\n     * @param taskId ID of the target task\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getTaskRelatedContent(taskId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForTask(taskId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a process instance.\n     * @param processId ID of the target process\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getProcessRelatedContent(processId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForProcessInstance(processId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Deletes related content.\n     * @param contentId Identifier of the content to delete\n     * @returns Null response that notifies when the deletion is complete\n     */\n    deleteRelatedContent(contentId: number): Observable<any> {\n        return from(this.contentApi.deleteContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param content File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createProcessRelatedContent(processInstanceId: string, content: any, opts?: any): Observable<any> {\n        return from(this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, content, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a task instance.\n     * @param taskId ID of the target task\n     * @param file File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createTaskRelatedContent(taskId: string, file: any, opts?: any) {\n        return from(this.contentApi.createRelatedContentOnTask(taskId, file, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Creates a JSON representation of data.\n     * @param res Object representing data\n     * @returns JSON object\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of data.\n     * @param res Object representing data\n     * @returns JSON array object\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Callback when an error occurs\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = ProcessContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ProcessContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ThumbnailService } from '../../../../services/thumbnail.service';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormService } from '../../../services/form.service';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { mergeMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'upload-widget',\n    templateUrl: './upload.widget.html',\n    styleUrls: ['./upload.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string = '';\n    mimeTypeIcon: string;\n\n    @ViewChild('uploadFiles')\n    fileInput: ElementRef;\n\n    constructor(public formService: FormService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService,\n                public processContentService: ProcessContentService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n    }\n\n    removeFile(file: any) {\n        if (this.field) {\n            this.removeElementFromList(file);\n        }\n    }\n\n    onFileChanged(event: any) {\n        const files = event.target.files;\n        let filesSaved = [];\n\n        if (this.field.json.value) {\n            filesSaved = [...this.field.json.value];\n        }\n\n        if (files && files.length > 0) {\n            from(files)\n                .pipe(mergeMap((file) => this.uploadRawContent(file)))\n                .subscribe(\n                    (res) => filesSaved.push(res),\n                    () => this.logService.error('Error uploading file. See console output for more details.'),\n                    () => {\n                        this.field.value = filesSaved;\n                        this.field.json.value = filesSaved;\n                        this.hasFile = true;\n                    }\n                );\n        }\n    }\n\n    private uploadRawContent(file): Observable<any> {\n        return this.processContentService.createTemporaryRawRelatedContent(file)\n            .pipe(\n                map((response: any) => {\n                    this.logService.info(response);\n                    response.contentBlob = file;\n                    return response;\n                })\n            );\n    }\n\n    getMultipleFileParam() {\n        if (this.field &&\n            this.field.params &&\n            this.field.params.multiple) {\n            this.multipleOption = this.field.params.multiple ? 'multiple' : '';\n        }\n    }\n\n    private removeElementFromList(file) {\n        const index = this.field.value.indexOf(file);\n\n        if (index !== -1) {\n            this.field.value.splice(index, 1);\n            this.field.json.value = this.field.value;\n            this.field.updateForm();\n        }\n\n        this.hasFile = this.field.value.length > 0;\n\n        this.resetFormValueWithNoFiles();\n    }\n\n    private resetFormValueWithNoFiles() {\n        if (this.field.value.length === 0) {\n            this.field.value = [];\n            this.field.json.value = [];\n        }\n    }\n\n    getIcon(mimeType) {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    fileClicked(contentLinkModel: any): void {\n        const file = new ContentLinkModel(contentLinkModel);\n        let fetch = this.processContentService.getContentPreview(file.id);\n        if (file.isTypeImage() || file.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(file.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                file.contentBlob = blob;\n                this.formService.formContentClicked.next(file);\n            },\n            () => {\n                this.logService.error('Unable to send event for file ' + file.name);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { FormService } from './../../../services/form.service';\nimport { WidgetComponent } from './../widget.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'date-time-widget',\n    templateUrl: './date-time.widget.html',\n    styleUrls: ['./date-time.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateTimeWidgetComponent extends WidgetComponent implements OnInit, OnDestroy {\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.dateAdapter.setLocale(locale));\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat)\n            .add(\n                moment(this.field.value, this.field.dateDisplayFormat).utcOffset(),\n                'minutes');\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContainerWidgetComponent } from './container/container.widget';\nimport { TabsWidgetComponent } from './tabs/tabs.widget';\nimport { UnknownWidgetComponent } from './unknown/unknown.widget';\n\nimport { AmountWidgetComponent } from './amount/amount.widget';\nimport { CheckboxWidgetComponent } from './checkbox/checkbox.widget';\nimport { DateWidgetComponent } from './date/date.widget';\nimport { DisplayTextWidgetComponentComponent } from './display-text/display-text.widget';\nimport { DocumentWidgetComponent } from './document/document.widget';\nimport { DropdownWidgetComponent } from './dropdown/dropdown.widget';\nimport { DynamicTableWidgetComponent } from './dynamic-table/dynamic-table.widget';\nimport { BooleanEditorComponent } from './dynamic-table/editors/boolean/boolean.editor';\nimport { DateEditorComponent } from './dynamic-table/editors/date/date.editor';\nimport { DateTimeEditorComponent } from './dynamic-table/editors/datetime/datetime.editor';\nimport { DropdownEditorComponent } from './dynamic-table/editors/dropdown/dropdown.editor';\nimport { RowEditorComponent } from './dynamic-table/editors/row.editor';\nimport { TextEditorComponent } from './dynamic-table/editors/text/text.editor';\nimport { ErrorWidgetComponent } from './error/error.component';\nimport { FunctionalGroupWidgetComponent } from './functional-group/functional-group.widget';\nimport { HyperlinkWidgetComponent } from './hyperlink/hyperlink.widget';\nimport { MultilineTextWidgetComponentComponent } from './multiline-text/multiline-text.widget';\nimport { NumberWidgetComponent } from './number/number.widget';\nimport { PeopleWidgetComponent } from './people/people.widget';\nimport { RadioButtonsWidgetComponent } from './radio-buttons/radio-buttons.widget';\nimport { InputMaskDirective } from './text/text-mask.component';\nimport { TextWidgetComponent } from './text/text.widget';\nimport { TypeaheadWidgetComponent } from './typeahead/typeahead.widget';\nimport { UploadWidgetComponent } from './upload/upload.widget';\nimport { DateTimeWidgetComponent } from './date-time/date-time.widget';\n\n// core\nexport * from './widget.component';\nexport * from './core/index';\n\n// containers\nexport * from './tabs/tabs.widget';\nexport * from './container/container.widget';\n\n// primitives\nexport * from './unknown/unknown.widget';\nexport * from './text/text.widget';\nexport * from './number/number.widget';\nexport * from './checkbox/checkbox.widget';\nexport * from './multiline-text/multiline-text.widget';\nexport * from './dropdown/dropdown.widget';\nexport * from './hyperlink/hyperlink.widget';\nexport * from './radio-buttons/radio-buttons.widget';\nexport * from './display-text/display-text.widget';\nexport * from './upload/upload.widget';\nexport * from './typeahead/typeahead.widget';\nexport * from './functional-group/functional-group.widget';\nexport * from './people/people.widget';\nexport * from './date/date.widget';\nexport * from './amount/amount.widget';\nexport * from './dynamic-table/dynamic-table.widget';\nexport * from './error/error.component';\nexport * from './document/document.widget';\nexport * from './date-time/date-time.widget';\n\n// editors (dynamic table)\nexport * from './dynamic-table/dynamic-table.widget.model';\nexport * from './dynamic-table/editors/row.editor';\nexport * from './dynamic-table/editors/date/date.editor';\nexport * from './dynamic-table/editors/dropdown/dropdown.editor';\nexport * from './dynamic-table/editors/boolean/boolean.editor';\nexport * from './dynamic-table/editors/text/text.editor';\nexport * from './dynamic-table/editors/datetime/datetime.editor';\nexport * from './text/text-mask.component';\n\nexport const WIDGET_DIRECTIVES: any[] = [\n    UnknownWidgetComponent,\n    TabsWidgetComponent,\n    ContainerWidgetComponent,\n    TextWidgetComponent,\n    NumberWidgetComponent,\n    CheckboxWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    DropdownWidgetComponent,\n    HyperlinkWidgetComponent,\n    RadioButtonsWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    UploadWidgetComponent,\n    TypeaheadWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    PeopleWidgetComponent,\n    DateWidgetComponent,\n    AmountWidgetComponent,\n    DynamicTableWidgetComponent,\n    DateEditorComponent,\n    DropdownEditorComponent,\n    BooleanEditorComponent,\n    TextEditorComponent,\n    RowEditorComponent,\n    ErrorWidgetComponent,\n    DocumentWidgetComponent,\n    DateTimeWidgetComponent,\n    DateTimeEditorComponent\n];\n\nexport const MASK_DIRECTIVE: any[] = [\n    InputMaskDirective\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormBaseModel } from './form-base.model';\nimport { FormOutcomeModel, FormFieldValidator, FormFieldModel, FormOutcomeEvent } from './widgets';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nexport abstract class FormBaseComponent {\n\n    static SAVE_OUTCOME_ID: string = '$save';\n    static COMPLETE_OUTCOME_ID: string = '$complete';\n    static START_PROCESS_OUTCOME_ID: string = '$startProcess';\n    static CUSTOM_OUTCOME_ID: string = '$custom';\n    static COMPLETE_BUTTON_COLOR: string = 'primary';\n    static COMPLETE_OUTCOME_NAME: string = 'COMPLETE';\n\n    /** Path of the folder where the metadata will be stored. */\n    @Input()\n    path: string;\n\n    /** Name to assign to the new node where the metadata are stored. */\n    @Input()\n    nameNode: string;\n\n    /** Toggle rendering of the form title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggle rendering of the `Complete` outcome button. */\n    @Input()\n    showCompleteButton: boolean = true;\n\n    /** If true then the `Complete` outcome button is shown but it will be disabled. */\n    @Input()\n    disableCompleteButton: boolean = false;\n\n    /** If true then the `Save` outcome button is shown but will be disabled. */\n    @Input()\n    disableSaveButton: boolean = false;\n\n    /** If true then the `Start Process` outcome button is shown but it will be disabled. */\n    @Input()\n    disableStartProcessButton: boolean = false;\n\n    /** Toggle rendering of the `Save` outcome button. */\n    @Input()\n    showSaveButton: boolean = true;\n\n    /** Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled. */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Toggle rendering of the `Refresh` button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Toggle rendering of the validation icon next to the form title. */\n    @Input()\n    showValidationIcon: boolean = true;\n\n    /** Contains a list of form field validator instances. */\n    @Input()\n    fieldValidators: FormFieldValidator[];\n\n    /** Emitted when the supplied form values have a validation error. */\n    @Output()\n    formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /**\n     * Emitted when any error occurs.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    form: FormBaseModel;\n\n    getParsedFormDefinition(): FormBaseComponent {\n        return this;\n    }\n\n    hasForm(): boolean {\n        return this.form ? true : false;\n    }\n\n    isTitleEnabled(): boolean {\n        let titleEnabled = false;\n        if (this.showTitle && this.form) {\n            titleEnabled = true;\n        }\n        return titleEnabled;\n    }\n\n    getColorForOutcome(outcomeName: string): string {\n        return outcomeName === FormBaseComponent.COMPLETE_OUTCOME_NAME ? FormBaseComponent.COMPLETE_BUTTON_COLOR : '';\n    }\n\n    isOutcomeButtonEnabled(outcome: FormOutcomeModel): boolean {\n        if (this.form.readOnly) {\n            return false;\n        }\n\n        if (outcome) {\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.disableSaveButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.disableCompleteButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return this.disableStartProcessButton ? false : this.form.isValid;\n            }\n            return this.form.isValid;\n        }\n        return false;\n    }\n\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.name) {\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.showCompleteButton;\n            }\n            if (isFormReadOnly) {\n                return outcome.isSelected;\n            }\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.showSaveButton;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Invoked when user clicks outcome button.\n     * @param outcome Form outcome model\n     */\n    onOutcomeClicked(outcome: FormOutcomeModel): boolean {\n        if (!this.readOnly && outcome && this.form) {\n\n            if (!this.onExecuteOutcome(outcome)) {\n                return false;\n            }\n\n            if (outcome.isSystem) {\n                if (outcome.id === FormBaseComponent.SAVE_OUTCOME_ID) {\n                    this.saveTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.COMPLETE_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.START_PROCESS_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.CUSTOM_OUTCOME_ID) {\n                    this.onTaskSaved(this.form);\n                    this.storeFormAsMetadata();\n                    return true;\n                }\n            } else {\n                // Note: Activiti is using NAME field rather than ID for outcomes\n                if (outcome.name) {\n                    this.onTaskSaved(this.form);\n                    this.completeTaskForm(outcome.name);\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    abstract onRefreshClicked();\n\n    abstract saveTaskForm();\n\n    abstract completeTaskForm(outcome?: string);\n\n    protected abstract onTaskSaved(form: FormBaseModel);\n\n    protected abstract storeFormAsMetadata();\n\n    protected abstract onExecuteOutcome(outcome: FormOutcomeModel);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../services/form.service';\n\n@Component({\n    selector: 'adf-form-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormListComponent implements OnChanges {\n\n    /** The array that contains the information to show inside the list. */\n    @Input()\n    forms: any [] = [];\n\n    constructor(protected formService: FormService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.getForms();\n    }\n\n    isEmpty(): boolean {\n        return this.forms && this.forms.length === 0;\n    }\n\n    getForms() {\n        this.formService.getForms().subscribe((forms) => {\n            this.forms.push(...forms);\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService } from '../../../../services/content.service';\nimport { LogService } from '../../../../services/log.service';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { FormService } from './../../../services/form.service';\n\n@Component({\n    selector: 'adf-content',\n    templateUrl: './content.widget.html',\n    styleUrls: ['./content.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentWidgetComponent implements OnChanges {\n\n    /** The content id to show. */\n    @Input()\n    id: string;\n\n    /** Toggles showing document content. */\n    @Input()\n    showDocumentContent: boolean = true;\n\n    /** Emitted when the content is clicked. */\n    @Output()\n    contentClick = new EventEmitter();\n\n    /** Emitted when the thumbnail has loaded. */\n    @Output()\n    thumbnailLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the content has loaded. */\n    @Output()\n    contentLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    content: ContentLinkModel;\n\n    constructor(protected formService: FormService,\n                private logService: LogService,\n                private contentService: ContentService,\n                private processContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const contentId = changes['id'];\n        if (contentId && contentId.currentValue) {\n            this.loadContent(contentId.currentValue);\n        }\n    }\n\n    loadContent(id: number) {\n        this.processContentService\n            .getFileContent(id)\n            .subscribe(\n                (response: ContentLinkModel) => {\n                    this.content = new ContentLinkModel(response);\n                    this.contentLoaded.emit(this.content);\n                    this.loadThumbnailUrl(this.content);\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    loadThumbnailUrl(content: ContentLinkModel) {\n        if (this.content.isThumbnailSupported()) {\n            let observable: Observable<any>;\n\n            if (this.content.isTypeImage()) {\n                observable = this.processContentService.getFileRawContent(content.id);\n            } else {\n                observable = this.processContentService.getContentThumbnail(content.id);\n            }\n\n            if (observable) {\n                observable.subscribe(\n                    (response: Blob) => {\n                        this.content.thumbnailUrl = this.contentService.createTrustedUrl(response);\n                        this.thumbnailLoaded.emit(this.content.thumbnailUrl);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n\n                    }\n                );\n            }\n        }\n    }\n\n    openViewer(content: ContentLinkModel): void {\n        let fetch = this.processContentService.getContentPreview(content.id);\n        if (content.isTypeImage() || content.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(content.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.contentClick.emit(content);\n                this.logService.info('Content clicked' + content.id);\n                this.formService.formContentClicked.next(content);\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n\n    /**\n     * Invoke content download.\n     */\n    download(content: ContentLinkModel): void {\n        this.processContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { FormBaseModel } from './form-base.model';\n\n@Component({\n    selector: 'adf-form-renderer',\n    templateUrl: './form-renderer.component.html',\n    styleUrls: ['./form-renderer.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormRendererComponent {\n\n    /** Toggle debug options. */\n    @Input()\n    showDebugButton: boolean = false;\n\n    @Input()\n    formDefinition: FormBaseModel;\n\n    debugMode: boolean;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiCompatibility, MinimalNode, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { ExternalContent } from '../components/widgets/core/external-content';\nimport { ExternalContentLink } from '../components/widgets/core/external-content-link';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ActivitiContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoNodes(accountId: string, folderId: string): Observable<[ExternalContent]> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const accountShortId = accountId.replace('alfresco-', '');\n        return from(apiService.activiti.alfrescoApi.getContentInFolder(accountShortId, folderId))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of all the repositories configured\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoRepositories(tenantId: number, includeAccount: boolean): Observable<any> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const opts = {\n            tenantId: tenantId,\n            includeAccounts: includeAccount\n        };\n        return from(apiService.activiti.alfrescoApi.getRepositories(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param node\n     * @param siteId\n     */\n    linkAlfrescoNode(accountId: string, node: ExternalContent, siteId: string): Observable<ExternalContentLink> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent({\n            link: true,\n            name: node.title,\n            simpleType: node.simpleType,\n            source: accountId,\n            sourceId: node.id + '@' + siteId\n        }))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    applyAlfrescoNode(node: MinimalNode, siteId: string, accountId: string) {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const currentSideId = siteId ? siteId : this.getSiteNameFromNodePath(node);\n        const params: RelatedContentRepresentation = {\n            source: accountId,\n            mimeType: node.content.mimeType,\n            sourceId: node.id + ';' + node.properties['cm:versionLabel'] + '@' + currentSideId,\n            name: node.name,\n            link: false\n        };\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent(params))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getSiteNameFromNodePath(node: MinimalNode): string {\n        let siteName = '';\n        if (node.path) {\n            const foundNode = node.path\n                .elements.find((pathNode: MinimalNode) =>\n                    pathNode.nodeType === 'st:site' &&\n                    pathNode.name !== 'Sites');\n            siteName = foundNode ? foundNode.name : '';\n        }\n        return siteName.toLocaleLowerCase();\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    handleError(error: any): Observable<any> {\n        let errMsg = ActivitiContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ActivitiContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\nimport { Injectable, Type } from '@angular/core';\n\nimport {\n    AmountWidgetComponent,\n    CheckboxWidgetComponent,\n    ContainerWidgetComponent,\n    DateWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    DocumentWidgetComponent,\n    DropdownWidgetComponent,\n    DynamicTableWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    HyperlinkWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    NumberWidgetComponent,\n    PeopleWidgetComponent,\n    RadioButtonsWidgetComponent,\n    TextWidgetComponent,\n    TypeaheadWidgetComponent,\n    UnknownWidgetComponent,\n    UploadWidgetComponent,\n    DateTimeWidgetComponent\n} from './../components/widgets/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormRenderingService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = UnknownWidgetComponent;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'string': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'integer': DynamicComponentResolver.fromType(NumberWidgetComponent),\n        'multi-line-text': DynamicComponentResolver.fromType(MultilineTextWidgetComponentComponent),\n        'boolean': DynamicComponentResolver.fromType(CheckboxWidgetComponent),\n        'dropdown': DynamicComponentResolver.fromType(DropdownWidgetComponent),\n        'date': DynamicComponentResolver.fromType(DateWidgetComponent),\n        'amount': DynamicComponentResolver.fromType(AmountWidgetComponent),\n        'radio-buttons': DynamicComponentResolver.fromType(RadioButtonsWidgetComponent),\n        'hyperlink': DynamicComponentResolver.fromType(HyperlinkWidgetComponent),\n        'readonly-text': DynamicComponentResolver.fromType(DisplayTextWidgetComponentComponent),\n        'readonly': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'typeahead': DynamicComponentResolver.fromType(TypeaheadWidgetComponent),\n        'people': DynamicComponentResolver.fromType(PeopleWidgetComponent),\n        'functional-group': DynamicComponentResolver.fromType(FunctionalGroupWidgetComponent),\n        'dynamic-table': DynamicComponentResolver.fromType(DynamicTableWidgetComponent),\n        'container': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'group': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'document': DynamicComponentResolver.fromType(DocumentWidgetComponent),\n        'upload':  DynamicComponentResolver.fromType(UploadWidgetComponent),\n        'datetime':  DynamicComponentResolver.fromType(DateTimeWidgetComponent)\n    };\n\n    constructor() {\n        super();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class NodeMetadata {\n    metadata: any;\n    nodeType: string;\n\n    constructor(metadata: any, nodeType: string) {\n        this.metadata = metadata;\n        this.nodeType = nodeType;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { NodeMetadata } from '../models/node-metadata.model';\nimport { map } from 'rxjs/operators';\nimport { AlfrescoApiCompatibility, NodeEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Get the metadata and the nodeType for a nodeId cleaned by the prefix.\n     * @param nodeId ID of the target node\n     * @returns Node metadata\n     */\n    public getNodeMetadata(nodeId: string): Observable<NodeMetadata> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId))\n            .pipe(map(this.cleanMetadataFromSemicolon));\n    }\n\n    /**\n     * Create a new Node from form metadata.\n     * @param path Path to the node\n     * @param nodeType Node type\n     * @param name Node name\n     * @param nameSpace Namespace for properties\n     * @param data Property data to store in the node under namespace\n     * @returns The created node\n     */\n    public createNodeMetadata(nodeType: string, nameSpace: any, data: any, path: string, name?: string): Observable<NodeEntry> {\n        const properties = {};\n        for (const key in data) {\n            if (data[key]) {\n                properties[nameSpace + ':' + key] = data[key];\n            }\n        }\n\n        return this.createNode(name || this.generateUuid(), nodeType, properties, path);\n    }\n\n    /**\n     * Create a new Node from form metadata\n     * @param name Node name\n     * @param nodeType Node type\n     * @param properties Node body properties\n     * @param path Path to the node\n     * @returns The created node\n     */\n    public createNode(name: string, nodeType: string, properties: any, path: string): Observable<NodeEntry> {\n        const body = {\n            name: name,\n            nodeType: nodeType,\n            properties: properties,\n            relativePath: path\n        };\n\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.nodes.addNode('-root-', body, {}));\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    private cleanMetadataFromSemicolon(nodeEntry: NodeEntry): NodeMetadata {\n        const metadata = {};\n\n        if (nodeEntry && nodeEntry.entry.properties) {\n            for (const key in nodeEntry.entry.properties) {\n                if (key) {\n                    if (key.indexOf(':') !== -1) {\n                        metadata [key.split(':')[1]] = nodeEntry.entry.properties[key];\n                    } else {\n                        metadata [key] = nodeEntry.entry.properties[key];\n                    }\n                }\n            }\n        }\n\n        return new NodeMetadata(metadata, nodeEntry.entry.nodeType);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormErrorEvent extends FormEvent {\n\n    readonly error: any;\n\n    constructor(form: FormModel, error: any) {\n        super(form);\n        this.error = error;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-form-custom-button], [form-custom-button]' }) export class StartFormCustomButtonDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Compiler,\n    Component, ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ModuleWithComponentFactories,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { FormRenderingService } from './../../services/form-rendering.service';\nimport { WidgetVisibilityService } from './../../services/widget-visibility.service';\nimport { FormFieldModel } from './../widgets/core/form-field.model';\nimport { WidgetComponent } from './../widgets/widget.component';\n\ndeclare var adf: any;\n\n@Component({\n    selector: 'adf-form-field',\n    template: `\n        <div [id]=\"'field-'+field?.id+'-container'\"\n            [hidden]=\"!field?.isVisible\"\n            [class.adf-focus]=\"focus\"\n            (focusin)=\"focusToggle()\"\n            (focusout)=\"focusToggle()\">\n            <div #container></div>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormFieldComponent implements OnInit, OnDestroy {\n\n    @ViewChild('container', { read: ViewContainerRef })\n    container: ViewContainerRef;\n\n    /** Contains all the necessary data needed to determine what UI Widget\n     * to use when rendering the field in the form. You would typically not\n     * create this data manually but instead create the form in APS and export\n     * it to get to all the `FormFieldModel` definitions.\n     */\n    @Input()\n    field: FormFieldModel = null;\n\n    componentRef: ComponentRef<{}>;\n\n    focus: boolean = false;\n\n    constructor(private formRenderingService: FormRenderingService,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private visibilityService: WidgetVisibilityService,\n                private compiler: Compiler) {\n    }\n\n    ngOnInit() {\n        const w: any = window;\n        if (w.adf === undefined) {\n            w.adf = {};\n        }\n        const originalField = this.getField();\n        if (originalField) {\n            const customTemplate = this.field.form.customFieldTemplates[originalField.type];\n            if (customTemplate && this.hasController(originalField.type)) {\n                const factory = this.getComponentFactorySync(originalField.type, customTemplate);\n                this.componentRef = this.container.createComponent(factory);\n                const instance: any = this.componentRef.instance;\n                if (instance) {\n                    instance.field = originalField;\n                }\n            } else {\n                const componentType = this.formRenderingService.resolveComponentType(originalField);\n                if (componentType) {\n                    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n                    this.componentRef = this.container.createComponent(factory);\n                    const instance = <WidgetComponent> this.componentRef.instance;\n                    instance.field = this.field;\n                    instance.fieldChanged.subscribe((field) => {\n                        if (field && this.field.form) {\n                            this.visibilityService.refreshVisibility(field.form);\n                            field.form.onFormFieldChanged(field);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private getField(): FormFieldModel {\n        if (this.field && this.field.params) {\n            const wrappedField = this.field.params.field;\n            if (wrappedField && wrappedField.type) {\n                return wrappedField;\n            }\n        }\n        return this.field;\n    }\n\n    private hasController(type: string): boolean {\n        return (adf && adf.components && adf.components[type]);\n    }\n\n    private getComponentFactorySync(type: string, template: string): ComponentFactory<any> {\n        const componentInfo = adf.components[type];\n\n        if (componentInfo.factory) {\n            return componentInfo.factory;\n        }\n\n        const metadata = {\n            selector: `runtime-component-${type}`,\n            template: template\n        };\n\n        const factory = this.createComponentFactorySync(this.compiler, metadata, componentInfo.class);\n        componentInfo.factory = factory;\n        return factory;\n    }\n\n    private createComponentFactorySync(compiler: Compiler, metadata: Component, componentClass: any): ComponentFactory<any> {\n        const cmpClass = componentClass || class RuntimeComponent {\n        };\n        const decoratedCmp = Component(metadata)(cmpClass);\n\n        @NgModule({ imports: [], declarations: [decoratedCmp] })\n        class RuntimeComponentModule {\n        }\n\n        const module: ModuleWithComponentFactories<any> = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n        return module.componentFactories.find((x) => x.componentType === decoratedCmp);\n    }\n\n    focusToggle() {\n        this.focus = !this.focus;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialModule } from '../material.module';\n\nimport { MASK_DIRECTIVE, WIDGET_DIRECTIVES } from './components/widgets/index';\n\nimport { StartFormCustomButtonDirective } from './components/form-custom-button.directive';\n\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { FormListComponent } from './components/form-list.component';\nimport { ContentWidgetComponent } from './components/widgets/content/content.widget';\nimport { WidgetComponent } from './components/widgets/widget.component';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FormRendererComponent } from './components/form-renderer.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DataTableModule,\n        HttpClientModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        DataColumnModule,\n        PipeModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES,\n        ...MASK_DIRECTIVE,\n        WidgetComponent\n    ],\n    entryComponents: [\n        ...WIDGET_DIRECTIVES\n    ],\n    exports: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES\n    ]\n})\nexport class FormBaseModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-content'\n})\nexport class SidenavLayoutContentDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-header'\n})\nexport class SidenavLayoutHeaderDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-navigation'\n})\nexport class SidenavLayoutNavigationDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ContentChild,\n    Input,\n    Output,\n    OnInit,\n    AfterViewInit,\n    ViewChild,\n    OnDestroy,\n    TemplateRef,\n    EventEmitter,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { UserPreferencesService } from '../../../services/user-preferences.service';\nimport { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Direction } from '@angular/cdk/bidi';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-sidenav-layout',\n    templateUrl: './sidenav-layout.component.html',\n    styleUrls: ['./sidenav-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sidenav-layout' }\n})\nexport class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n    static STEP_OVER = 600;\n\n    /** The direction of the layout. 'ltr' or 'rtl' */\n    dir = 'ltr';\n\n    /** The side that the drawer is attached to. Possible values are 'start' and 'end'. */\n    @Input() position = 'start';\n\n    /** Minimum size of the navigation region. */\n    @Input() sidenavMin: number;\n\n    /** Maximum size of the navigation region. */\n    @Input() sidenavMax: number;\n\n    /** Screen size at which display switches from small screen to large screen configuration. */\n    @Input() stepOver: number;\n\n    /** Toggles showing/hiding the navigation region. */\n    @Input() hideSidenav = false;\n\n    /** Should the navigation region be expanded initially? */\n    @Input() expandedSidenav = true;\n\n    /** Emitted when the menu toggle and the collapsed/expanded state of the sideNav changes. */\n    @Output() expanded = new EventEmitter<boolean>();\n\n    @ContentChild(SidenavLayoutHeaderDirective) headerDirective: SidenavLayoutHeaderDirective;\n    @ContentChild(SidenavLayoutNavigationDirective) navigationDirective: SidenavLayoutNavigationDirective;\n    @ContentChild(SidenavLayoutContentDirective) contentDirective: SidenavLayoutContentDirective;\n\n    private menuOpenStateSubject: BehaviorSubject<boolean>;\n    public menuOpenState$: Observable<boolean>;\n\n    @ViewChild('container') container: any;\n    @ViewChild('emptyTemplate') emptyTemplate: any;\n\n    mediaQueryList: MediaQueryList;\n    _isMenuMinimized;\n\n    templateContext = {\n        toggleMenu: () => {},\n        isMenuMinimized: () => this.isMenuMinimized\n    };\n\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(private mediaMatcher: MediaMatcher, private userPreferencesService: UserPreferencesService ) {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        const initialMenuState = !this.expandedSidenav;\n\n        this.menuOpenStateSubject = new BehaviorSubject<boolean>(initialMenuState);\n        this.menuOpenState$ = this.menuOpenStateSubject.asObservable();\n\n        const stepOver = this.stepOver || SidenavLayoutComponent.STEP_OVER;\n        this.isMenuMinimized = initialMenuState;\n\n        this.mediaQueryList = this.mediaMatcher.matchMedia(`(max-width: ${stepOver}px)`);\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        this.userPreferencesService\n            .select('textOrientation')\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((direction: Direction) => {\n                this.dir = direction;\n            });\n    }\n\n    ngAfterViewInit() {\n        this.templateContext.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    toggleMenu() {\n        if (!this.mediaQueryList.matches) {\n            this.isMenuMinimized = !this.isMenuMinimized;\n        } else {\n            this.isMenuMinimized = false;\n        }\n\n        this.container.toggleMenu();\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n\n    get isMenuMinimized() {\n        return this._isMenuMinimized;\n    }\n\n    set isMenuMinimized(menuState: boolean) {\n        this._isMenuMinimized = menuState;\n        this.menuOpenStateSubject.next(!menuState);\n    }\n\n    get isHeaderInside() {\n        return this.mediaQueryList.matches;\n    }\n\n    get headerTemplate(): TemplateRef<any> {\n        return this.headerDirective && this.headerDirective.template || this.emptyTemplate;\n    }\n\n    get navigationTemplate(): TemplateRef<any> {\n        return this.navigationDirective && this.navigationDirective.template || this.emptyTemplate;\n    }\n\n    get contentTemplate(): TemplateRef<any> {\n        return this.contentDirective && this.contentDirective.template || this.emptyTemplate;\n    }\n\n    onMediaQueryChange() {\n        this.isMenuMinimized = false;\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trigger, transition, animate, style, state, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const sidenavAnimation: AnimationTriggerMetadata = trigger('sidenavAnimation', [\n    state('expanded', style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    state('compact',  style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimation: AnimationTriggerMetadata = trigger('contentAnimationLeft', [\n    state('expanded', style({\n        'margin-left': '{{ margin-left }}px',\n        'margin-right': '{{ margin-right }}px'\n    }), { params: { 'margin-left': 0, 'margin-right': 0 } }),\n    state('compact', style({\n        'margin-left': '{{ margin-left }}px',\n        'margin-right': '{{ margin-right }}px'\n    }), { params: { 'margin-left': 0, 'margin-right': 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnInit, OnDestroy, ViewEncapsulation, OnChanges } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { sidenavAnimation, contentAnimation } from '../../helpers/animations';\nimport { Direction } from '@angular/cdk/bidi';\n\n@Component({\n    selector: 'adf-layout-container',\n    templateUrl: './layout-container.component.html',\n    styleUrls: ['./layout-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [sidenavAnimation, contentAnimation]\n})\nexport class LayoutContainerComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() sidenavMin: number;\n    @Input() sidenavMax: number;\n\n    // \" | any\", because Safari throws an error otherwise...\n    @Input() mediaQueryList: MediaQueryList | any;\n\n    @Input() hideSidenav = false;\n    @Input() expandedSidenav = true;\n\n    /** The side that the drawer is attached to 'start' | 'end' page */\n    @Input() position = 'start';\n\n    /** Layout text orientation 'ltr' | 'rtl' */\n    @Input() direction: Direction = 'ltr';\n\n    @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n    sidenavAnimationState: any;\n    contentAnimationState: any;\n\n    SIDENAV_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n    CONTENT_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n\n    constructor() {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        this.SIDENAV_STATES.MOBILE = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.EXPANDED = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.COMPACT = { value: 'compact', params: { width: this.sidenavMin } };\n\n        this.CONTENT_STATES.MOBILE = { value: 'expanded' };\n\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        if (this.isMobileScreenSize) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.MOBILE;\n            this.contentAnimationState = this.CONTENT_STATES.MOBILE;\n        } else if (this.expandedSidenav) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n            this.contentAnimationState = this.toggledContentAnimation;\n        } else {\n            this.sidenavAnimationState = this.SIDENAV_STATES.COMPACT;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    ngOnChanges(changes) {\n        if (changes && changes.direction) {\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    toggleMenu(): void {\n        if (this.isMobileScreenSize) {\n            this.sidenav.toggle();\n        } else {\n            this.sidenavAnimationState = this.toggledSidenavAnimation;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    get isMobileScreenSize(): boolean {\n        return this.mediaQueryList.matches;\n    }\n\n    getContentAnimationState() {\n        return this.contentAnimationState;\n    }\n\n    private get toggledSidenavAnimation() {\n        return this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED\n            ? this.SIDENAV_STATES.COMPACT\n            : this.SIDENAV_STATES.EXPANDED;\n    }\n\n    private get toggledContentAnimation() {\n        if (this.isMobileScreenSize) {\n            return this.CONTENT_STATES.MOBILE;\n        }\n\n        if (this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED) {\n            if (this.position === 'start' && this.direction === 'ltr') {\n                return { value: 'compact', params: { 'margin-left': this.sidenavMax } };\n            }\n\n            if (this.position === 'start' && this.direction === 'rtl') {\n                return { value: 'compact', params: { 'margin-right': this.sidenavMax } };\n            }\n\n            if (this.position === 'end' && this.direction === 'ltr') {\n                return { value: 'compact', params: { 'margin-right': this.sidenavMax } };\n            }\n\n            if (this.position === 'end' && this.direction === 'rtl') {\n                return { value: 'compact', params: { 'margin-left': this.sidenavMax } };\n            }\n\n        } else {\n            if (this.position === 'start' && this.direction === 'ltr') {\n                return { value: 'expanded', params: { 'margin-left': this.sidenavMin } };\n            }\n\n            if (this.position === 'start' && this.direction === 'rtl') {\n                return { value: 'expanded', params: { 'margin-right': this.sidenavMin } };\n            }\n\n            if (this.position === 'end' && this.direction === 'ltr') {\n                return { value: 'expanded', params: { 'margin-right': this.sidenavMin } };\n            }\n\n            if (this.position === 'end' && this.direction === 'rtl') {\n                return { value: 'expanded', params: { 'margin-left': this.sidenavMin } };\n            }\n        }\n    }\n\n    private onMediaQueryChange() {\n        this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n        this.contentAnimationState = this.toggledContentAnimation;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-sidebar-action-menu',\n    templateUrl: './sidebar-action-menu.component.html',\n    styleUrls: ['./sidebar-action-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sidebar-action-menu' }\n})\n\nexport class SidebarActionMenuComponent {\n\n    /** The title of the sidebar action. */\n    @Input()\n    title: string;\n\n    /** Toggle the sidebar action menu on expand. */\n    @Input()\n    expanded: boolean;\n\n    /** Width in pixels for sidebar action menu options. */\n    @Input()\n    width: number = 272;\n\n    isExpanded(): boolean {\n        return this.expanded;\n    }\n}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-sidebar-menu-options], [sidebar-menu-options]' }) export class SidebarMenuDirective {}\n@Directive({ selector: '[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]' }) export class SidebarMenuTitleIconDirective { }\n@Directive({ selector: '[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]' }) export class SidebarMenuExpandIconDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'adf-layout-header',\n    templateUrl: './header.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-layout-header' }\n})\nexport class HeaderLayoutComponent implements OnInit {\n    /** Title of the application. */\n    @Input() title: string;\n\n    /** Path to an image file for the application logo. */\n    @Input() logo: string;\n\n    /** The router link for the application logo, when clicked. */\n    @Input() redirectUrl: string | any[] = '/';\n\n    /** The tooltip text for the application logo. */\n    @Input() tooltip: string;\n\n    /**\n     * Background color for the header. It can be any hex color code or one\n     * of the Material theme colors: 'primary', 'accent' or 'warn'.\n     */\n    @Input() color: string;\n\n    /**\n     * Toggles whether the sidenav button will be displayed in the header\n     * or not.\n     */\n    @Input() showSidenavToggle: boolean = true;\n\n    /** Emitted when the sidenav button is clicked. */\n    @Output() clicked = new EventEmitter<any>();\n\n    /** The side of the page that the drawer is attached to (can be 'start' or 'end') */\n    @Input() position = 'start';\n\n    toggleMenu() {\n        this.clicked.emit(true);\n    }\n\n    ngOnInit() {\n        if (!this.logo) {\n            this.logo = './assets/images/logo.png';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\nimport { SidenavLayoutContentDirective } from './directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from './directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from './directives/sidenav-layout-navigation.directive';\nimport { SidenavLayoutComponent } from './components/sidenav-layout/sidenav-layout.component';\nimport { LayoutContainerComponent } from './components/layout-container/layout-container.component';\nimport { SidebarActionMenuComponent, SidebarMenuDirective,\n    SidebarMenuExpandIconDirective, SidebarMenuTitleIconDirective } from './components/sidebar-action/sidebar-action-menu.component';\nimport { HeaderLayoutComponent } from './components/header/header.component';\nimport { TranslateModule } from '@ngx-translate/core';\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        RouterModule,\n        TranslateModule.forChild()\n    ],\n    exports: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ],\n    declarations: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ]\n})\nexport class LayoutModule {}\nexport { LayoutModule as SidenavLayoutModule };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { CommentModel } from '../models/comment.model';\nimport { EcmUserService } from '../userinfo/services/ecm-user.service';\nimport { PeopleProcessService } from '../services/people-process.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-comment-list',\n    templateUrl: './comment-list.component.html',\n    styleUrls: ['./comment-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class CommentListComponent implements OnInit, OnDestroy {\n\n    /** The comments data used to populate the list. */\n    @Input()\n    comments: CommentModel[];\n\n    /** Emitted when the user clicks on one of the comment rows. */\n    @Output()\n    clickRow: EventEmitter<CommentModel> = new EventEmitter<CommentModel>();\n\n    selectedComment: CommentModel;\n    currentLocale;\n    private onDestroy$ = new Subject<boolean>();\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                public ecmUserService: EcmUserService,\n                public userPreferenceService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferenceService\n            .select(UserPreferenceValues.Locale)\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe(locale => this.currentLocale = locale);\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    selectComment(comment: CommentModel): void {\n        if (this.selectedComment) {\n            this.selectedComment.isSelected = false;\n        }\n        comment.isSelected = true;\n        this.selectedComment = comment;\n        this.clickRow.emit(this.selectedComment);\n    }\n\n    getUserShortName(user: any): string {\n        let shortName = '';\n        if (user) {\n            if (user.firstName) {\n                shortName = user.firstName[0].toUpperCase();\n            }\n            if (user.lastName) {\n                shortName += user.lastName[0].toUpperCase();\n            }\n        }\n        return shortName;\n    }\n\n    isPictureDefined(user: any): boolean {\n        return user.pictureId || user.avatarId;\n    }\n\n    getUserImage(user: any): string {\n        if (this.isAContentUsers(user)) {\n            return this.ecmUserService.getUserProfileImage(user.avatarId);\n        } else {\n            return this.peopleProcessService.getUserImage(user);\n        }\n    }\n\n    private isAContentUsers(user: any): boolean {\n        return user.avatarId;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class CommentModel {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: any;\n    isSelected: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n            this.isSelected = obj.isSelected ? obj.isSelected : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user.*\n */\n\nimport { LightUserRepresentation } from '@alfresco/js-api';\n\nexport class UserProcessModel implements LightUserRepresentation {\n    id?: number;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    pictureId?: number;\n    externalId?: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.id = input.id;\n            this.email = input.email || null;\n            this.firstName = input.firstName || null;\n            this.lastName = input.lastName || null;\n            this.pictureId = input.pictureId || null;\n            this.externalId = input.externalId || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a task.\n     * @param taskId ID of the target task\n     * @param message Text for the comment\n     * @returns Details about the comment\n     */\n    addTaskComment(taskId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().activiti.taskApi.addTaskComment({ message: message }, taskId))\n            .pipe(\n                map((response: CommentModel) => {\n                    return new CommentModel({\n                        id: response.id,\n                        message: response.message,\n                        created: response.created,\n                        createdBy: response.createdBy\n                    });\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a task.\n     * @param taskId ID of the target task\n     * @returns Details for each comment\n     */\n    getTaskComments(taskId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.taskApi.getTaskComments(taskId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @returns Details for each comment\n     */\n    getProcessInstanceComments(processInstanceId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.commentsApi.getProcessInstanceComments(processInstanceId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a comment to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentModel> {\n        return from(\n            this.apiService.getInstance().activiti.commentsApi.addProcessInstanceComment({ message: message }, processInstanceId)\n        ).pipe(\n            map((response: CommentModel) => {\n                return new CommentModel({\n                    id: response.id,\n                    message: response.message,\n                    created: response.created,\n                    createdBy: response.createdBy\n                });\n            }),\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { LogService } from '../services/log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentContentService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a node.\n     * @param nodeId ID of the target node\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addNodeComment(nodeId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().core.commentsApi.addComment(nodeId, {content: message}))\n            .pipe(\n                map((response: any) => {\n                    return new CommentModel({\n                        id: response.entry.id,\n                        message: response.entry.content,\n                        created: response.entry.createdAt,\n                        createdBy: response.entry.createdBy\n                    });\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a node.\n     * @param nodeId ID of the target node\n     * @returns Details for each comment\n     */\n    getNodeComments(nodeId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().core.commentsApi.getComments(nodeId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.list.entries.forEach((comment: any) => {\n                        comments.push(new CommentModel({\n                            id: comment.entry.id,\n                            message: comment.entry.content,\n                            created: comment.entry.createdAt,\n                            createdBy: comment.entry.createdBy\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentProcessService } from '../services/comment-process.service';\nimport { CommentContentService } from '../services/comment-content.service';\nimport { CommentModel } from '../models/comment.model';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-comments',\n    templateUrl: './comments.component.html',\n    styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnChanges {\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string;\n\n    /** The numeric ID of the node. */\n    @Input()\n    nodeId: string;\n\n    /** Are the comments read only? */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Emitted when an error occurs while displaying/adding a comment. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService, private commentContentService: CommentContentService) {\n        this.comment$ = new Observable<CommentModel>((observer) => this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.taskId = null;\n        this.nodeId = null;\n\n        this.taskId = changes['taskId'] ? changes['taskId'].currentValue : null;\n        this.nodeId = changes['nodeId'] ? changes['nodeId'].currentValue : null;\n\n        if (this.taskId || this.nodeId) {\n            this.getComments();\n        } else {\n            this.resetComments();\n        }\n    }\n\n    private getComments(): void {\n        this.resetComments();\n        if (this.isATask()) {\n            this.commentProcessService.getTaskComments(this.taskId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((currentComment) => {\n                            this.commentObserver.next(currentComment);\n                        });\n                    }\n\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n\n        if (this.isANode()) {\n            this.commentContentService.getNodeComments(this.nodeId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((comment) => {\n                            this.commentObserver.next(comment);\n                        });\n                    }\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            const comment = this.sanitize(this.message);\n\n            this.beingAdded = true;\n            if (this.isATask()) {\n                this.commentProcessService.addTaskComment(this.taskId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n\n            if (this.isANode()) {\n                this.commentContentService.addNodeComment(this.nodeId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    isATask(): boolean {\n        return this.taskId ? true : false;\n    }\n\n    isANode(): boolean {\n        return this.nodeId ? true : false;\n    }\n\n    private sanitize(input: string) {\n        return input.replace(/<[^>]+>/g, '')\n            .replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '')\n            .replace(/\\r?\\n/g, '<br/>');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { CommentListComponent } from './comment-list.component';\nimport { CommentsComponent } from './comments.component';\n\n@NgModule({\n    imports: [\n        PipeModule,\n        DataColumnModule,\n        DataTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        CommentListComponent,\n        CommentsComponent\n    ],\n    exports: [\n        CommentListComponent,\n        CommentsComponent\n    ]\n})\nexport class CommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { MatMenuItem } from '@angular/material';\n\n@Component({\n    selector: 'adf-buttons-action-menu',\n    templateUrl: './buttons-menu.component.html',\n    styleUrls: ['./buttons-menu.component.scss']\n})\n\nexport class ButtonsMenuComponent implements  AfterContentInit {\n\n    @ContentChildren(MatMenuItem) buttons: QueryList<MatMenuItem>;\n\n    isMenuEmpty: boolean;\n\n    ngAfterContentInit() {\n        if (this.buttons.length > 0) {\n            this.isMenuEmpty = false;\n        } else {\n            this.isMenuEmpty = true;\n        }\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ButtonsMenuComponent } from './buttons-menu.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule\n    ],\n    declarations: [\n        ButtonsMenuComponent\n    ],\n    exports: [\n        ButtonsMenuComponent\n    ]\n})\nexport class ButtonsMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-sorting-picker',\n    templateUrl: './sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sorting-picker' }\n})\nexport class SortingPickerComponent {\n\n    /** Available sorting options */\n    @Input()\n    options: Array<{key: string, label: string}> = [];\n\n    /** Currently selected option key */\n    @Input()\n    selected: string;\n\n    /** Current sorting direction */\n    @Input()\n    ascending = true;\n\n    /** Raised each time sorting key gets changed. */\n    @Output()\n    valueChange = new EventEmitter<string>();\n\n    /** Raised each time direction gets changed. */\n    @Output()\n    sortingChange = new EventEmitter<boolean>();\n\n    onOptionChanged(event: MatSelectChange) {\n        this.selected = event.value;\n        this.valueChange.emit(this.selected);\n    }\n\n    toggleSortDirection() {\n        this.ascending = !this.ascending;\n        this.sortingChange.emit(this.ascending);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { SortingPickerComponent } from './sorting-picker.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        SortingPickerComponent\n    ],\n    exports: [\n        SortingPickerComponent\n    ]\n})\nexport class SortingPickerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ViewEncapsulation,\n    OnInit,\n    AfterContentChecked\n} from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n    selector: 'adf-error-content',\n    templateUrl: './error-content.component.html',\n    styleUrls: ['./error-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-error-content' }\n})\nexport class ErrorContentComponent implements OnInit, AfterContentChecked {\n\n    static UNKNOWN_ERROR = 'UNKNOWN';\n\n    /** Target URL for the secondary button. */\n    @Input()\n    secondaryButtonUrl: string = 'report-issue';\n\n    /** Target URL for the return button. */\n    @Input()\n    returnButtonUrl: string = '/';\n\n    /** Error code associated with this error. */\n    @Input()\n    errorCode: string = ErrorContentComponent.UNKNOWN_ERROR;\n\n    hasSecondButton: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        if (this.route) {\n            this.route.params.forEach((params: Params) => {\n                if (params['id']) {\n                    this.errorCode = this.checkErrorExists(params['id']) ? params['id'] : ErrorContentComponent.UNKNOWN_ERROR;\n                }\n            });\n        }\n    }\n\n    checkErrorExists(errorCode: string ) {\n        const errorMessage = this.translateService.instant('ERROR_CONTENT.' + errorCode);\n        return errorMessage !== ('ERROR_CONTENT.' + errorCode);\n    }\n\n    getTranslations() {\n        this.hasSecondButton = this.translateService.instant(\n            'ERROR_CONTENT.' + this.errorCode + '.SECONDARY_BUTTON.TEXT') ? true : false;\n    }\n\n    ngAfterContentChecked() {\n        this.getTranslations();\n    }\n\n    onSecondButton() {\n        this.router.navigate(['/' + this.secondaryButtonUrl]);\n    }\n\n    onReturnButton() {\n        this.router.navigate(['/' + this.returnButtonUrl]);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-content',\n    templateUrl: './empty-content.component.html',\n    styleUrls: ['./empty-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-empty-content' }\n})\nexport class EmptyContentComponent {\n\n    /** Material Icon to use. */\n    @Input()\n    icon = 'cake';\n\n    /** String or Resource Key for the title. */\n    @Input()\n    title = '';\n\n    /** String or Resource Key for the subtitle. */\n    @Input()\n    subtitle = '';\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ErrorContentComponent } from './error-content/error-content.component';\nimport { EmptyContentComponent } from './empty-content/empty-content.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ],\n    exports: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ]\n})\nexport class TemplateModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Router,\n    CanActivate,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    CanActivateChild\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\nexport abstract class AuthGuardBase implements CanActivate, CanActivateChild {\n    abstract checkLogin(\n        activeRoute: ActivatedRouteSnapshot,\n        redirectUrl: string\n    ): Observable<boolean> | Promise<boolean> | boolean;\n\n    protected get withCredentials(): boolean {\n        return this.appConfigService.get<boolean>(\n            'auth.withCredentials',\n            false\n        );\n    }\n\n    constructor(\n        protected authenticationService: AuthenticationService,\n        protected router: Router,\n        protected appConfigService: AppConfigService\n    ) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.checkLogin(route, state.url);\n    }\n\n    canActivateChild(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.canActivate(route, state);\n    }\n\n    protected redirectToUrl(provider: string, url: string) {\n        this.authenticationService.setRedirect({ provider, url });\n\n        const pathToLogin = this.getLoginRoute();\n        const urlToRedirect = `/${pathToLogin}?redirectUrl=${url}`;\n\n        this.router.navigateByUrl(urlToRedirect);\n    }\n\n    protected getLoginRoute(): string {\n        return (\n            this.appConfigService &&\n            this.appConfigService.get<string>(\n                AppConfigValues.LOGIN_ROUTE,\n                'login'\n            )\n        );\n    }\n\n    protected isOAuthWithoutSilentLogin() {\n        const oauth = this.appConfigService.get<OauthConfigModel>(\n            AppConfigValues.OAUTHCONFIG,\n            null\n        );\n        return (\n            this.authenticationService.isOauth() && oauth.silentLogin === false\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { JwtHelperService } from './jwt-helper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard extends AuthGuardBase {\n\n    ticketChangeBind: any;\n\n    constructor(private jwtHelperService: JwtHelperService,\n                authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n        this.ticketChangeBind = this.ticketChange.bind(this);\n\n        window.addEventListener('storage', this.ticketChangeBind);\n    }\n\n    ticketChange(event: StorageEvent) {\n        if (event.key === 'ticket-ECM' && event.newValue !== event.oldValue) {\n            this.ticketChangeRedirect(event, 'ECM');\n        }\n\n        if (event.key === 'ticket-BPM' && event.newValue !== event.oldValue) {\n            this.ticketChangeRedirect(event, 'BPM');\n        }\n\n        if (event.key === JwtHelperService.USER_ACCESS_TOKEN &&\n            this.jwtHelperService.getValueFromToken(event.newValue, JwtHelperService.USER_PREFERRED_USERNAME) !==\n            this.jwtHelperService.getValueFromToken(event.oldValue, JwtHelperService.USER_PREFERRED_USERNAME)) {\n            this.ticketChangeRedirect(event, 'ALL');\n        }\n    }\n\n    private ticketChangeRedirect(event: StorageEvent, provider: string) {\n        if (!event.newValue) {\n            this.redirectToUrl(provider, this.router.url);\n        } else {\n            window.location.reload();\n        }\n\n        window.removeEventListener('storage', this.ticketChangeBind);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isLoggedIn() || this.withCredentials) {\n            return true;\n        }\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ALL', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardEcm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isEcmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ECM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardBpm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isBpmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('BPM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from './jwt-helper.service';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardSsoRoleService implements CanActivate {\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let hasRole;\n        let hasRealmRole = false;\n        let hasClientRole = true;\n\n        if (route.data) {\n            if (route.data['roles']) {\n                const rolesToCheck = route.data['roles'];\n                hasRealmRole = this.hasRealmRoles(rolesToCheck);\n            }\n\n            if (route.data['clientRoles']) {\n                const clientRoleName = route.params[route.data['clientRoles']];\n                const rolesToCheck = route.data['roles'];\n                hasClientRole = this.hasRealmRolesForClientRole(clientRoleName, rolesToCheck);\n            }\n        }\n\n        hasRole = hasRealmRole && hasClientRole;\n\n        if (!hasRole && route.data && route.data['redirectUrl']) {\n            this.router.navigate(['/' + route.data['redirectUrl']]);\n        }\n\n        return hasRole;\n    }\n\n    constructor(private jwtHelperService: JwtHelperService, private router: Router) {\n    }\n\n    getRealmRoles(): string[] {\n        const access = this.jwtHelperService.getValueFromLocalAccessToken<any>('realm_access');\n        return access ? access['roles'] : [];\n    }\n\n    getClientRoles(client: string): string[] {\n        const clientRole = this.jwtHelperService.getValueFromLocalAccessToken<any>('resource_access')[client];\n        return clientRole ? clientRole['roles'] : [];\n    }\n\n    hasRealmRole(role: string): boolean {\n        let hasRole = false;\n        if (this.jwtHelperService.getAccessToken()) {\n            const realmRoles = this.getRealmRoles();\n            hasRole = realmRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n\n    hasRealmRoles(rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasRealmRole(currentRole);\n        });\n    }\n\n    hasRealmRolesForClientRole(clientRole: string, rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasClientRole(clientRole, currentRole);\n        });\n    }\n\n    hasClientRole(clientRole, role: string): boolean {\n        let hasRole = false;\n        if (this.jwtHelperService.getAccessToken()) {\n            const clientRoles = this.getClientRoles(clientRole);\n            hasRole = clientRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppDefinitionRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppsProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of deployed apps for this user.\n     * @returns The list of deployed apps\n     */\n    getDeployedApplications(): Observable<AppDefinitionRepresentation[]> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation[]> response.data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of deployed apps for this user, where the app name is `name`.\n     * @param name Name of the app\n     * @returns The list of deployed apps\n     */\n    getDeployedApplicationsByName(name: string): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation> response.data.find((app) => app.name === name)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a specific app ID number.\n     * @param appId ID of the target app\n     * @returns Details of the app\n     */\n    getApplicationDetailsById(appId: number): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => response.data.find((app) => app.id === appId)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { TranslationService } from './translation.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageTitleService {\n\n    private originalTitle: string = '';\n    private translatedTitle: string = '';\n\n    constructor(\n        private titleService: Title,\n        private appConfig: AppConfigService,\n        private translationService: TranslationService) {\n        translationService.translate.onLangChange.subscribe(() => this.onLanguageChanged());\n        translationService.translate.onTranslationChange.subscribe(() => this.onLanguageChanged());\n    }\n\n    /**\n     * Sets the page title.\n     * @param value The new title\n     */\n    setTitle(value: string = '') {\n        this.originalTitle = value;\n        this.translatedTitle = this.translationService.instant(value);\n\n        this.updateTitle();\n    }\n\n    private onLanguageChanged() {\n        this.translatedTitle = this.translationService.instant(this.originalTitle);\n        this.updateTitle();\n    }\n\n    private updateTitle() {\n        const name = this.appConfig.get('application.name') || 'Alfresco ADF Application';\n\n        const title = this.translatedTitle ? `${this.translatedTitle} - ${name}` : `${name}`;\n        this.titleService.setTitle(title);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { Observable, from, interval, empty } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { concatMap, switchMap, takeWhile, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RenditionsService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the first available rendition found for a node.\n     * @param nodeId ID of the target node\n     * @returns Information object for the rendition\n     */\n    getAvailableRenditionForNode(nodeId: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId)).pipe(\n            map((availableRenditions: RenditionPaging) => {\n                const renditionsAvailable: RenditionEntry[] = availableRenditions.list.entries.filter(\n                    (rendition) => (rendition.entry.id === 'pdf' || rendition.entry.id === 'imgpreview'));\n                const existingRendition = renditionsAvailable.find((rend) => rend.entry.status === 'CREATED');\n                return existingRendition ? existingRendition : renditionsAvailable[0];\n            }));\n    }\n\n    /**\n     * Generates a rendition for a node using the first available encoding.\n     * @param nodeId ID of the target node\n     * @returns Null response to indicate completion\n     */\n    generateRenditionForNode(nodeId: string): Observable<any> {\n        return this.getAvailableRenditionForNode(nodeId).pipe(\n            map((rendition: RenditionEntry) => {\n                if (rendition.entry.status !== 'CREATED') {\n                    return from(this.apiService.renditionsApi.createRendition(nodeId, { id: rendition.entry.id }));\n                } else {\n                    return empty();\n                }\n            })\n        );\n    }\n\n    /**\n     * Checks if the specified rendition is available for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the rendition is available, false otherwise\n     */\n    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                (res) => {\n                    let isAvailable = true;\n                    if (res.entry.status.toString() === 'NOT_CREATED') {\n                        isAvailable = false;\n                    }\n                    observer.next(isAvailable);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Checks if the node can be converted using the specified rendition.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the node can be converted, false otherwise\n     */\n    isConversionPossible(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                () => {\n                    observer.next(true);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL linking to the specified rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns URL string\n     */\n    getRenditionUrl(nodeId: string, encoding: string): string {\n        return this.apiService.contentApi.getRenditionUrl(nodeId, encoding);\n    }\n\n    /**\n     * Gets information about a rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Information object about the rendition\n     */\n    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRendition(nodeId, encoding));\n    }\n\n    /**\n     * Gets a list of all renditions for a node.\n     * @param nodeId ID of the target node\n     * @returns Paged list of rendition details\n     */\n    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId));\n    }\n\n    /**\n     * Creates a rendition for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Null response to indicate completion\n     */\n    createRendition(nodeId: string, encoding: string): Observable<{}> {\n        return from(this.apiService.renditionsApi.createRendition(nodeId, { id: encoding }));\n    }\n\n    /**\n     * Repeatedly attempts to create a rendition, through to success or failure.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @param pollingInterval Time interval (in milliseconds) between checks for completion\n     * @param retries Number of attempts to make before declaring failure\n     * @returns True if the rendition was created, false otherwise\n     */\n    convert(nodeId: string, encoding: string, pollingInterval: number = 1000, retries: number = 5) {\n        return this.createRendition(nodeId, encoding)\n            .pipe(\n                concatMap(() => this.pollRendition(nodeId, encoding, pollingInterval, retries))\n            );\n    }\n\n    private pollRendition(nodeId: string, encoding: string, intervalSize: number = 1000, retries: number = 5) {\n        let attempts = 0;\n        return interval(intervalSize)\n            .pipe(\n                switchMap(() => this.getRendition(nodeId, encoding)),\n                takeWhile((renditionEntry: RenditionEntry) => {\n                    attempts += 1;\n                    if (attempts > retries) {\n                        return false;\n                    }\n                    return (renditionEntry.entry.status.toString() !== 'CREATED');\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ComponentTranslationModel {\n    name: string;\n    path: string;\n    json: string [];\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name;\n        this.path = obj && obj.path;\n        this.json = obj && obj.json || [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, forkJoin, throwError, of } from 'rxjs';\nimport { ComponentTranslationModel } from '../models/component.model';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { map, catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslateLoaderService implements TranslateLoader {\n\n    private prefix: string = 'i18n';\n    private suffix: string = '.json';\n    private providers: ComponentTranslationModel[] = [];\n    private queue: string [][] = [];\n    private defaultLang: string = 'en';\n\n    constructor(private http: HttpClient) {\n    }\n\n    setDefaultLang(value: string) {\n        this.defaultLang = value || 'en';\n    }\n\n    registerProvider(name: string, path: string) {\n        const registered = this.providers.find((provider) => provider.name === name);\n        if (registered) {\n            registered.path = path;\n        } else {\n            this.providers.push(new ComponentTranslationModel({ name: name, path: path }));\n        }\n    }\n\n    providerRegistered(name: string): boolean {\n        return this.providers.find((x) => x.name === name) ? true : false;\n    }\n\n    fetchLanguageFile(lang: string, component: ComponentTranslationModel, fallbackUrl?: string): Observable<void> {\n        const translationUrl = fallbackUrl || `${component.path}/${this.prefix}/${lang}${this.suffix}?v=${Date.now()}`;\n\n        return this.http.get(translationUrl).pipe(\n            map((res: Response) => {\n                component.json[lang] = res;\n            }),\n            retry(3),\n            catchError(() => {\n                if (!fallbackUrl && lang.includes('-')) {\n                    const [langId] = lang.split('-');\n\n                    if (langId && langId !== this.defaultLang) {\n                        const url = `${component.path}/${this.prefix}/${langId}${this.suffix}?v=${Date.now()}`;\n\n                        return this.fetchLanguageFile(lang, component, url);\n                    }\n                }\n                return throwError(`Failed to load ${translationUrl}`);\n            })\n        );\n    }\n\n    getComponentToFetch(lang: string): Array<Observable<any>> {\n        const observableBatch = [];\n        if (!this.queue[lang]) {\n            this.queue[lang] = [];\n        }\n        this.providers.forEach((component) => {\n            if (!this.isComponentInQueue(lang, component.name)) {\n                this.queue[lang].push(component.name);\n\n                observableBatch.push(\n                    this.fetchLanguageFile(lang, component)\n                );\n            }\n        });\n\n        return observableBatch;\n    }\n\n    init(lang: string) {\n        if (this.queue[lang] === undefined) {\n            this.queue[lang] = [];\n        }\n    }\n\n    isComponentInQueue(lang: string, name: string) {\n        return (this.queue[lang] || []).find((x) => x === name) ? true : false;\n    }\n\n    getFullTranslationJSON(lang: string): any {\n        let result = {};\n\n        this.providers\n            .slice(0)\n            .sort((a, b) => {\n                if (a.name === 'app') {\n                    return 1;\n                }\n                if (b.name === 'app') {\n                    return -1;\n                }\n                return a.name.localeCompare(b.name);\n            })\n            .forEach((model) => {\n                if (model.json && model.json[lang]) {\n                    result = ObjectUtils.merge(result, model.json[lang]);\n                }\n            });\n\n        return result;\n    }\n\n    getTranslation(lang: string): Observable<any> {\n        let hasFailures = false;\n        const batch = [\n            ...this.getComponentToFetch(lang).map((observable) => {\n                return observable.pipe(\n                    catchError((error) => {\n                        console.warn(error);\n                        hasFailures = true;\n                        return of(error);\n                    })\n                );\n            })\n        ];\n\n        return new Observable((observer) => {\n\n            if (batch.length > 0) {\n                forkJoin(batch).subscribe(\n                    () => {\n                        const fullTranslation = this.getFullTranslationJSON(lang);\n                        if (fullTranslation) {\n                            observer.next(fullTranslation);\n                        }\n                        if (hasFailures) {\n                            observer.error('Failed to load some resources');\n                        } else {\n                            observer.complete();\n                        }\n                    },\n                    (err) => {\n                        observer.error('Failed to load some resources');\n                    });\n            } else {\n                const fullTranslation = this.getFullTranslationJSON(lang);\n                if (fullTranslation) {\n                    observer.next(fullTranslation);\n                    observer.complete();\n                }\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Minimatch } from 'minimatch-browser';\nimport { Subject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport {\n    FileUploadCompleteEvent,\n    FileUploadDeleteEvent,\n    FileUploadErrorEvent,\n    FileUploadEvent\n} from '../events/file.event';\nimport { FileModel, FileUploadProgress, FileUploadStatus } from '../models/file.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UploadService {\n\n    private cache: { [key: string]: any } = {};\n    private totalComplete: number = 0;\n    private totalAborted: number = 0;\n    private totalError: number = 0;\n    private excludedFileList: string[] = [];\n    private matchingOptions: any = null;\n\n    activeTask: Promise<any> = null;\n    queue: FileModel[] = [];\n\n    queueChanged: Subject<FileModel[]> = new Subject<FileModel[]>();\n    fileUpload: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadStarting: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadCancelled: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadProgress: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadAborted: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadError: Subject<FileUploadErrorEvent> = new Subject<FileUploadErrorEvent>();\n    fileUploadComplete: Subject<FileUploadCompleteEvent> = new Subject<FileUploadCompleteEvent>();\n    fileUploadDeleted: Subject<FileUploadDeleteEvent> = new Subject<FileUploadDeleteEvent>();\n    fileDeleted: Subject<string> = new Subject<string>();\n\n    constructor(protected apiService: AlfrescoApiService, private appConfigService: AppConfigService) {\n    }\n\n    /**\n     * Checks whether the service is uploading a file.\n     * @returns True if a file is uploading, false otherwise\n     */\n    isUploading(): boolean {\n        return this.activeTask ? true : false;\n    }\n\n    /**\n     * Gets the file Queue\n     * @returns Array of files that form the queue\n     */\n    getQueue(): FileModel[] {\n        return this.queue;\n    }\n\n    /**\n     * Adds files to the uploading queue to be uploaded\n     * @param files One or more separate parameters or an array of files to queue\n     * @returns Array of files that were not blocked from upload by the ignore list\n     */\n    addToQueue(...files: FileModel[]): FileModel[] {\n        const allowedFiles = files.filter((currentFile) => this.filterElement(currentFile));\n        this.queue = this.queue.concat(allowedFiles);\n        this.queueChanged.next(this.queue);\n        return allowedFiles;\n    }\n\n    private filterElement(file: FileModel) {\n        let isAllowed = true;\n\n        this.excludedFileList = <string[]> this.appConfigService.get('files.excluded');\n        if (this.excludedFileList) {\n\n            this.matchingOptions = this.appConfigService.get('files.match-options');\n\n            isAllowed = this.excludedFileList.filter((pattern) => {\n                const minimatch = new Minimatch(pattern, this.matchingOptions);\n                return minimatch.match(file.name);\n            }).length === 0;\n        }\n        return isAllowed;\n    }\n\n    /**\n     * Finds all the files in the queue that are not yet uploaded and uploads them into the directory folder.\n     * @param emitter Emitter to invoke on file status change\n     */\n    uploadFilesInTheQueue(emitter?: EventEmitter<any>): void {\n        if (!this.activeTask) {\n            const file = this.queue.find((currentFile) => currentFile.status === FileUploadStatus.Pending);\n            if (file) {\n                this.onUploadStarting(file);\n\n                const promise = this.beginUpload(file, emitter);\n                this.activeTask = promise;\n                this.cache[file.id] = promise;\n\n                const next = () => {\n                    this.activeTask = null;\n                    setTimeout(() => this.uploadFilesInTheQueue(emitter), 100);\n                };\n\n                promise.next = next;\n\n                promise.then(\n                    () => next(),\n                    () => next()\n                );\n            }\n        }\n    }\n\n    /**\n     * Cancels uploading of files.\n     * @param files One or more separate parameters or an array of files specifying uploads to cancel\n     */\n    cancelUpload(...files: FileModel[]) {\n        files.forEach((file) => {\n            const promise = this.cache[file.id];\n\n            if (promise) {\n                promise.abort();\n                delete this.cache[file.id];\n            } else {\n                const performAction = this.getAction(file);\n                performAction();\n            }\n        });\n    }\n\n    /** Clears the upload queue */\n    clearQueue() {\n        this.queue = [];\n        this.totalComplete = 0;\n        this.totalAborted = 0;\n        this.totalError = 0;\n    }\n\n    /**\n     * Gets an upload promise for a file.\n     * @param file The target file\n     * @returns Promise that is resolved if the upload is successful or error otherwise\n     */\n    getUploadPromise(file: FileModel): any {\n        const opts: any = {\n            renditions: 'doclib',\n            include: ['allowableOperations']\n        };\n\n        if (file.options.newVersion === true) {\n            opts.overwrite = true;\n            opts.majorVersion = file.options.majorVersion;\n            opts.comment = file.options.comment;\n            opts.name = file.name;\n        } else {\n            opts.autoRename = true;\n        }\n\n        if (file.options.nodeType) {\n            opts.nodeType = file.options.nodeType;\n        }\n\n        if (file.id) {\n            return this.apiService.getInstance().node.updateNodeContent(\n                file.id,\n                file.file,\n                opts\n            );\n        } else {\n            return this.apiService.getInstance().upload.uploadFile(\n                file.file,\n                file.options.path,\n                file.options.parentId,\n                file.options,\n                opts\n            );\n        }\n    }\n\n    private beginUpload(file: FileModel, emitter: EventEmitter<any>): any {\n\n        const promise = this.getUploadPromise(file);\n\n        promise.on('progress', (progress: FileUploadProgress) => {\n            this.onUploadProgress(file, progress);\n        })\n            .on('abort', () => {\n                this.onUploadAborted(file);\n                if (emitter) {\n                    emitter.emit({ value: 'File aborted' });\n                }\n            })\n            .on('error', (err) => {\n                this.onUploadError(file, err);\n                if (emitter) {\n                    emitter.emit({ value: 'Error file uploaded' });\n                }\n            })\n            .on('success', (data) => {\n                this.onUploadComplete(file, data);\n                if (emitter) {\n                    emitter.emit({ value: data });\n                }\n            })\n            .catch((err) => {\n            });\n\n        return promise;\n    }\n\n    private onUploadStarting(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Starting;\n            const event = new FileUploadEvent(file, FileUploadStatus.Starting);\n            this.fileUpload.next(event);\n            this.fileUploadStarting.next(event);\n        }\n    }\n\n    private onUploadProgress(file: FileModel, progress: FileUploadProgress): void {\n        if (file) {\n            file.progress = progress;\n            file.status = FileUploadStatus.Progress;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Progress);\n            this.fileUpload.next(event);\n            this.fileUploadProgress.next(event);\n        }\n    }\n\n    private onUploadError(file: FileModel, error: any): void {\n        if (file) {\n            file.errorCode = ( error || {} ).status;\n            file.status = FileUploadStatus.Error;\n            this.totalError++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadErrorEvent(file, error, this.totalError);\n            this.fileUpload.next(event);\n            this.fileUploadError.next(event);\n        }\n    }\n\n    private onUploadComplete(file: FileModel, data: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Complete;\n            file.data = data;\n            this.totalComplete++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadCompleteEvent(file, this.totalComplete, data, this.totalAborted);\n            this.fileUpload.next(event);\n            this.fileUploadComplete.next(event);\n        }\n    }\n\n    private onUploadAborted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Aborted;\n            this.totalAborted++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Aborted);\n            this.fileUpload.next(event);\n            this.fileUploadAborted.next(event);\n            promise.next();\n        }\n    }\n\n    private onUploadCancelled(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Cancelled;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Cancelled);\n            this.fileUpload.next(event);\n            this.fileUploadCancelled.next(event);\n        }\n    }\n\n    private onUploadDeleted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Deleted;\n            this.totalComplete--;\n\n            const event = new FileUploadDeleteEvent(file, this.totalComplete);\n            this.fileUpload.next(event);\n            this.fileUploadDeleted.next(event);\n        }\n    }\n\n    private getAction(file) {\n        const actions = {\n            [FileUploadStatus.Pending]: () => this.onUploadCancelled(file),\n            [FileUploadStatus.Deleted]: () => this.onUploadDeleted(file),\n            [FileUploadStatus.Error]: () => this.onUploadError(file, null)\n        };\n\n        return actions[file.status];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\n\nimport { NodePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeletedNodesApiService {\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get nodesApi() {\n       return this.apiService.getInstance().core.nodesApi;\n    }\n\n    /**\n     * Gets a list of nodes in the trash.\n     * @param options Options for JS-API call\n     * @returns List of nodes in the trash\n     */\n    getDeletedNodes(options?: Object): Observable<NodePaging> {\n        const defaultOptions = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.nodesApi.getDeletedNodes(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavoritesApiService {\n\n    static remapEntry({ entry }: any): any {\n        entry.properties = {\n            'cm:title': entry.title,\n            'cm:description': entry.description\n        };\n\n        return { entry };\n    }\n\n    remapFavoritesData(data: any = {}): NodePaging {\n        const list = (data.list || {});\n        const pagination = (list.pagination || {});\n        const entries: any[] = this\n            .remapFavoriteEntries(list.entries || []);\n\n        return <NodePaging> {\n            list: { entries, pagination }\n        };\n    }\n\n    remapFavoriteEntries(entries: any[]) {\n        return entries\n            .map(({ entry: { target }}: any) => ({\n                entry: target.file || target.folder\n            }))\n            .filter(({ entry }) => (!!entry))\n            .map(FavoritesApiService.remapEntry);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get favoritesApi() {\n       return this.apiService.getInstance().core.favoritesApi;\n    }\n\n    /**\n     * Gets the favorites for a user.\n     * @param personId ID of the user\n     * @param options Options supported by JS-API\n     * @returns List of favorites\n     */\n    getFavorites(personId: string, options?: any): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.favoritesApi\n            .getFavorites(personId, queryOptions)\n            .then(this.remapFavoritesData);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, MinimalNode, NodePaging } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodesApiService {\n\n    constructor(\n        private api: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get nodesApi() {\n        return this.api.getInstance().core.nodesApi;\n    }\n\n    private getEntryFromEntity(entity: NodeEntry) {\n        return entity.entry;\n    }\n\n    /**\n     * Gets the stored information about a node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Node information\n     */\n    getNode(nodeId: string, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNode(nodeId, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Gets the items contained in a folder node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns List of child items from the folder\n     */\n    getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n        const defaults = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNodeChildren(nodeId, queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new document node inside a folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new node\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new node\n     */\n    createNode(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .addNode(parentNodeId, nodeBody, options)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder node inside a parent folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new folder\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new folder\n     */\n    createFolder(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const body = Object.assign({ nodeType: 'cm:folder' }, nodeBody);\n        return this.createNode(parentNodeId, body, options);\n    }\n\n    /**\n     * Updates the information about a node.\n     * @param nodeId ID of the target node\n     * @param nodeBody New data for the node\n     * @param options Optional parameters supported by JS-API\n     * @returns Updated node information\n     */\n    updateNode(nodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n\n        const promise = this.nodesApi\n            .updateNode(nodeId, nodeBody, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Moves a node to the trashcan.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Empty result that notifies when the deletion is complete\n     */\n    deleteNode(nodeId: string, options: any = {}): Observable<any> {\n        const promise = this.nodesApi.deleteNode(nodeId, options);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Restores a node previously moved to the trashcan.\n     * @param nodeId ID of the node to restore\n     * @returns Details of the restored node\n     */\n    restoreNode(nodeId: string): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .restoreNode(nodeId)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleContentService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get peopleApi() {\n       return this.apiService.getInstance().core.peopleApi;\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param personId ID of the target user\n     * @returns User information\n     */\n    getPerson(personId: string): Observable<any> {\n        const promise = this.peopleApi.getPerson(personId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Gets information about the user who is currently logged in.\n     * @returns User information\n     */\n    getCurrentPerson(): Observable<any> {\n        return this.getPerson('-me-');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '../interface/search-configuration.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    /**\n     * Generates a QueryBody object with custom search parameters.\n     * @param searchTerm Term text to search for\n     * @param maxResults Maximum number of search results to show in a page\n     * @param skipCount The offset of the start of the page within the results list\n     * @returns Query body defined by the parameters\n     */\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `'${searchTerm}*' OR name:'${searchTerm}*'` : searchTerm\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder' OR TYPE:'cm:content'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, QueryBody } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SearchConfigurationService } from './search-configuration.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchService {\n\n    dataLoaded: Subject<NodePaging> = new Subject();\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchConfigurationService: SearchConfigurationService) {\n    }\n\n    /**\n     * Gets a list of nodes that match the given search criteria.\n     * @param term Term to search for\n     * @param options Options for delivery of the search results\n     * @returns List of nodes resulting from the search\n     */\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().core.queriesApi.findNodes(term, options);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        }).catch((err) => this.handleError(err));\n\n        return from(promise);\n    }\n\n    /**\n     * Performs a search.\n     * @param searchTerm Term to search for\n     * @param maxResults Maximum number of items in the list of results\n     * @param skipCount Number of higher-ranked items to skip over in the list\n     * @returns List of search results\n     */\n    search(searchTerm: string, maxResults: number, skipCount: number): Observable<NodePaging> {\n        const searchQuery = Object.assign(this.searchConfigurationService.generateQueryBody(searchTerm, maxResults, skipCount));\n        const promise = this.apiService.getInstance().search.searchApi.search(searchQuery);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        }).catch((err) => this.handleError(err));\n\n        return from(promise);\n    }\n\n    /**\n     * Performs a search with its parameters supplied by a QueryBody object.\n     * @param queryBody Object containing the search parameters\n     * @returns List of search results\n     */\n    searchByQueryBody(queryBody: QueryBody): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().search.searchApi.search(queryBody);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        }).catch((err) => this.handleError(err));\n\n        return from(promise);\n    }\n\n    private handleError(error: any): Observable<any> {\n        return throwError(error || 'Server error');\n    }\n}\n\nexport interface SearchOptions {\n    /** The number of entities that exist in the collection before those included in this list. */\n    skipCount?: number;\n\n    /** The maximum number of items to return in the list. */\n    maxItems?: number;\n\n    /** The id of the node to start the search from. Supports the aliases -my-, -root- and -shared-. */\n    rootNodeId?: string;\n\n    /** Restrict the returned results to only those of the given node type and its sub-types. */\n    nodeType?: string;\n\n    /**\n     * Return additional information about the node. The available optional fields are:\n     * `allowableOperations`, `aspectNames`, `isLink`, `isLocked`, `path` and `properties`.\n     */\n    include?: string[];\n\n    /**\n     * String to control the order of the entities returned in a list. You can use this\n     * parameter to sort the list by one or more fields. Each field has a default sort order,\n     * which is normally ascending order (but see the JS-API docs to check if any fields used\n     * in a method have a descending default search order). To sort the entities in a specific\n     * order, you can use the \"ASC\" and \"DESC\" keywords for any field.\n     */\n    orderBy?: string;\n\n    /**\n     * List of field names. You can use this parameter to restrict the fields returned within\n     * a response if, for example, you want to save on overall bandwidth. The list applies to a\n     * returned individual entity or entries within a collection. If the API method also supports\n     * the `include` parameter, then the fields specified in the include parameter are returned in\n     * addition to those specified in the fields parameter.\n     */\n    fields?: string[];\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, SharedLinkEntry } from '@alfresco/js-api';\nimport { Observable, from, of, Subject } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedLinksApiService {\n\n    error = new Subject<{ statusCode: number, message: string }>();\n\n    constructor(private apiService: AlfrescoApiService,\n                private preferences: UserPreferencesService) {\n    }\n\n    private get sharedLinksApi() {\n        return this.apiService.getInstance().core.sharedlinksApi;\n    }\n\n    /**\n     * Gets shared links available to the current user.\n     * @param options Options supported by JS-API\n     * @returns List of shared links\n     */\n    getSharedLinks(options: any = {}): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: ['properties', 'allowableOperations']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, options);\n        const promise = this.sharedLinksApi.findSharedLinks(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Creates a shared link available to the current user.\n     * @param nodeId ID of the node to link to\n     * @param options Options supported by JS-API\n     * @returns The shared link just created\n     */\n    createSharedLinks(nodeId: string, options: any = {}): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.addSharedLink({ nodeId: nodeId });\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Deletes a shared link.\n     * @param sharedId ID of the link to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSharedLink(sharedId: string): Observable<any | Error> {\n        const promise = this.sharedLinksApi.deleteSharedLink(sharedId);\n\n        return from(promise).pipe(\n            catchError((err: Error) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SitesService {\n\n    constructor(\n        private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets a list of all sites in the repository.\n     * @param opts Options supported by JS-API\n     * @returns List of sites\n     */\n    getSites(opts: any = {}): Observable<SitePaging> {\n        const defaultOptions = {\n            skipCount: 0,\n            include: ['properties']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, opts);\n        return from(this.apiService.getInstance().core.sitesApi.getSites(queryOptions))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a site.\n     * @param siteId ID of the target site\n     * @param opts Options supported by JS-API\n     * @returns Information about the site\n     */\n    getSite(siteId: string, opts?: any): Observable<SiteEntry | {}> {\n        return from(this.apiService.getInstance().core.sitesApi.getSite(siteId, opts))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a site.\n     * @param siteId Site to delete\n     * @param permanentFlag True: deletion is permanent; False: site is moved to the trash\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSite(siteId: string, permanentFlag: boolean = true): Observable<any> {\n        const options: any = {};\n        options.permanent = permanentFlag;\n        return from(this.apiService.getInstance().core.sitesApi.deleteSite(siteId, options))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a site's content.\n     * @param siteId ID of the target site\n     * @returns Site content\n     */\n    getSiteContent(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['containers'] });\n    }\n\n    /**\n     * Gets a list of all a site's members.\n     * @param siteId ID of the target site\n     * @returns Site members\n     */\n    getSiteMembers(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['members'] });\n    }\n\n    /**\n     * Gets the username of the user currently logged into ACS.\n     * @returns Username string\n     */\n    getEcmCurrentLoggedUserName(): string {\n        return this.apiService.getInstance().getEcmUsername();\n    }\n\n    private handleError(error: any): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { LoginDialogComponent } from '../login/components/login-dialog.component';\nimport { LoginDialogComponentData } from '../login/components/login-dialog-component-data.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param actionName Name of the action to show in the title\n     * @param title Title for the dialog\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(actionName: string, title: string): Observable<string> {\n        const logged = new Subject<string>();\n        logged.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: LoginDialogComponentData = {\n            title,\n            actionName,\n            logged\n        };\n\n        this.openLoginDialog(data, 'adf-login-dialog', '630px');\n        return logged;\n    }\n\n    private openLoginDialog(data: LoginDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(LoginDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApiCompatibility,\n    ContentApi,\n    Core\n} from '@alfresco/js-api';\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExternalAlfrescoApiService {\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    init(ecmHost: string, contextRoot: string) {\n\n        const domainPrefix = this.createPrefixFromHost(ecmHost);\n\n        const config = {\n            provider: 'ECM',\n            hostEcm: ecmHost,\n            authType: 'BASIC',\n            contextRoot: contextRoot,\n            domainPrefix\n        };\n        this.initAlfrescoApi(config);\n    }\n\n    protected initAlfrescoApi(config) {\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n    }\n\n    private createPrefixFromHost(url: string): string {\n        const match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n        let result = null;\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\n            result = match[2];\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LockService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    isLocked(node: Node): boolean {\n        let isLocked = false;\n        if (this.hasLockConfigured(node)) {\n            if (this.isReadOnlyLock(node)) {\n                isLocked = true;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            } else if (this.isLockOwnerAllowed(node)) {\n                isLocked = this.alfrescoApiService.getInstance().getEcmUsername() !== node.properties['cm:lockOwner'].id;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            }\n        }\n        return isLocked;\n    }\n\n    private hasLockConfigured(node: Node): boolean {\n        return node.isFile && node.isLocked && node.properties['cm:lockType'];\n    }\n\n    private isReadOnlyLock(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'READ_ONLY_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private isLockOwnerAllowed(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'WRITE_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private getLockExpiryTime(node: Node): Moment {\n        if (node.properties['cm:expiryDate']) {\n            return moment(node.properties['cm:expiryDate'], 'yyyy-MM-ddThh:mm:ssZ');\n        }\n    }\n\n    private isLockExpired(node: Node): boolean {\n        const expiryLockTime = this.getLockExpiryTime(node);\n        return moment().isAfter(expiryLockTime);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*!\n* @license\n* Copyright 2019 Alfresco Software, Ltd.\n*\n* Licensed under the Apache License, Version 2.0 (the 'License');\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an 'AS IS' BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nexport class DemoForm {\n\n    easyForm = {\n        'id': 1001,\n        'name': 'ISSUE_FORM',\n        'tabs': [],\n        'fields': [\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': '1498212398417',\n                'name': 'Label',\n                'type': 'container',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': false,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': null,\n                'className': null,\n                'dateDisplayFormat': null,\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label',\n                            'name': 'Label',\n                            'type': 'dropdown',\n                            'value': 'Choose one...',\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': true,\n                            'options': [\n                                {\n                                    'id': 'empty',\n                                    'name': 'Choose one...'\n                                },\n                                {\n                                    'id': 'option_1',\n                                    'name': 'test1'\n                                },\n                                {\n                                    'id': 'option_2',\n                                    'name': 'test2'\n                                },\n                                {\n                                    'id': 'option_3',\n                                    'name': 'test3'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': null,\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'Date',\n                            'name': 'Date',\n                            'type': 'date',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label5',\n                            'name': 'Label5',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label6',\n                            'name': 'Label6',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label4',\n                            'name': 'Label4',\n                            'type': 'integer',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label12',\n                            'name': 'Label12',\n                            'type': 'radio-buttons',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': [\n                                {\n                                    'id': 'option_1',\n                                    'name': 'Option 1'\n                                },\n                                {\n                                    'id': 'option_2',\n                                    'name': 'Option 2'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        }\n                    ]\n                }\n            }\n        ],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'customFieldsValueInfo': {},\n        'gridsterForm': false,\n        'globalDateFormat': 'D-M-YYYY'\n    };\n\n    formDefinition = {\n        'id': 3003,\n        'name': 'demo-01',\n        'taskId': '7501',\n        'taskName': 'Demo Form 01',\n        'tabs': [\n            {\n                'id': 'tab1',\n                'title': 'Text',\n                'visibilityCondition': null\n            },\n            {\n                'id': 'tab2',\n                'title': 'Misc',\n                'visibilityCondition': null\n            }\n        ],\n        'fields': [\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': '1488274019966',\n                'name': 'Label',\n                'type': 'container',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': null,\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': null,\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [],\n                    '2': []\n                }\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section4',\n                'name': 'Section 4',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab2',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label8',\n                            'name': 'Label8',\n                            'type': 'people',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label13',\n                            'name': 'Label13',\n                            'type': 'functional-group',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label18',\n                            'name': 'Label18',\n                            'type': 'readonly',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label19',\n                            'name': 'Label19',\n                            'type': 'readonly-text',\n                            'value': 'Display text as part of the form',\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'HyperlinkRepresentation',\n                            'id': 'label15',\n                            'name': 'Label15',\n                            'type': 'hyperlink',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'hyperlinkUrl': 'www.google.com',\n                            'displayText': null\n                        },\n                        {\n                            'fieldType': 'AttachFileFieldRepresentation',\n                            'id': 'label16',\n                            'name': 'Label16',\n                            'type': 'upload',\n                            'value': [],\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1,\n                                'fileSource': {\n                                    'serviceId': 'all-file-sources',\n                                    'name': 'All file sources'\n                                }\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'metaDataColumnDefinitions': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label17',\n                            'name': 'Label17',\n                            'type': 'select-folder',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab2',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1,\n                                'folderSource': {\n                                    'serviceId': 'alfresco-1',\n                                    'name': 'Alfresco 5.2 Local',\n                                    'metaDataAllowed': true\n                                }\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ]\n                }\n            },\n            {\n                'fieldType': 'DynamicTableRepresentation',\n                'id': 'label14',\n                'name': 'Label14',\n                'type': 'dynamic-table',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab2',\n                'className': null,\n                'params': {\n                    'existingColspan': 1,\n                    'maxColspan': 1\n                },\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 2,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'columnDefinitions': [\n                    {\n                        'id': 'id',\n                        'name': 'id',\n                        'type': 'String',\n                        'value': null,\n                        'optionType': null,\n                        'options': null,\n                        'restResponsePath': null,\n                        'restUrl': null,\n                        'restIdProperty': null,\n                        'restLabelProperty': null,\n                        'amountCurrency': null,\n                        'amountEnableFractions': false,\n                        'required': true,\n                        'editable': true,\n                        'sortable': true,\n                        'visible': true,\n                        'endpoint': null,\n                        'requestHeaders': null\n                    },\n                    {\n                        'id': 'name',\n                        'name': 'name',\n                        'type': 'String',\n                        'value': null,\n                        'optionType': null,\n                        'options': null,\n                        'restResponsePath': null,\n                        'restUrl': null,\n                        'restIdProperty': null,\n                        'restLabelProperty': null,\n                        'amountCurrency': null,\n                        'amountEnableFractions': false,\n                        'required': true,\n                        'editable': true,\n                        'sortable': true,\n                        'visible': true,\n                        'endpoint': null,\n                        'requestHeaders': null\n                    }\n                ]\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section1',\n                'name': 'Section 1',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab1',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label1',\n                            'name': 'Label1',\n                            'type': 'text',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label3',\n                            'name': 'Label3',\n                            'type': 'text',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label2',\n                            'name': 'Label2',\n                            'type': 'multi-line-text',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 2,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ]\n                }\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section2',\n                'name': 'Section 2',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab1',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label4',\n                            'name': 'Label4',\n                            'type': 'integer',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label7',\n                            'name': 'Label7',\n                            'type': 'date',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label5',\n                            'name': 'Label5',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'FormFieldRepresentation',\n                            'id': 'label6',\n                            'name': 'Label6',\n                            'type': 'boolean',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null\n                        },\n                        {\n                            'fieldType': 'AmountFieldRepresentation',\n                            'id': 'label11',\n                            'name': 'Label11',\n                            'type': 'amount',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': '10',\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'enableFractions': false,\n                            'currency': null\n                        }\n                    ]\n                }\n            },\n            {\n                'fieldType': 'ContainerRepresentation',\n                'id': 'section3',\n                'name': 'Section 3',\n                'type': 'group',\n                'value': null,\n                'required': false,\n                'readOnly': false,\n                'overrideId': false,\n                'colspan': 1,\n                'placeholder': null,\n                'minLength': 0,\n                'maxLength': 0,\n                'minValue': null,\n                'maxValue': null,\n                'regexPattern': null,\n                'optionType': null,\n                'hasEmptyValue': null,\n                'options': null,\n                'restUrl': null,\n                'restResponsePath': null,\n                'restIdProperty': null,\n                'restLabelProperty': null,\n                'tab': 'tab1',\n                'className': null,\n                'dateDisplayFormat': null,\n                'layout': {\n                    'row': -1,\n                    'column': -1,\n                    'colspan': 2\n                },\n                'sizeX': 2,\n                'sizeY': 1,\n                'row': -1,\n                'col': -1,\n                'visibilityCondition': null,\n                'numberOfColumns': 2,\n                'fields': {\n                    '1': [\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label9',\n                            'name': 'Label9',\n                            'type': 'dropdown',\n                            'value': 'Choose one...',\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': true,\n                            'options': [\n                                {\n                                    'id': 'empty',\n                                    'name': 'Choose one...'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        },\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label12',\n                            'name': 'Label12',\n                            'type': 'radio-buttons',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': [\n                                {\n                                    'id': 'option_1',\n                                    'name': 'Option 1'\n                                },\n                                {\n                                    'id': 'option_2',\n                                    'name': 'Option 2'\n                                }\n                            ],\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 2\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        }\n                    ],\n                    '2': [\n                        {\n                            'fieldType': 'RestFieldRepresentation',\n                            'id': 'label10',\n                            'name': 'Label10',\n                            'type': 'typeahead',\n                            'value': null,\n                            'required': false,\n                            'readOnly': false,\n                            'overrideId': false,\n                            'colspan': 1,\n                            'placeholder': null,\n                            'minLength': 0,\n                            'maxLength': 0,\n                            'minValue': null,\n                            'maxValue': null,\n                            'regexPattern': null,\n                            'optionType': null,\n                            'hasEmptyValue': null,\n                            'options': null,\n                            'restUrl': null,\n                            'restResponsePath': null,\n                            'restIdProperty': null,\n                            'restLabelProperty': null,\n                            'tab': 'tab1',\n                            'className': null,\n                            'params': {\n                                'existingColspan': 1,\n                                'maxColspan': 1\n                            },\n                            'dateDisplayFormat': null,\n                            'layout': {\n                                'row': -1,\n                                'column': -1,\n                                'colspan': 1\n                            },\n                            'sizeX': 1,\n                            'sizeY': 1,\n                            'row': -1,\n                            'col': -1,\n                            'visibilityCondition': null,\n                            'endpoint': null,\n                            'requestHeaders': null\n                        }\n                    ]\n                }\n            }\n        ],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'gridsterForm': false,\n        'globalDateFormat': 'D-M-YYYY'\n    };\n\n    simpleFormDefinition = {\n        'id': 1001,\n        'name': 'SIMPLE_FORM_EXAMPLE',\n        'description': '',\n        'version': 1,\n        'lastUpdatedBy': 2,\n        'lastUpdatedByFullName': 'Test01 01Test',\n        'lastUpdated': '2018-02-26T17:44:04.543+0000',\n        'stencilSetId': 0,\n        'referenceId': null,\n        'taskId': '9999',\n        'formDefinition': {\n            'tabs': [],\n            'fields': [\n                {\n                    'fieldType': 'ContainerRepresentation',\n                    'id': '1519666726245',\n                    'name': 'Label',\n                    'type': 'container',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'dateDisplayFormat': null,\n                    'layout': null,\n                    'sizeX': 2,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null,\n                    'numberOfColumns': 2,\n                    'fields': {\n                        '1': [\n                            {\n                                'fieldType': 'RestFieldRepresentation',\n                                'id': 'typeaheadField',\n                                'name': 'TypeaheadField',\n                                'type': 'typeahead',\n                                'value': null,\n                                'required': false,\n                                'readOnly': false,\n                                'overrideId': false,\n                                'colspan': 1,\n                                'placeholder': null,\n                                'minLength': 0,\n                                'maxLength': 0,\n                                'minValue': null,\n                                'maxValue': null,\n                                'regexPattern': null,\n                                'optionType': null,\n                                'hasEmptyValue': null,\n                                'options': null,\n                                'restUrl': 'https://jsonplaceholder.typicode.com/users',\n                                'restResponsePath': null,\n                                'restIdProperty': 'id',\n                                'restLabelProperty': 'name',\n                                'tab': null,\n                                'className': null,\n                                'params': {\n                                    'existingColspan': 1,\n                                    'maxColspan': 2\n                                },\n                                'dateDisplayFormat': null,\n                                'layout': {\n                                    'row': -1,\n                                    'column': -1,\n                                    'colspan': 1\n                                },\n                                'sizeX': 1,\n                                'sizeY': 1,\n                                'row': -1,\n                                'col': -1,\n                                'visibilityCondition': null,\n                                'endpoint': null,\n                                'requestHeaders': null\n                            }\n                        ],\n                        '2': [\n                            {\n                                'fieldType': 'RestFieldRepresentation',\n                                'id': 'radioButton',\n                                'name': 'RadioButtons',\n                                'type': 'radio-buttons',\n                                'value': null,\n                                'required': false,\n                                'readOnly': false,\n                                'overrideId': false,\n                                'colspan': 1,\n                                'placeholder': null,\n                                'minLength': 0,\n                                'maxLength': 0,\n                                'minValue': null,\n                                'maxValue': null,\n                                'regexPattern': null,\n                                'optionType': null,\n                                'hasEmptyValue': null,\n                                'options': [\n                                    {\n                                        'id': 'option_1',\n                                        'name': 'Option 1'\n                                    },\n                                    {\n                                        'id': 'option_2',\n                                        'name': 'Option 2'\n                                    },\n                                    {\n                                        'id': 'option_3',\n                                        'name': 'Option 3'\n                                    }\n                                ],\n                                'restUrl': null,\n                                'restResponsePath': null,\n                                'restIdProperty': null,\n                                'restLabelProperty': null,\n                                'tab': null,\n                                'className': null,\n                                'params': {\n                                    'existingColspan': 1,\n                                    'maxColspan': 1\n                                },\n                                'dateDisplayFormat': null,\n                                'layout': {\n                                    'row': -1,\n                                    'column': -1,\n                                    'colspan': 1\n                                },\n                                'sizeX': 1,\n                                'sizeY': 2,\n                                'row': -1,\n                                'col': -1,\n                                'visibilityCondition': null,\n                                'endpoint': null,\n                                'requestHeaders': null\n                            }\n                        ]\n                    }\n                },\n                {\n                    'fieldType': 'ContainerRepresentation',\n                    'id': '1519666735185',\n                    'name': 'Label',\n                    'type': 'container',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'dateDisplayFormat': null,\n                    'layout': null,\n                    'sizeX': 2,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null,\n                    'numberOfColumns': 2,\n                    'fields': {\n                        '1': [\n                            {\n                                'fieldType': 'RestFieldRepresentation',\n                                'id': 'selectBox',\n                                'name': 'SelectBox',\n                                'type': 'dropdown',\n                                'value': 'Choose one...',\n                                'required': false,\n                                'readOnly': false,\n                                'overrideId': false,\n                                'colspan': 1,\n                                'placeholder': null,\n                                'minLength': 0,\n                                'maxLength': 0,\n                                'minValue': null,\n                                'maxValue': null,\n                                'regexPattern': null,\n                                'optionType': 'manual',\n                                'hasEmptyValue': true,\n                                'options': [\n                                    {\n                                        'id': 'empty',\n                                        'name': 'Choose one...'\n                                    },\n                                    {\n                                        'id': 'option_1',\n                                        'name': '1'\n                                    },\n                                    {\n                                        'id': 'option_2',\n                                        'name': '2'\n                                    },\n                                    {\n                                        'id': 'option_3',\n                                        'name': '3'\n                                    }\n                                ],\n                                'restUrl': null,\n                                'restResponsePath': null,\n                                'restIdProperty': null,\n                                'restLabelProperty': null,\n                                'tab': null,\n                                'className': null,\n                                'params': {\n                                    'existingColspan': 1,\n                                    'maxColspan': 2\n                                },\n                                'dateDisplayFormat': null,\n                                'layout': {\n                                    'row': -1,\n                                    'column': -1,\n                                    'colspan': 1\n                                },\n                                'sizeX': 1,\n                                'sizeY': 1,\n                                'row': -1,\n                                'col': -1,\n                                'visibilityCondition': null,\n                                'endpoint': null,\n                                'requestHeaders': null\n                            }\n                        ],\n                        '2': []\n                    }\n                }\n            ],\n            'outcomes': [],\n            'javascriptEvents': [],\n            'className': '',\n            'style': '',\n            'customFieldTemplates': {},\n            'metadata': {},\n            'variables': [],\n            'customFieldsValueInfo': {},\n            'gridsterForm': false\n        }\n    };\n\n    cloudFormDefinition = {\n        'formRepresentation': {\n            'id': 'text-form',\n            'name': 'test-start-form',\n            'version': 0,\n            'description': '',\n            'formDefinition': {\n                'tabs': [],\n                'fields': [\n                    {\n                        'id': '1511517333638',\n                        'type': 'container',\n                        'fieldType': 'ContainerRepresentation',\n                        'name': 'Label',\n                        'tab': null,\n                        'numberOfColumns': 2,\n                        'fields': {\n                            '1': [\n                                {\n                                    'fieldType': 'FormFieldRepresentation',\n                                    'id': 'texttest',\n                                    'name': 'texttest',\n                                    'type': 'text',\n                                    'value': null,\n                                    'required': false,\n                                    'placeholder': 'text',\n                                    'params': {\n                                        'existingColspan': 2,\n                                        'maxColspan': 6,\n                                        'inputMaskReversed': true,\n                                        'inputMask': '0#',\n                                        'inputMaskPlaceholder': '(0-9)'\n                                    }\n                                }\n                            ],\n                            '2': [{\n                                'fieldType': 'AttachFileFieldRepresentation',\n                                'id': 'attachfiletest',\n                                'name': 'attachfiletest',\n                                'type': 'upload',\n                                'required': true,\n                                'colspan': 2,\n                                'placeholder': 'attachfile',\n                                'params': {\n                                    'existingColspan': 2,\n                                    'maxColspan': 2,\n                                    'fileSource': {\n                                        'serviceId': 'local-file',\n                                        'name': 'Local File'\n                                    },\n                                    'multiple': true,\n                                    'link': false\n                                },\n                                'visibilityCondition': {\n                                }\n                            }]\n                        }\n                    }\n                ],\n                'outcomes': [],\n                'metadata': {\n                    'property1': 'value1',\n                    'property2': 'value2'\n                },\n                'variables': [\n                    {\n                        'name': 'variable1',\n                        'type': 'string',\n                        'value': 'value1'\n                    },\n                    {\n                        'name': 'variable2',\n                        'type': 'string',\n                        'value': 'value2'\n                    }\n                ]\n            }\n        }\n    };\n\n    getEasyForm(): any {\n        return this.easyForm;\n    }\n\n    getFormDefinition(): any {\n        return this.formDefinition;\n    }\n\n    getSimpleFormDefinition(): any {\n        return this.simpleFormDefinition;\n    }\n\n    getFormCloudDefinition(): any {\n        return this.cloudFormDefinition;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { StorageService } from './storage.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { DemoForm } from '../mock/form/demo-form.mock';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CoreAutomationService {\n\n    public forms = new DemoForm();\n\n    constructor(private appConfigService: AppConfigService,\n                private alfrescoApiService: AlfrescoApiService,\n                private userPreferencesService: UserPreferencesService,\n                private storageService: StorageService) {\n    }\n\n    setup() {\n        const adfProxy = window['adf'] || {};\n\n        adfProxy.setConfigField = (field: string, value: string) => {\n            this.appConfigService.config[field] = JSON.parse(value);\n        };\n\n        adfProxy.setStorageItem = (key: string, data: string) => {\n            this.storageService.setItem(key, data);\n        };\n\n        adfProxy.setUserPreference = (key: string, data: any) => {\n            this.userPreferencesService.set(key, data);\n        };\n\n        adfProxy.setFormInEditor = (json: string) => {\n            this.forms.formDefinition = JSON.parse(json);\n        };\n\n        adfProxy.setCloudFormInEditor = (json: string) => {\n            this.forms.cloudFormDefinition = JSON.parse(json);\n        };\n\n        adfProxy.clearStorage = () => {\n            this.storageService.clear();\n        };\n\n        adfProxy.apiReset = () => {\n            this.alfrescoApiService.reset();\n        };\n\n        window['adf'] = adfProxy;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PipeModule } from '../pipes/pipe.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material';\n\n@Component({\n    selector: 'adf-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-icon' }\n})\nexport class IconComponent {\n    private _value = '';\n    private _isCustom = false;\n\n    /** Theme color palette for the component. */\n    @Input()\n    color: ThemePalette;\n\n    get value(): string {\n        return this._value;\n    }\n\n    /** Icon value, which can be either a ligature name or a custom icon in the format `[namespace]:[name]`. */\n    @Input()\n    set value(value: string) {\n        this._value = value || 'settings';\n        this._isCustom = this._value.includes(':');\n    }\n\n    get isCustom(): boolean {\n        return this._isCustom;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { IconComponent } from './icon.component';\nimport { MatIconModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    declarations: [\n        IconComponent\n    ],\n    exports: [\n        IconComponent\n    ],\n    providers: [\n        ThumbnailService\n    ]\n})\nexport class IconModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { NotificationService } from '../services/notification.service';\nimport { NotificationModel } from '../models/notification.model';\nimport { MatMenuTrigger } from '@angular/material';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'adf-notification-history',\n    styleUrls: ['notification-history.component.scss'],\n    templateUrl: 'notification-history.component.html'\n})\nexport class NotificationHistoryComponent implements OnDestroy {\n\n    onDestroy$ = new Subject<boolean>();\n\n    notifications: NotificationModel[] = [];\n\n    @ViewChild(MatMenuTrigger)\n    trigger: MatMenuTrigger;\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    constructor(\n        private notificationService: NotificationService) {\n        this.notificationService.messages\n            .pipe(takeUntil(this.onDestroy$))\n            .subscribe((message) => {\n            this.notifications.push(message);\n        });\n    }\n\n    isEmptyNotification(): boolean {\n        return (!this.notifications || this.notifications.length === 0);\n    }\n\n    onKeyPress(event: KeyboardEvent) {\n        this.closeUserModal(event);\n    }\n\n    markAsRead() {\n        this.notifications = [];\n    }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n    }\n\n    private closeUserModal($event: KeyboardEvent) {\n        if ($event.keyCode === 27) {\n            this.trigger.closeMenu();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { NotificationHistoryComponent } from './notification-history.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        NotificationHistoryComponent\n    ],\n    exports: [\n        NotificationHistoryComponent\n    ]\n})\nexport class NotificationHistoryModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EcmCompanyModel {\n      organization: string;\n      address1: string;\n      address2: string;\n      address3: string;\n      postcode: string;\n      telephone: string;\n      fax: string;\n      email: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the user redirection guard.*\n */\n\nexport class RedirectionModel {\n    provider: string;\n    url?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.provider = obj.provider;\n            this.url = obj.url || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from '@alfresco/js-api';\n\nexport class PaginationModel extends Pagination {\n    merge?: boolean;\n\n    constructor(input?: any) {\n        super(input);\n        if (input) {\n            this.count = input.count;\n            this.hasMoreItems = input.hasMoreItems ? input.hasMoreItems : false;\n            this.merge = input.merge ? input.merge : false;\n            this.totalItems = input.totalItems;\n            this.skipCount = input.skipCount;\n            this.maxItems = input.maxItems;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RequestPaginationModel {\n\n    skipCount?: number;\n\n    maxItems?: number;\n\n    merge?: boolean = false;\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DecimalNumberModel {\n    minIntegerDigits: number;\n    minFractionDigits: number;\n    maxFractionDigits: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.minIntegerDigits = obj.minIntegerDigits;\n            this.minFractionDigits = obj.minFractionDigits;\n            this.maxFractionDigits = obj.maxFractionDigits;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:adf-file-name  */\nexport class AlfrescoApiMock {\n\n    login(username: string, password: string) {\n        return new Promise((resolve) => {\n            resolve('TICKET_4479f4d3bb155195879bfbb8d5206f433488a1b1');\n        });\n    }\n\n    logout() {\n        return new Promise((resolve) => {\n            resolve('logout');\n        });\n    }\n\n    changeConfig() {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class AppConfigServiceMock extends AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent'\n    };\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    load(): Promise<any> {\n        return new Promise((resolve) => {\n            this.onLoadSubject.next(this.config);\n            resolve(this.config);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeApps = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, defaultAppId: null, name: 'Sales-Fakes-App', description: 'desc-fake1', modelId: 22,\n            theme: 'theme-1-fake', icon: 'glyphicon-asterisk', 'deploymentId': '111', 'tenantId': null\n        },\n        {\n            id: 2, defaultAppId: null, name: 'health-care-Fake', description: 'desc-fake2', modelId: 33,\n            theme: 'theme-2-fake', icon: 'glyphicon-asterisk', 'deploymentId': '444', 'tenantId': null\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { RedirectionModel } from '../models/redirection.model';\n\n// TODO: should be extending AuthenticationService\nexport class AuthenticationMock /*extends AuthenticationService*/ {\n    private redirectUrl: RedirectionModel = null;\n\n    setRedirectUrl(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    getRedirectUrl(): string|null {\n        return this.redirectUrl ? this.redirectUrl.url : null;\n    }\n\n    // TODO: real auth service returns Observable<string>\n    login(username: string, password: string): Observable<{ type: string, ticket: any }> {\n        if (username === 'fake-username' && password === 'fake-password') {\n            return of({ type: 'type', ticket: 'ticket'});\n        }\n\n        if (username === 'fake-username-CORS-error' && password === 'fake-password') {\n            return throwError({\n                error: {\n                    crossDomain: true,\n                    message: 'ERROR: the network is offline, Origin is not allowed by Access-Control-Allow-Origin'\n                }\n            });\n        }\n\n        if (username === 'fake-username-CSRF-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: Invalid CSRF-token', status: 403});\n        }\n\n        if (username === 'fake-username-ECM-access-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: 00170728 Access Denied.  The system is currently in read-only mode', status: 403});\n        }\n\n        return throwError('Fake server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeBpmUserNoImage = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: undefined,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmUser = {\n    apps: [],\n    capabilities: null,\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-bpm-first-name',\n    lastName: 'fake-bpm-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 12,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmEditedUser = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 'src/assets/images/bpmImg.gif',\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\n\nexport let fakeUser1 = { id: 1, email: 'fake-email@dom.com', firstName: 'firstName', lastName: 'lastName' };\n\nexport let fakeUser2 = { id: 1001, email: 'some-one@somegroup.com', firstName: 'some', lastName: 'one' };\n\nexport let fakeTasksComment = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, message: 'fake-message-1', created: '', createdBy: fakeUser1\n        },\n        {\n            id: 2, message: 'fake-message-2', created: '', createdBy: fakeUser1\n        }\n    ]\n};\n\nexport let fakeProcessComment = new CommentModel({id: 1, message: 'Test', created: new Date('2016-11-10T03:37:30.010+0000'), createdBy: new UserProcessModel({\n    id: 13,\n    firstName: 'Wilbur',\n    lastName: 'Adams',\n    email: 'wilbur@app.com'\n})});\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CookieService } from '../services/cookie.service';\n\nexport class CookieServiceMock extends CookieService {\n\n    /** @override */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getItem(key: string): string | null {\n        return this[key] && this[key].data || null;\n    }\n\n    /** @override */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        this[key] = {data, expiration, path};\n    }\n\n    /** @override */\n    clear() {\n        Object.keys(this).forEach((key) => {\n            if (this.hasOwnProperty(key) && typeof(this[key]) !== 'function') {\n                this[key] = undefined;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EcmCompanyModel } from '../models/ecm-company.model';\n\nexport let fakeEcmCompany: EcmCompanyModel = {\n    organization: 'company-fake-name',\n    address1: 'fake-address-1',\n    address2: 'fake-address-2',\n    address3: 'fake-address-3',\n    postcode: 'fAk1',\n    telephone: '00000000',\n    fax: '11111111',\n    email: 'fakeCompany@fake.com'\n};\n\nexport let fakeEcmUser = {\n    id: 'fake-id',\n    firstName: 'fake-ecm-first-name',\n    lastName: 'fake-ecm-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'job-ecm-test',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmUserNoImage = {\n    id: 'fake-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: null,\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: null,\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmEditedUser = {\n    id: 'fake-id',\n    firstName: null,\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'test job',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EventMock {\n\n    static keyDown(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keydown');\n        document.dispatchEvent(event);\n    }\n\n    static keyUp(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keyup');\n        document.dispatchEvent(event);\n    }\n\n    static resizeMobileView() {\n        // todo: no longer compiles with TS 2.0.2 as innerWidth/innerHeight are readonly fields\n        /*\n        window.innerWidth = 320;\n        window.innerHeight = 568;\n        */\n        window.dispatchEvent(new Event('resize'));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeRendition = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'NOT_CREATED'\n    }\n};\n\nexport let fakeRenditionCreated = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'CREATED'\n    }\n};\n\nexport let fakeRenditionsList = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            }\n        ]\n    }\n};\n\nexport let fakeRenditionsListWithACreated = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'CREATED'\n                }\n            }\n        ]\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeSearch = {\n    list: {\n        pagination: {\n            count: 1,\n            hasMoreItems: false,\n            totalItems: 1,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: '123',\n                    name: 'MyDoc',\n                    content: {\n                        mimetype: 'text/plain'\n                    },\n                    createdByUser: {\n                        displayName: 'John Doe'\n                    },\n                    modifiedByUser: {\n                        displayName: 'John Doe'\n                    }\n                }\n            }\n        ]\n    }\n};\n\nexport let mockError = {\n    error: {\n        errorKey: 'Search failed',\n        statusCode: 400,\n        briefSummary: '08220082 search failed',\n        stackTrace: 'For security reasons the stack trace is no longer displayed, but the property is kept for previous versions.',\n        descriptionURL: 'https://api-explorer.alfresco.com'\n    }\n};\n\nexport let searchMockApi = {\n    core: {\n        queriesApi: {\n            findNodes: (term, opts) => Promise.resolve(fakeSearch)\n        }\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationService } from '../services/translation.service';\n\nexport interface LangChangeEvent {\n    lang: string;\n    translations: any;\n}\n\nexport class TranslationMock implements TranslationService {\n\n    defaultLang: string = 'en';\n    userLang: string;\n    customLoader: any;\n\n    translate: any = {\n        onLangChange: new EventEmitter<LangChangeEvent>()\n    };\n\n    addTranslationFolder() {}\n\n    onTranslationChanged() {}\n\n    use(): any {}\n\n    loadTranslation() {}\n\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return of(key);\n    }\n\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { StorageService } from '../services/storage.service';\n\n/* tslint:disable:adf-file-name */\n@Injectable()\nexport class AlfrescoApiServiceMock extends AlfrescoApiService {\n\n    constructor(protected appConfig: AppConfigService,\n                protected storageService: StorageService) {\n        super(appConfig, storageService);\n        if (!this.alfrescoApi) {\n            this.initAlfrescoApi();\n        }\n    }\n\n    initialize(): Promise<any> {\n        return new Promise((resolve) => {\n            this.alfrescoApiInitializedSubject.next();\n            resolve();\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeForm = {\n    id: 1001,\n    name: 'ISSUE_FORM',\n    processDefinitionId: 'ISSUE_APP:1:2504',\n    processDefinitionName: 'ISSUE_APP',\n    processDefinitionKey: 'ISSUE_APP',\n    taskId: '7506',\n    taskDefinitionKey: 'sid-F67A2996-1684-4774-855A-4591490081FD',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212398417',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'label',\n                        name: 'Label',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'test1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'test2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'test3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio',\n                        name: 'radio',\n                        type: 'radio-buttons',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: [\n                            {\n                                id: 'option_1',\n                                name: 'Option 1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'Option 2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'Option 3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 2,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212413062',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FormModel, FormValues } from '../../form/components/widgets/core/index';\n\nexport let formTest = new FormModel({});\n\nexport let fakeTaskProcessVariableModels = [\n    { id: 'TEST_VAR_1', type: 'string', value: 'test_value_1' },\n    { id: 'TEST_VAR_2', type: 'string', value: 'test_value_2' },\n    { id: 'TEST_VAR_3', type: 'string', value: 'test_value_3' }\n];\n\nexport let formValues: FormValues = {\n    'test_1': 'value_1',\n    'test_2': 'value_2',\n    'test_3': 'value_1',\n    'test_4': 'dropdown_id',\n    'test_5': 'dropdown_label',\n    'dropdown': { 'id': 'dropdown_id', 'name': 'dropdown_label' }\n};\n\nexport let fakeFormJson = {\n    id: '9999',\n    name: 'FORM_VISIBILITY',\n    processDefinitionId: 'PROCESS_TEST:9:9999',\n    processDefinitionName: 'PROCESS_TEST',\n    processDefinitionKey: 'PROCESS_TEST',\n    taskId: '999',\n    taskName: 'TEST',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '000000000000000000',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_TEST',\n                        name: 'FIELD_TEST',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_WITH_CONDITION',\n                        name: 'FIELD_WITH_CONDITION',\n                        type: 'text',\n                        value: 'field_with_condition_value',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'LEFT_FORM_FIELD_ID',\n                        name: 'LEFT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'LEFT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'RIGHT_FORM_FIELD_ID',\n                        name: 'RIGHT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ]\n            }\n        }\n    ],\n    variables: [\n        {\n            'id': 'e621e8ff-42a6-499c-8121-33c7c35d8641',\n            'name': 'age',\n            'type': 'integer',\n            'value': 11\n        },\n        {\n            'id': '4f8aa99e-8526-429c-9d99-809978489d96',\n            'name': 'name',\n            'type': 'string',\n            'value': 'abc'\n        },\n        {\n            'id': '0207b649-ff07-4f3a-a589-d10afa507b9b',\n            'name': 'dob',\n            'type': 'date',\n            'value': '2019-05-13'\n        }\n    ]\n};\n\nexport let complexVisibilityJsonVisible = {\n    'id': 47591,\n    'name': 'Test-visibility',\n    'description': '',\n    'version': 4,\n    'lastUpdatedBy': 13,\n    'lastUpdatedByFullName': 'romano romano',\n    'lastUpdated': '2019-06-11T11:04:36.870+0000',\n    'stencilSetId': 0,\n    'referenceId': null,\n    'formDefinition': {\n        'tabs': [],\n        'fields': [{\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246123312',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label',\n                    'name': 'Label',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label1',\n                    'name': 'Label1',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246128696',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label4',\n                    'name': 'Label4',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label3',\n                    'name': 'Label3',\n                    'type': 'text',\n                    'value': '',\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246126964',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label2',\n                    'name': 'Label2',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label5',\n                    'name': 'Label5',\n                    'type': 'boolean',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': {\n                        'leftFormFieldId': 'label',\n                        'leftRestResponseId': null,\n                        'operator': '==',\n                        'rightValue': 'aaa',\n                        'rightType': null,\n                        'rightFormFieldId': '',\n                        'rightRestResponseId': '',\n                        'nextConditionOperator': 'and',\n                        'nextCondition': {\n                            'leftFormFieldId': 'label1',\n                            'leftRestResponseId': null,\n                            'operator': '!=',\n                            'rightValue': 'aaa',\n                            'rightType': null,\n                            'rightFormFieldId': '',\n                            'rightRestResponseId': '',\n                            'nextConditionOperator': 'and',\n                            'nextCondition': {\n                                'leftFormFieldId': 'label2',\n                                'leftRestResponseId': null,\n                                'operator': '!empty',\n                                'rightValue': null,\n                                'rightType': null,\n                                'rightFormFieldId': '',\n                                'rightRestResponseId': '',\n                                'nextConditionOperator': 'or',\n                                'nextCondition': {\n                                    'leftFormFieldId': 'label3',\n                                    'leftRestResponseId': null,\n                                    'operator': 'empty',\n                                    'rightValue': null,\n                                    'rightType': null,\n                                    'rightFormFieldId': '',\n                                    'rightRestResponseId': '',\n                                    'nextConditionOperator': null,\n                                    'nextCondition': null\n                                }\n                            }\n                        }\n                    }\n                }]\n            }\n        }],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'customFieldsValueInfo': {},\n        'gridsterForm': false\n    }\n};\nexport let complexVisibilityJsonNotVisible = {\n    'id': 47591,\n    'name': 'Test-visibility',\n    'description': '',\n    'version': 4,\n    'lastUpdatedBy': 13,\n    'lastUpdatedByFullName': 'romano romano',\n    'lastUpdated': '2019-06-11T11:04:36.870+0000',\n    'stencilSetId': 0,\n    'referenceId': null,\n    'formDefinition': {\n        'tabs': [],\n        'fields': [{\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246123312',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label',\n                    'name': 'Label',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label1',\n                    'name': 'Label1',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246128696',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label4',\n                    'name': 'Label4',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label3',\n                    'name': 'Label3',\n                    'type': 'text',\n                    'value': 'OPSSS',\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }]\n            }\n        }, {\n            'fieldType': 'ContainerRepresentation',\n            'id': '1560246126964',\n            'name': 'Label',\n            'type': 'container',\n            'value': null,\n            'required': false,\n            'readOnly': false,\n            'overrideId': false,\n            'colspan': 1,\n            'placeholder': null,\n            'minLength': 0,\n            'maxLength': 0,\n            'minValue': null,\n            'maxValue': null,\n            'regexPattern': null,\n            'optionType': null,\n            'hasEmptyValue': null,\n            'options': null,\n            'restUrl': null,\n            'restResponsePath': null,\n            'restIdProperty': null,\n            'restLabelProperty': null,\n            'tab': null,\n            'className': null,\n            'dateDisplayFormat': null,\n            'layout': null,\n            'sizeX': 2,\n            'sizeY': 1,\n            'row': -1,\n            'col': -1,\n            'visibilityCondition': null,\n            'numberOfColumns': 2,\n            'fields': {\n                '1': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label2',\n                    'name': 'Label2',\n                    'type': 'text',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 2 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': null\n                }],\n                '2': [{\n                    'fieldType': 'FormFieldRepresentation',\n                    'id': 'label5',\n                    'name': 'Label5',\n                    'type': 'boolean',\n                    'value': null,\n                    'required': false,\n                    'readOnly': false,\n                    'overrideId': false,\n                    'colspan': 1,\n                    'placeholder': null,\n                    'minLength': 0,\n                    'maxLength': 0,\n                    'minValue': null,\n                    'maxValue': null,\n                    'regexPattern': null,\n                    'optionType': null,\n                    'hasEmptyValue': null,\n                    'options': null,\n                    'restUrl': null,\n                    'restResponsePath': null,\n                    'restIdProperty': null,\n                    'restLabelProperty': null,\n                    'tab': null,\n                    'className': null,\n                    'params': { 'existingColspan': 1, 'maxColspan': 1 },\n                    'dateDisplayFormat': null,\n                    'layout': { 'row': -1, 'column': -1, 'colspan': 1 },\n                    'sizeX': 1,\n                    'sizeY': 1,\n                    'row': -1,\n                    'col': -1,\n                    'visibilityCondition': {\n                        'leftFormFieldId': 'label',\n                        'leftRestResponseId': null,\n                        'operator': '==',\n                        'rightValue': 'aaa',\n                        'rightFormFieldId': '',\n                        'rightRestResponseId': '',\n                        'nextConditionOperator': 'and',\n                        'nextCondition': {\n                            'leftFormFieldId': 'label1',\n                            'leftRestResponseId': null,\n                            'operator': '!=',\n                            'rightValue': 'aaa',\n                            'rightFormFieldId': '',\n                            'rightRestResponseId': '',\n                            'nextConditionOperator': 'and',\n                            'nextCondition': {\n                                'leftFormFieldId': 'label2',\n                                'leftRestResponseId': null,\n                                'operator': '!empty',\n                                'rightValue': null,\n                                'rightFormFieldId': '',\n                                'rightRestResponseId': '',\n                                'nextConditionOperator': 'or',\n                                'nextCondition': {\n                                    'leftFormFieldId': 'label3',\n                                    'leftRestResponseId': null,\n                                    'operator': 'empty',\n                                    'rightValue': null,\n                                    'rightFormFieldId': '',\n                                    'rightRestResponseId': '',\n                                    'nextConditionOperator': null,\n                                    'nextCondition': null\n                                }\n                            }\n                        }\n                    }\n                }]\n            }\n        }],\n        'outcomes': [],\n        'javascriptEvents': [],\n        'className': '',\n        'style': '',\n        'customFieldTemplates': {},\n        'metadata': {},\n        'variables': [],\n        'customFieldsValueInfo': {},\n        'gridsterForm': false\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TestBed, TestModuleMetadata } from '@angular/core/testing';\n\ninterface DoneFn extends Function {\n    (): void;\n    fail: (message?: Error | string) => void;\n}\n\ndeclare function beforeAll(action: (done: DoneFn) => void, timeout?: number): void;\ndeclare function afterAll(action: (done: DoneFn) => void, timeout?: number): void;\n\nconst resetTestingModule = TestBed.resetTestingModule;\nconst preventAngularFromResetting = () => (TestBed.resetTestingModule = () => TestBed);\nconst allowAngularToReset = () => (TestBed.resetTestingModule = resetTestingModule);\n\nexport const setupTestBed = (moduleDef: TestModuleMetadata) => {\n    beforeAll((done) =>\n        (async () => {\n            localStorage.clear();\n            sessionStorage.clear();\n            resetTestingModule();\n            preventAngularFromResetting();\n            TestBed.configureTestingModule(moduleDef);\n            await TestBed.compileComponents();\n\n            // prevent Angular from resetting testing module\n            TestBed.resetTestingModule = () => TestBed;\n        })()\n            .then(done)\n            .catch(done.fail)\n    );\n\n    afterAll(() => allowAngularToReset());\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from './alfresco-api.service';\n\nexport function startupServiceFactory(alfrescoApiService: AlfrescoApiService): Function {\n    return () => alfrescoApiService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DirectionalityConfigService } from '../services/directionality-config.service';\n\nexport function directionalityConfigFactory(\n    directionalityConfigService: DirectionalityConfigService\n): Function { return () => directionalityConfigService; }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Directionality, Direction } from '@angular/cdk/bidi';\nimport { UserPreferencesService } from '../services/user-preferences.service';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DirectionalityConfigService {\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private rendererFactory: RendererFactory2,\n        private userPreferencesService: UserPreferencesService,\n        private directionality: Directionality\n    ) {\n        const renderer: Renderer2 = this.rendererFactory.createRenderer(null, null);\n\n        this.userPreferencesService\n            .select('textOrientation')\n            .subscribe((direction: Direction) => {\n                renderer.setAttribute(this.document.body, 'dir', direction);\n                (<any> this.directionality).value = direction;\n            });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader, TranslateStore, TranslateService } from '@ngx-translate/core';\n\nimport { MaterialModule } from './material.module';\nimport { AboutModule } from './about/about.module';\nimport { AppConfigModule } from './app-config/app-config.module';\nimport { CardViewModule } from './card-view/card-view.module';\nimport { ContextMenuModule } from './context-menu/context-menu.module';\nimport { DataColumnModule } from './data-column/data-column.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { InfoDrawerModule } from './info-drawer/info-drawer.module';\nimport { LanguageMenuModule } from './language-menu/language-menu.module';\nimport { LoginModule } from './login/login.module';\nimport { PaginationModule } from './pagination/pagination.module';\nimport { HostSettingsModule } from './settings/host-settings.module';\nimport { ToolbarModule } from './toolbar/toolbar.module';\nimport { UserInfoModule } from './userinfo/userinfo.module';\nimport { ViewerModule } from './viewer/viewer.module';\nimport { FormBaseModule } from './form/form-base.module';\nimport { SidenavLayoutModule } from './layout/layout.module';\nimport { CommentsModule } from './comments/comments.module';\nimport { ButtonsMenuModule } from './buttons-menu/buttons-menu.module';\nimport { TemplateModule } from './templates/template.module';\nimport { ClipboardModule } from './clipboard/clipboard.module';\nimport { NotificationHistoryModule } from './notification-history/notification-history.module';\n\nimport { DirectiveModule } from './directives/directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { PipeModule } from './pipes/pipe.module';\n\nimport { AlfrescoApiService } from './services/alfresco-api.service';\nimport { TranslationService } from './services/translation.service';\nimport { startupServiceFactory } from './services/startup-service-factory';\nimport { SortingPickerModule } from './sorting-picker/sorting-picker.module';\nimport { IconModule } from './icon/icon.module';\nimport { TranslateLoaderService } from './services/translate-loader.service';\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\nimport { directionalityConfigFactory } from './services/directionality-config-factory';\nimport { DirectionalityConfigService } from './services/directionality-config.service';\n\n@NgModule({\n    imports: [\n        TranslateModule,\n        ExtensionsModule.forChild(),\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        IconModule,\n        SortingPickerModule,\n        NotificationHistoryModule\n    ],\n    exports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        TranslateModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        SortingPickerModule,\n        IconModule,\n        NotificationHistoryModule\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                TranslateStore,\n                TranslateService,\n                { provide: TranslateLoader, useClass: TranslateLoaderService },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: startupServiceFactory,\n                    deps: [\n                        AlfrescoApiService\n                    ],\n                    multi: true\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: directionalityConfigFactory,\n                    deps: [ DirectionalityConfigService ],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule\n        };\n    }\n\n    constructor(translation: TranslationService) {\n        translation.addTranslationFolder('adf-core', 'assets/adf-core');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefinitionTwoTextFields = {\n    id: 20,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:1:153',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '159',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507044399260',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'firstname',\n                        name: 'firstName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'lastname',\n                        name: 'lastName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionDropdownField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionRequiredField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formReadonlyTwoTextFields = {\n    id: 22,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:3:182',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '188',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n      {\n        fieldType: 'ContainerRepresentation',\n        id: '1507044399260',\n        name: 'Label',\n        type: 'container',\n        value: null,\n        required: false,\n        readOnly: false,\n        overrideId: false,\n        colspan: 1,\n        placeholder: null,\n        minLength: 0,\n        maxLength: 0,\n        minValue: null,\n        maxValue: null,\n        regexPattern: null,\n        optionType: null,\n        hasEmptyValue: null,\n        options: null,\n        restUrl: null,\n        restResponsePath: null,\n        restIdProperty: null,\n        restLabelProperty: null,\n        tab: null,\n        className: null,\n        dateDisplayFormat: null,\n        layout: null,\n        sizeX: 2,\n        sizeY: 1,\n        row: -1,\n        col: -1,\n        visibilityCondition: null,\n        numberOfColumns: 2,\n        fields: {\n          '1': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'firstname',\n              name: 'firstName',\n              type: 'readonly',\n              value: 'fakeFirstName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 2,\n                field: {\n                  id: 'firstname',\n                  name: 'firstName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ],\n          '2': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'lastname',\n              name: 'lastName',\n              type: 'readonly',\n              value: 'fakeLastName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 1,\n                field: {\n                  id: 'lastname',\n                  name: 'lastName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ]\n        }\n      }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefVisibilitiFieldDependsOnNextOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftType: 'field',\n                            leftValue: 'name',\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefVisibilitiFieldDependsOnPreviousOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftType: 'field',\n                            leftValue: 'name',\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let startFormDateWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormNumberWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'number',\n                        name: 'number widget',\n                        type: 'integer',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormAmountWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'amount',\n                        name: 'amount widget',\n                        type: 'amount',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormRadioButtonWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio-but',\n                        name: 'radio-buttons',\n                        type: 'radio-buttons',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormTextDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'mocktext',\n                        name: 'mockText',\n                        type: 'text',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormDropdownDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'mockTypeDropDown',\n                        name: 'mock DropDown',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'opt1',\n                                name: 'Option-1'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-2'\n                            },\n                            {\n                                id: 'opt3',\n                                name: 'Option-3'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-3'\n                            }\n                        ]\n                    }]}\n        }]\n};\n\nexport let startMockForm = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        },\n        {\n            id: 'start_process',\n            name: 'Start Process'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n\nexport let startMockFormWithTab = {\n    id: 4,\n    taskName: 'Mock Title',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [\n        {\n            id: 'form1',\n            name: 'Tab 1'\n        },\n        {\n            id: 'form2',\n            name: 'Tab 2'\n        }\n    ],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formModelTabs = {\n    id: 16,\n    name: 'start event',\n    description: '',\n    version: 2,\n    lastUpdatedBy: 4,\n    lastUpdatedByFullName: 'User Test',\n    lastUpdated: '2017-10-04T13:00:03.030+0000',\n    stencilSetId: null,\n    referenceId: null,\n    formDefinition: {\n      tabs: [],\n      fields: [\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037668653',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'AmountFieldRepresentation',\n                id: 'label',\n                name: 'Label',\n                type: 'amount',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null,\n                enableFractions: false,\n                currency: null\n              }\n            ],\n            '2': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label1',\n                name: 'Label1',\n                type: 'date',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 1\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ]\n          }\n        },\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037670167',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label2',\n                name: 'Label2',\n                type: 'boolean',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ],\n            '2': []\n          }\n        }\n      ],\n      outcomes: [],\n      javascriptEvents: [],\n      className: '',\n      style: '',\n      customFieldTemplates: {},\n      metadata: {},\n      variables: [],\n      customFieldsValueInfo: {},\n      gridsterForm: false\n    }\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let mockToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ' +\n    'zdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiZmFtaWx5X25hbWUiOiJEb2UiLCJnaXZ' +\n    'lbl9uYW1lIjoiSm9obiIsImFkbWluIjp0cnVlLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwicHJ' +\n    'lZmVycmVkX3VzZXJuYW1lIjoiam9obkRvZTEiLCJqdGkiOiI2MmQ3YjA4NS1hNTJjLTRjZmEtYjA2Zi1' +\n    'hODFhN2IwNjRjZDIiLCJpYXQiOjE1NDM0MTA0NzcsImV4cCI6MTU0MzQxNTIxM30.pSP86kmX3keuU5E3ndaOUq2TzKdJRsuMnBdFz3Y-UEU';\n"]}